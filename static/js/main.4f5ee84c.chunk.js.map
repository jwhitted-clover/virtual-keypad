{"version":3,"sources":["store/store.js","common/constants.js","store/actions/initialState.js","store/configuration/initialState.js","store/connection/initialState.js","store/connection/reducer.js","store/devices/initialState.js","store/error/initialState.js","store/signature/initialState.js","store/transactions/initialState.js","common/retryFetch.js","common/api.js","common/fetchDevices.js","common/format.js","store/rootReducer.js","store/actions/reducer.js","store/actions/constants.js","store/connection/constants.js","store/buffer/reducer.js","store/buffer/initialState.js","store/buffer/constants.js","store/configuration/reducer.js","store/configuration/constants.js","store/devices/reducer.js","store/devices/constants.js","store/error/reducer.js","store/error/constants.js","store/signature/reducer.js","store/signature/constants.js","store/status/reducer.js","store/status/initialState.js","store/status/constants.js","store/transactions/reducer.js","store/transactions/constants.js","store/configuration/selectors.js","store/error/actions.js","store/actions/actions.js","store/connection/selectors.js","store/status/actions.js","common/persist.js","store/configuration/actions.js","store/devices/actions.js","store/thunks/configure.js","store/devices/selectors.js","store/connection/actions.js","store/thunks/connect.js","store/transactions/actions.js","store/thunks/disconnect.js","resources/index.js","i18n.js","store/thunks/reset.js","store/error/selectors.js","store/thunks/showWelcome.js","store/buffer/actions.js","store/buffer/selectors.js","store/transactions/selectors.js","store/thunks/transaction.js","store/thunks/voidPayment.js","store/createStore.js","store/actions/selectors.js","store/signature/selectors.js","store/status/selectors.js","components/Configuration/selectors.js","components/SVG/Logo.js","components/Configuration/Configuration.js","components/Devices/selectors.js","components/Devices/Device.js","components/Devices/Devices.js","components/Keypad/constants.js","store/thunks/acceptPayment.js","store/thunks/acceptSignature.js","store/signature/actions.js","store/thunks/identify.js","store/thunks/invokeInputOption.js","store/thunks/rejectPayment.js","store/thunks/rejectSignature.js","components/Keypad/selectors.js","components/Keypad/Signature.js","components/Keypad/Screen.js","components/Keypad/Key.js","components/Keypad/Keys.js","components/Keypad/Menu.js","components/Transaction/parseAmounts.js","components/Transaction/Transaction.js","components/Transaction/useShowTransaction.js","components/Keypad/History.js","components/Keypad/Keypad.js","components/Error/Error.js","components/App/App.js","components/Error/useError.js","components/App/useMouse.js","components/App/usePreventDoubleTapZoom.js","components/Transaction/useTransactions.js","serviceWorker.js","index.js"],"names":["initialState","ACTION","APP","APP_NAME","APP_BY_NAME","Object","fromEntries","entries","map","arr","reverse","REG_PRODUCTS","TRANSACTION","cloverDomain","merchantId","accessToken","friendlyId","manualCardEntry","autoConnect","loading","undefined","connector","connected","tryDispose","dispose","e","list","selected","message","stack","width","height","strokes","active","data","retryFetch","url","retries","options","fetch","catch","deviceApps","deviceId","URL","toString","method","headers","accept","then","r","json","devices","appsReducer","o","a","app","appName","createPartition","array","size","reduce","last","length","push","api","elements","filter","d","test","productName","partitions","i","Promise","all","id","apps","flat","device","applications","currency","value","n","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","rootReducer","combineReducers","actions","state","type","payload","found","some","description","inputOptions","io","buffer","replace","slice","configuration","connection","request","Clover","remotepay","RetrieveDeviceStatusRequest","setSendLastMessage","retrieveDeviceStatus","error","signature","status","challenges","transactions","cur","timestamp","Date","now","amount","tipAmount","visible","newState","payment","success","externalPaymentId","selectConfiguration","selectFriendlyId","createSelector","selectManualCardEntry","selectCardEntryMethods","manual","CardEntryMethods","DEFAULT","CARD_ENTRY_METHOD_MANUAL","selectAutoConnect","selectConfigurationLoading","setError","setActions","selectConnection","selectConnector","setStatus","text","localStorage","setItem","JSON","stringify","initialDevices","setConfiguration","setDeviceId","setDevices","dispatch","getState","persist","fetchDevices","Error","selectRawDevices","selectDeviceId","selectDevices","sort","b","setConnector","find","factory","CloverConnectorFactoryBuilder","createICloverConnectorFactory","FACTORY_VERSION","VERSION_12","createICloverConnector","WebSocketCloudCloverDeviceConfigurationBuilder","setCloverServer","setFriendlyId","build","Listener","keys","getPrototypeOf","forEach","ICloverConnectorListener","listener","addCloverConnectorListener","initializeConnection","setActiveTransaction","hideTransaction","showWelcomeScreen","resolve","setTimeout","en","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","keySeparator","nsSeparator","interpolation","escapeValue","resources","action","resetDevice","selectError","appendBuffer","selectBuffer","selectRawTransactions","selectTransactions","values","selectActiveTransaction","selectActiveTransactionType","selectActiveTransactionAmount","selectPaymentTransactions","t","selectVisiblePaymentTransactions","cardEntryMethods","CloverID","getNewId","SaleRequest","setAmount","setExternalId","setCardEntryMethods","sale","orderId","VoidPaymentRequest","setPaymentId","setOrderId","setVoidReason","order","VoidReason","USER_CANCEL","voidPayment","parse","getItem","console","warn","store","middleware","applyMiddleware","thunk","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","enhancer","f","createStore","compose","config","configure","selectActions","selectTransactionAction","selectNonTransactionActions","selectSignature","selectSignatureBounds","bounds","points","point","x","X","y","Y","Math","min","max","Infinity","join","selectSignatureLines","selectStatus","selectVisible","useTranslation","className","xmlns","viewBox","aria-labelledby","role","data-name","transform","useDispatch","useSelector","qs","QS","location","search","hash","useState","setCloverDomain","merchant_id","setMerchantId","access_token","setAccessToken","setManualCardEntry","setAutoConnect","submitting","setSubmitting","disabled","useMemo","submit","useCallback","event","preventDefault","reset","onSubmit","onReset","Logo","onChange","target","checked","htmlFor","onClick","cloud","cloudStatus","key","classNames","name","serial","aria-label","title","setDisabled","select","connect","Device","ACTION_CREATOR","acceptPayment","VerifySignatureRequest","setPayment","acceptSignature","disconnect","showMessage","InputOption","setDescription","setKeyPress","keyPress","invokeInputOption","rejectPayment","rejectSignature","showWelcome","transaction","MODE","HISTORY","other","lines","fill","stroke","tranType","tranAmount","translatedStatus","partial","match","Trans","i18nKey","cardEnding","last4","Signature","forwardRef","ref","color","keyCodes","moreActions","onMoreClick","children","show","setShow","useEffect","hide","document","addEventListener","removeEventListener","keydown","includes","code","k","style","transactionAction","actionClicked","setActionClicked","keysDisabled","onAction","actionHandler","keyRef","useRef","keyHeight","setKeyHeight","current","offsetWidth","action1","action2","Key","mode","setMode","toggle","onShowWelcome","onDisconnect","m","readOnly","start","final","remaining","removeToast","useToasts","amounts","parseAmounts","onRemaining","doTransaction","onVoid","cardTransaction","cardType","first6","repeat","trim","card","cardholderName","addToast","appearance","Transaction","autoDismiss","onDismiss","showTransaction","useShowTransaction","sortedTransactions","compareDesc","format","parseTimestamp","parseAmount","Menu","Screen","Keys","History","expanded","setExpanded","querySelectorAll","querySelector","classList","remove","add","useError","mouse","setMouse","onHover","useMouse","ms","expires","handler","touches","click","body","passive","usePreventDoubleTapZoom","useTransactions","Configuration","Devices","Keypad","Boolean","hostname","ReactDOM","render","StrictMode","placement","App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f5ee84c.chunk.js","sourcesContent":["import { STORAGE } from '../common/constants';\nimport createStore from './createStore';\nimport { selectAutoConnect, selectConfiguration } from './configuration/selectors';\nimport { configure } from './thunks';\n\nlet initialState;\ntry {\n  initialState = JSON.parse(localStorage.getItem(STORAGE));\n} catch (e) {\n  console.warn('Failed to initialize state from storage', e);\n} finally {\n  initialState = initialState || undefined;\n}\n\nconst store = createStore(initialState);\n\nconst state = store.getState();\nif (selectAutoConnect(state)) {\n  const config = selectConfiguration(state);\n  store.dispatch(configure(config));\n}\n\nexport default store;\n","export const ACTION = {\n  ACCEPT_PAYMENT: 'ACCEPT_PAYMENT',\n  ACCEPT_SIGNATURE: 'ACCEPT_SIGNATURE',\n  DISCONNECT: 'DISCONNECT',\n  IDENTIFY: 'IDENTIFY',\n  INVOKE_INPUT_OPTION: 'INVOKE_INPUT_OPTION',\n  REJECT_PAYMENT: 'REJECT_PAYMENT',\n  REJECT_SIGNATURE: 'REJECT_SIGNATURE',\n  RESET: 'RESET',\n  SHOW_WELCOME: 'SHOW_WELCOME',\n  TRANSACTION: 'TRANSACTION',\n  VOID_PAYMENT: 'VOID_PAYMENT',\n};\n\nexport const APP = {\n  CLOUD_PAY_DISPLAY: 'CLOUD_PAY_DISPLAY',\n};\n\nexport const APP_NAME = {\n  [APP.CLOUD_PAY_DISPLAY]: 'Cloud Pay Display',\n};\n\nexport const APP_BY_NAME = Object.fromEntries(Object.entries(APP_NAME).map(arr => arr.reverse()));\n\nexport const REG_PRODUCTS = /^(Flex|Mini|Mobile)/i;\n\nexport const REMOTE_APPLICATION_ID = 'virtual-keypad';\n\nexport const STORAGE = 'clover/virtual-keypad';\n\nexport const TRANSACTION = {\n  SALE: 'SALE',\n  REFUND: 'REFUND',\n  VOID: 'VOID',\n};\n","export default [];\n","export default {\n  cloverDomain: '',\n  merchantId: '',\n  accessToken: '',\n  friendlyId: '',\n  manualCardEntry: false,\n  autoConnect: false,\n  loading: undefined,\n};\n","export default {\n  connector: null,\n  connected: false,\n};\n","import Clover from 'remote-pay-cloud';\n\nimport * as CONST from './constants';\nimport initialState from './initialState';\n\nconst tryDispose = connector => {\n  try {\n    // eslint-disable-next-line no-unused-expressions\n    connector?.dispose();\n  } catch (e) {\n    // Do nothing\n  }\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONNECTION_CLEAR:\n      tryDispose(state.connector);\n      return initialState;\n    case CONST.CONNECTION_SET:\n      tryDispose(state.connector);\n      return {\n        ...state,\n        connector: payload,\n        connected: false,\n      };\n    case '@@connector/onDeviceDisconnected':\n      return { ...state, connected: false };\n    case '@@connector/onDeviceReady': {\n      const request = new Clover.remotepay.RetrieveDeviceStatusRequest();\n      request.setSendLastMessage(true);\n      state.connector.retrieveDeviceStatus(request);\n\n      return { ...state, connected: true };\n    }\n    default:\n      return state;\n  }\n};\n","export default {\n  list: [],\n  selected: '',\n};\n","export default {\n  message: null,\n  stack: null,\n};\n","export default {\n  width: 0,\n  height: 0,\n  strokes: [],\n};\n","export default {\n  active: null,\n  data: {},\n};\n","const retryFetch = (url, { retries = 3, ...options }) =>\n  fetch(url, options).catch(e => {\n    if (retries > 1) return retryFetch(url, { retries: retries - 1, ...options });\n    throw e;\n  });\n\nexport default retryFetch;\n","import retryFetch from './retryFetch';\n\nexport const deviceApps = ({ cloverDomain, merchantId, deviceId, accessToken }) =>\n  retryFetch(\n    new URL(\n      `/v2/merchant/${merchantId}/device/${deviceId}/current_apps?access_token=${accessToken}`,\n      cloverDomain\n    ).toString(),\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n    }\n  ).then(r => r.json());\n\nexport const devices = ({ cloverDomain, merchantId, accessToken }) =>\n  retryFetch(new URL(`/v3/merchants/${merchantId}/devices?access_token=${accessToken}`, cloverDomain).toString(), {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    },\n  }).then(r => r.json());\n","import { APP_BY_NAME, REG_PRODUCTS } from './constants';\nimport * as api from './api';\n\nconst appsReducer = (o, a) => {\n  const app = APP_BY_NAME[a.appName];\n  return app ? { ...o, [app]: true } : o;\n};\n\nconst createPartition = (array, size) =>\n  array.reduce(\n    (a, o) => {\n      const last = a[a.length - 1];\n      if (last.length === size) {\n        a.push([o]);\n      } else {\n        last.push(o);\n      }\n      return a;\n    },\n    [[]]\n  );\n\nexport default async ({ cloverDomain, merchantId, accessToken }) => {\n  const { elements } = await api.devices({ cloverDomain, merchantId, accessToken });\n  const devices = elements.filter(d => REG_PRODUCTS.test(d.productName));\n\n  // NOTE: We need to limit simultaneous API requests.\n  const partitions = createPartition(devices, 4);\n  for (let i = 0; i < partitions.length; i++) {\n    // eslint-disable-next-line no-await-in-loop\n    partitions[i] = await Promise.all(\n      partitions[i].map(({ id: deviceId }) => api.deviceApps({ cloverDomain, merchantId, accessToken, deviceId }))\n    );\n  }\n  const apps = partitions.flat();\n\n  return devices.map((device, i) => ({\n    ...device,\n    apps: apps[i].applications.reduce(appsReducer, {}),\n  }));\n};\n","export const currency = value => {\n  const n = +value;\n  if (!isNaN(n) && n >= 0) {\n    return (n / 100).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  return '';\n};\n\nexport const card = ({ first6, last4 }) => [first6, '*'.repeat(6), last4].join('').replace(/.{4}/g, ' $&').trim();\n","import { combineReducers } from 'redux';\nimport actions from './actions/reducer';\nimport buffer from './buffer/reducer';\nimport configuration from './configuration/reducer';\nimport connection from './connection/reducer';\nimport devices from './devices/reducer';\nimport error from './error/reducer';\nimport signature from './signature/reducer';\nimport status from './status/reducer';\nimport transactions from './transactions/reducer';\n\nconst rootReducer = combineReducers({\n  actions,\n  buffer,\n  configuration,\n  connection,\n  devices,\n  error,\n  signature,\n  status,\n  transactions,\n});\n\nexport default rootReducer;\n","import { ACTION } from '../../common/constants';\nimport * as CONST from './constants';\nimport { CONNECTION_SET } from '../connection/constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ACTIONS_CLEAR:\n      return initialState;\n    case CONST.ACTIONS_APPEND: {\n      const found = state.some(a => a.type === payload.type && a.payload?.description === payload.payload?.description);\n      return found ? state : [...state, payload];\n    }\n    case CONST.ACTIONS_SET:\n      return payload || [];\n    case CONNECTION_SET:\n      return [{ type: ACTION.DISCONNECT, payload: { description: 'Cancel' } }];\n    case '@@connector/onDeviceReady':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onResetDeviceResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onDeviceActivityStart':\n      return payload.inputOptions.map(io => ({ type: ACTION.INVOKE_INPUT_OPTION, payload: io }));\n    case '@@connector/onSaleResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onVoidPaymentResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onConfirmPaymentRequest':\n      return [\n        { type: ACTION.ACCEPT_PAYMENT, payload },\n        { type: ACTION.REJECT_PAYMENT, payload },\n      ];\n    case '@@connector/onVerifySignatureRequest':\n      return [\n        { type: ACTION.ACCEPT_SIGNATURE, payload },\n        { type: ACTION.REJECT_SIGNATURE, payload },\n      ];\n    default:\n      return state;\n  }\n};\n","export const ACTIONS_APPEND = 'appendActions';\nexport const ACTIONS_CLEAR = 'clearActions';\nexport const ACTIONS_SET = 'setActions';\n","export const CONNECTION_CLEAR = 'clearConnector';\nexport const CONNECTION_SET = 'setConnector';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.BUFFER_CLEAR:\n      return initialState;\n    case CONST.BUFFER_APPEND:\n      return (state + payload).replace(/^0+/, '').slice(0, 7);\n    case CONST.BUFFER_SET:\n      return payload;\n    case CONST.BUFFER_UNDO:\n      return state.length ? state.slice(0, state.length - 1) : '';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const BUFFER_APPEND = 'appendBuffer';\nexport const BUFFER_CLEAR = 'clearBuffer';\nexport const BUFFER_SET = 'setBuffer';\nexport const BUFFER_UNDO = 'undoBuffer';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONFIGURATION_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case CONST.CONFIGURATION_NOT_LOADING:\n      return {\n        ...state,\n        loading: undefined,\n      };\n    case CONST.CONFIGURATION_SET:\n      return {\n        ...state,\n        cloverDomain: payload.cloverDomain || '',\n        merchantId: payload.merchantId || '',\n        accessToken: payload.accessToken || '',\n        friendlyId: payload.friendlyId || '',\n        manualCardEntry: payload.manualCardEntry || false,\n        autoConnect: payload.autoConnect || false,\n      };\n    default:\n      return state;\n  }\n};\n","export const CONFIGURATION_LOADING = 'setConfigurationLoading';\nexport const CONFIGURATION_NOT_LOADING = 'setConfigurationNotLoading';\nexport const CONFIGURATION_SET = 'setConfiguration';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.DEVICES_CLEAR_LIST:\n      return {\n        ...state,\n        list: [],\n      };\n    case CONST.DEVICES_CLEAR_SELECTED:\n      return {\n        ...state,\n        selected: '',\n      };\n    case CONST.DEVICES_SET_SELECTED:\n      return {\n        ...state,\n        selected: payload || '',\n      };\n    case CONST.DEVICES_SET_LIST:\n      return {\n        ...state,\n        list: payload || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const DEVICES_CLEAR_LIST = 'clearDevices';\nexport const DEVICES_CLEAR_SELECTED = 'clearDeviceId';\nexport const DEVICES_SET_LIST = 'setDevices';\nexport const DEVICES_SET_SELECTED = 'setDeviceId';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ERROR_CLEAR:\n      return initialState;\n    case CONST.ERROR_SET:\n      return {\n        ...state,\n        message: payload.message,\n        stack: payload.stack,\n      };\n    case '@@connector/onDeviceError':\n      return {\n        ...state,\n        message: `Device Error ${payload.message}`,\n        stack: null,\n      };\n    default:\n      return state;\n  }\n};\n","export const ERROR_CLEAR = 'clearError';\nexport const ERROR_SET = 'setError';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.SIGNATURE_CLEAR:\n      return initialState;\n    case CONST.SIGNATURE_SET:\n      return {\n        width: payload?.width || 0,\n        height: payload?.height || 0,\n        strokes: payload?.strokes || [],\n      };\n    case '@@connector/onVerifySignatureRequest':\n      return {\n        width: payload.signature?.width || 0,\n        height: payload.signature?.height || 0,\n        strokes: payload.signature?.strokes || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const SIGNATURE_CLEAR = 'clearSignature';\nexport const SIGNATURE_SET = 'setSignature';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.STATUS_CLEAR:\n      return '';\n    case CONST.STATUS_SET:\n      return payload || '';\n    case '@@connector/onDeviceReady':\n      return 'Ready';\n    case '@@connector/onResetDeviceResponse':\n      return 'Ready';\n    case '@@connector/onDeviceActivityStart':\n      return payload.message;\n    case '@@connector/onSaleResponse':\n      return 'Ready';\n    case '@@connector/onVoidPaymentResponse':\n      return 'Ready';\n    case '@@connector/onConfirmPaymentRequest':\n      return payload.challenges[0].message;\n    case '@@connector/onVerifySignatureRequest':\n      return 'Verify Signature';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const STATUS_CLEAR = 'clearStatus';\nexport const STATUS_SET = 'setStatus';\n","import * as CONST from './constants';\nimport initialState from './initialState';\nimport { TRANSACTION } from '../../common';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.TRANSACTIONS_ACTIVE: {\n      if (payload.id) {\n        const cur = state.data[payload.id] || {};\n\n        return {\n          ...state,\n          active: payload.id,\n          data: {\n            ...state.data,\n            [payload.id]: {\n              ...state.data[payload.id],\n              id: payload.id,\n              timestamp: Date.now(),\n              type: payload.type || cur.type,\n              amount: payload.amount || cur.amount || 0,\n              tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            },\n          },\n        };\n      }\n      return {\n        ...state,\n        active: '',\n      };\n    }\n    case CONST.TRANSACTIONS_HIDE:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: false,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_SHOW:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: true,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_REMOVE: {\n      const newState = {\n        ...state,\n        data: { ...state.data },\n      };\n      delete newState.data[payload];\n      return newState;\n    }\n    case CONST.TRANSACTIONS_UPDATE: {\n      const cur = state.data[payload.id] || {};\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload.id]: {\n            ...cur,\n            id: payload.id,\n            timestamp: Date.now(),\n            visible: payload.visible || cur.visible || false,\n            amount: payload.amount || cur.amount || 0,\n            tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            type: payload.type || cur.type || '',\n            payment: payload.payment || cur.payment || null,\n          },\n        },\n      };\n    }\n    case '@@connector/onSaleResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.SALE,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      return state;\n    }\n    case '@@connector/onVoidPaymentResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.VOID,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    default:\n      return state;\n  }\n};\n","export const TRANSACTIONS_ACTIVE = 'setActiveTransaction';\nexport const TRANSACTIONS_REMOVE = 'removeTransaction';\nexport const TRANSACTIONS_UPDATE = 'updateTransaction';\nexport const TRANSACTIONS_SHOW = 'showTransaction';\nexport const TRANSACTIONS_HIDE = 'hideTransaction';\n","import Clover from 'remote-pay-cloud';\nimport { createSelector } from 'reselect';\n\nexport const selectConfiguration = state => state.configuration;\n\nexport const selectFriendlyId = createSelector(selectConfiguration, ({ friendlyId }) => friendlyId || 'Virtual Keypad');\n\nexport const selectManualCardEntry = createSelector(\n  selectConfiguration,\n  ({ manualCardEntry }) => manualCardEntry || false\n);\n\nexport const selectCardEntryMethods = createSelector(selectManualCardEntry, manual =>\n  manual\n    ? // eslint-disable-next-line no-bitwise\n      Clover.CardEntryMethods.DEFAULT | Clover.CardEntryMethods.CARD_ENTRY_METHOD_MANUAL\n    : Clover.CardEntryMethods.DEFAULT\n);\n\nexport const selectAutoConnect = createSelector(selectConfiguration, ({ autoConnect }) => autoConnect || false);\n\nexport const selectConfigurationLoading = createSelector(selectConfiguration, ({ loading }) => loading || false);\n","import * as CONST from './constants';\n\nexport const clearError = () => ({ type: CONST.ERROR_CLEAR });\n\nexport const setError = ({ message, stack } = {}) => ({\n  type: CONST.ERROR_SET,\n  payload: { message, stack },\n});\n","import * as CONST from './constants';\n\nexport const appendAction = action => ({\n  type: CONST.ACTIONS_APPEND,\n  payload: action,\n});\n\nexport const clearActions = () => ({ type: CONST.ACTIONS_CLEAR });\n\nexport const setActions = actions => ({\n  type: CONST.ACTIONS_SET,\n  payload: actions,\n});\n","import { createSelector } from 'reselect';\n\nexport const selectConnection = state => state.connection;\n\nexport const selectConnector = createSelector(selectConnection, ({ connector }) => connector);\n\nexport const selectConnected = createSelector(selectConnection, ({ connected }) => connected);\n","import * as CONST from './constants';\n\nexport const clearStatus = () => ({ type: CONST.STATUS_CLEAR });\n\nexport const setStatus = text => ({\n  type: CONST.STATUS_SET,\n  payload: text,\n});\n","import { STORAGE } from './constants';\nimport initialDevices from '../store/devices/initialState';\n\nexport default ({ configuration, devices }) =>\n  localStorage.setItem(\n    STORAGE,\n    JSON.stringify({\n      configuration: {\n        ...configuration,\n        loading: undefined,\n      },\n      devices: {\n        ...initialDevices,\n        selected: devices.selected,\n      },\n    })\n  );\n","import * as CONST from './constants';\n\nexport const setConfiguration = ({\n  cloverDomain,\n  merchantId,\n  accessToken,\n  friendlyId,\n  manualCardEntry,\n  autoConnect,\n}) => ({\n  type: CONST.CONFIGURATION_SET,\n  payload: { cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect },\n});\n\nexport const setConfigurationLoading = () => ({ type: CONST.CONFIGURATION_LOADING });\n\nexport const setConfigurationNotLoading = () => ({ type: CONST.CONFIGURATION_NOT_LOADING });\n","import * as CONST from './constants';\n\nexport const clearDeviceId = () => ({ type: CONST.DEVICES_CLEAR_SELECTED });\n\nexport const clearDevices = () => ({ type: CONST.DEVICES_CLEAR_LIST });\n\nexport const setDeviceId = deviceId => ({\n  type: CONST.DEVICES_SET_SELECTED,\n  payload: deviceId,\n});\n\nexport const setDevices = devices => ({\n  type: CONST.DEVICES_SET_LIST,\n  payload: devices,\n});\n","import { APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport fetchDevices from '../../common/fetchDevices';\nimport { setConfiguration, setConfigurationLoading, setConfigurationNotLoading } from '../configuration/actions';\nimport { setDevices } from '../devices/actions';\nimport { setError } from '../error/actions';\n\nexport default ({ cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect }) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: 'configure',\n      payload: { cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect },\n    });\n\n    await dispatch(setConfigurationLoading());\n\n    await dispatch(\n      setConfiguration({ cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect })\n    );\n    persist(getState());\n\n    const devices = await fetchDevices({ cloverDomain, merchantId, accessToken });\n    await dispatch(setDevices(devices));\n\n    if (!devices.length) {\n      throw new Error('Merchant has no devices');\n    }\n\n    if (!devices.some(a => a.apps[APP.CLOUD_PAY_DISPLAY])) {\n      throw new Error('Merchant has no devices with Cloud Pay Display installed');\n    }\n  } catch (e) {\n    await dispatch(setError(e));\n  } finally {\n    await dispatch(setConfigurationNotLoading());\n  }\n};\n","import { createSelector } from 'reselect';\n\nexport const selectRawDevices = state => state.devices;\n\nexport const selectDeviceId = createSelector(selectRawDevices, ({ selected }) => selected);\n\nexport const selectDevices = createSelector(selectRawDevices, selectDeviceId, ({ list }, deviceId) =>\n  [...list].sort((a, b) => (a.id === deviceId ? -1 : b.id === deviceId ? 1 : 0))\n);\n","import * as CONST from './constants';\n\nexport const clearConnector = () => ({ type: CONST.CONNECTION_CLEAR });\n\nexport const setConnector = connector => ({\n  type: CONST.CONNECTION_SET,\n  payload: connector,\n});\n","import Clover from 'remote-pay-cloud';\n\nimport { REMOTE_APPLICATION_ID, APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport { selectConfiguration } from '../configuration/selectors';\nimport { selectDevices } from '../devices/selectors';\nimport { setConnector } from '../connection/actions';\nimport { setDeviceId } from '../devices/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default deviceId => async (dispatch, getState) => {\n  try {\n    await dispatch({ type: 'connect', payload: deviceId });\n    await dispatch(setDeviceId(deviceId));\n\n    const state = getState();\n    persist(state);\n\n    const { cloverDomain, merchantId, accessToken, friendlyId } = selectConfiguration(state);\n    const device = selectDevices(state).find(d => d.id === deviceId);\n\n    if (!device) throw new Error(`Device not found`);\n    if (!device.apps[APP.CLOUD_PAY_DISPLAY]) throw new Error('Device does not have Cloud Pay Display installed');\n\n    const factory = Clover.CloverConnectorFactoryBuilder.createICloverConnectorFactory({\n      [Clover.CloverConnectorFactoryBuilder.FACTORY_VERSION]: Clover.CloverConnectorFactoryBuilder.VERSION_12,\n    });\n\n    const connector = factory.createICloverConnector(\n      new Clover.WebSocketCloudCloverDeviceConfigurationBuilder(\n        REMOTE_APPLICATION_ID,\n        deviceId,\n        merchantId,\n        accessToken\n      )\n        .setCloverServer(cloverDomain)\n        .setFriendlyId(friendlyId)\n        .build()\n    );\n\n    class Listener extends Clover.remotepay.ICloverConnectorListener {\n      constructor() {\n        super();\n        Object.keys(Object.getPrototypeOf(Object.getPrototypeOf(this))).forEach(type => {\n          this[type] = payload => dispatch({ type: `@@connector/${type}`, payload });\n        });\n      }\n    }\n    const listener = new Listener();\n    connector.addCloverConnectorListener(listener);\n\n    dispatch(setConnector(connector));\n    dispatch(setStatus('Connecting…'));\n\n    connector.initializeConnection();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const setActiveTransaction = ({ id, type, amount, tipAmount } = {}) => ({\n  type: CONST.TRANSACTIONS_ACTIVE,\n  payload: { id, type, amount, tipAmount },\n});\n\nexport const removeTransaction = id => ({\n  type: CONST.TRANSACTIONS_REMOVE,\n  payload: id,\n});\n\nexport const showTransaction = id => ({\n  type: CONST.TRANSACTIONS_SHOW,\n  payload: id,\n});\n\nexport const hideTransaction = id => ({\n  type: CONST.TRANSACTIONS_HIDE,\n  payload: id,\n});\n\nexport const updateTransaction = ({ id, type, amount, tipAmount, payment }) => ({\n  type: CONST.TRANSACTIONS_UPDATE,\n  payload: { id, type, amount, tipAmount, payment },\n});\n","import { clearConnector } from '../connection/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setError } from '../error/actions';\nimport { clearDevices } from '../devices/actions';\nimport { setActiveTransaction } from '../transactions/actions';\n\nexport default () => async (dispatch, getState) => {\n  try {\n    await dispatch({ type: 'disconnect' });\n\n    const connector = selectConnector(getState());\n    try {\n      connector.showWelcomeScreen();\n      await new Promise(resolve => setTimeout(resolve, 500));\n    } catch (e2) {\n      // Do nothing\n    }\n\n    connector.dispose();\n\n    await dispatch(clearConnector());\n    await dispatch(clearDevices());\n    await dispatch(setActiveTransaction());\n  } catch (e) {\n    await dispatch(setError(e));\n  }\n};\n","import en from './en.json';\n\nexport default { en };\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport resources from './resources';\n\nexport default i18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'en',\n    debug: false,\n    keySeparator: '~',\n    nsSeparator: false,\n    interpolation: { escapeValue: false },\n    resources,\n  });\n","import { selectConnector } from '../connection/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'reset' });\n    dispatch(setStatus('Resetting…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.resetDevice();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","export const selectError = state => state.error;\n","import { setError } from '../error';\nimport { ACTION } from '../../common/constants';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'showWelcome' });\n    dispatch(setStatus('Ready'));\n    dispatch(setActions([{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }]));\n\n    const connector = selectConnector(getState());\n    connector.showWelcomeScreen();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const appendBuffer = value => ({\n  type: CONST.BUFFER_APPEND,\n  payload: value,\n});\n\nexport const clearBuffer = () => ({ type: CONST.BUFFER_CLEAR });\n\nexport const setBuffer = value => ({\n  type: CONST.BUFFER_SET,\n  payload: value || '',\n});\n\nexport const undoBuffer = () => ({ type: CONST.BUFFER_UNDO });\n","export const selectBuffer = state => state.buffer;\n","import { createSelector } from 'reselect';\n\nexport const selectRawTransactions = state => state.transactions;\n\nexport const selectTransactions = createSelector(selectRawTransactions, ({ data }) => Object.values(data));\n\nexport const selectActiveTransaction = createSelector(selectRawTransactions, ({ active, data }) => data[active]);\n\nexport const selectActiveTransactionType = createSelector(selectActiveTransaction, active => active?.type);\n\nexport const selectActiveTransactionAmount = createSelector(\n  selectActiveTransaction,\n  active => (active?.amount || 0) + (active?.tipAmount || 0)\n);\n\nexport const selectPaymentTransactions = createSelector(selectTransactions, transactions =>\n  transactions.filter(t => t.payment)\n);\n\nexport const selectVisiblePaymentTransactions = createSelector(selectPaymentTransactions, transactions =>\n  transactions.filter(t => t.visible)\n);\n","import Clover from 'remote-pay-cloud';\n\nimport { clearBuffer } from '../buffer/actions';\nimport { selectBuffer } from '../buffer/selectors';\nimport { selectConnector } from '../connection/selectors';\nimport { selectCardEntryMethods } from '../configuration/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\nimport { TRANSACTION } from '../../common/constants';\nimport { updateTransaction, setActiveTransaction } from '../transactions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'transaction' });\n\n    const state = getState();\n    const buffer = selectBuffer(state);\n    const connector = selectConnector(state);\n    const cardEntryMethods = selectCardEntryMethods(state);\n\n    dispatch(clearActions());\n    dispatch(setStatus('Processing...'));\n    dispatch(clearBuffer());\n\n    const amount = +buffer;\n    if (!amount) throw new Error('Amount is required');\n    if (isNaN(amount)) throw new Error('Amount is invalid');\n    if (amount <= 0 || amount > 99_999_99) throw new Error('Amount must between 0.01 and 99,999.99');\n\n    const id = Clover.CloverID.getNewId();\n    const type = TRANSACTION.SALE;\n\n    dispatch(setActiveTransaction({ id, type, amount }));\n\n    const request = new Clover.remotepay.SaleRequest();\n    request.setAmount(amount);\n    request.setExternalId(id);\n    request.setCardEntryMethods(cardEntryMethods);\n\n    dispatch(updateTransaction({ id, type: TRANSACTION.SALE, amount }));\n\n    connector.sale(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { TRANSACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setStatus } from '../status/actions';\nimport { setActiveTransaction } from '../transactions';\n\nexport default payment => async (dispatch, getState) => {\n  try {\n    dispatch({ type: 'voidPayment', payload: payment });\n\n    const { id, externalPaymentId, orderId, amount, tipAmount } = payment;\n    const connector = selectConnector(getState());\n\n    dispatch(clearActions());\n    dispatch(setStatus('Processing…'));\n    if (!id) throw new Error('No payment was specified');\n\n    const type = TRANSACTION.VOID;\n    dispatch(setActiveTransaction({ id: externalPaymentId, type, amount, tipAmount }));\n\n    const request = new Clover.remotepay.VoidPaymentRequest();\n    request.setPaymentId(id);\n    request.setOrderId(orderId);\n    request.setVoidReason(Clover.order.VoidReason.USER_CANCEL);\n    connector.voidPayment(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nexport default initialState => {\n  const middleware = applyMiddleware(thunk);\n\n  // eslint-disable-next-line no-underscore-dangle\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n  const enhancer = devTools ? devTools() : f => f;\n\n  return createStore(rootReducer, initialState, compose(middleware, enhancer));\n};\n","import { createSelector } from 'reselect';\n\nimport { ACTION } from '../../common/constants';\n\nexport const selectActions = state => state.actions;\n\nexport const selectTransactionAction = createSelector(selectActions, actions =>\n  actions.find(a => a.type === ACTION.TRANSACTION)\n);\n\nexport const selectNonTransactionActions = createSelector(selectActions, actions => {\n  const arr = actions.filter(a => a.type !== ACTION.TRANSACTION);\n  if (arr.length === 2) {\n    const [a, b] = arr;\n    if (a.payload?.description === 'No' && b.payload?.description === 'Yes') {\n      return [b, a];\n    }\n  }\n  return arr;\n});\n","import { createSelector } from 'reselect';\n\nexport const selectSignature = state => state.signature;\n\nexport const selectSignatureBounds = createSelector(selectSignature, ({ strokes }) => {\n  const bounds = strokes\n    .map(({ points }) => points)\n    .flat()\n    .reduce(\n      ({ x, X, y, Y }, point) => ({\n        x: Math.min(x, point.x),\n        X: Math.max(X, point.x),\n        y: Math.min(y, point.y),\n        Y: Math.max(Y, point.y),\n      }),\n      { x: Infinity, X: -Infinity, y: Infinity, Y: -Infinity }\n    );\n  return [bounds.x, bounds.y, bounds.X - bounds.x, bounds.Y - bounds.y].join(' ');\n});\n\nexport const selectSignatureLines = createSelector(selectSignature, ({ strokes }) =>\n  strokes.map(({ points }) => points.map(({ x, y }) => `${x},${y}`).join(' '))\n);\n","export const selectStatus = state => state.status;\n","import { createSelector } from 'reselect';\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !devices.length\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default ({ size = 28 }) => {\n  const { t } = useTranslation();\n  return (\n    <svg\n      className=\"Logo\"\n      id=\"clover-logo-svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 33.15 33.15\"\n      aria-labelledby=\"svg-logo-title\"\n      role=\"image\"\n    >\n      <title id=\"svg-logo-title\">{t('Clover')}</title>\n      <g id=\"clover-symbol-2\" data-name=\"clover-symbol\">\n        <path d=\"M191.45,85.64A7.5,7.5,0,1,0,184,93.09h7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,85.64a7.5,7.5,0,1,1,7.49,7.45h-7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,102.7a7.5,7.5,0,1,0,7.49-7.45h-7.49v7.45Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path\n          d=\"M191.46,102.7A7.5,7.5,0,1,1,184,95.25h7.49v7.45Zm-7.5,5.35a5.38,5.38,0,0,0,5.4-5.35V97.36H184a5.35,5.35,0,1,0,0,10.7h0Z\"\n          transform=\"translate(-176.46 -77.01)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n","import React, { useCallback, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport QS from 'query-string';\n\nimport { configure, selectConfiguration, selectConfigurationLoading } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const configuration = useSelector(selectConfiguration);\n  const loading = useSelector(selectConfigurationLoading);\n  const visible = useSelector(selectVisible);\n\n  const qs = QS.parse(window.location.search);\n  const hash = QS.parse(window.location.hash);\n\n  const [cloverDomain, setCloverDomain] = useState(configuration.cloverDomain || 'https://www.clover.com');\n  const [merchantId, setMerchantId] = useState(qs.merchant_id || configuration.merchantId);\n  const [accessToken, setAccessToken] = useState(hash.access_token || configuration.accessToken);\n  const [friendlyId, setFriendlyId] = useState(configuration.friendlyId || t('Virtual Keypad'));\n  const [manualCardEntry, setManualCardEntry] = useState(configuration.manualCardEntry || false);\n  const [autoConnect, setAutoConnect] = useState(configuration.autoConnect || false);\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const disabled = useMemo(() => loading || submitting, [loading, submitting]);\n\n  const submit = useCallback(\n    async event => {\n      try {\n        event.preventDefault();\n        setSubmitting(true);\n        await dispatch(configure({ cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect }));\n      } finally {\n        setSubmitting(false);\n      }\n    },\n    [dispatch, cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect]\n  );\n\n  const reset = useCallback(\n    event => {\n      event.preventDefault();\n      setCloverDomain(configuration.cloverDomain);\n      setMerchantId(configuration.merchantId);\n      setAccessToken(configuration.accessToken);\n      setFriendlyId(configuration.friendlyId);\n      setManualCardEntry(configuration.manualCardEntry);\n      setAutoConnect(configuration.autoConnect);\n    },\n    [configuration, setCloverDomain, setMerchantId, setAccessToken, setFriendlyId, setManualCardEntry, setAutoConnect]\n  );\n\n  if (!visible) return null;\n\n  return (\n    <form onSubmit={submit} onReset={reset}>\n      <div className=\"Configuration card\">\n        <div className=\"card-header\">\n          <Logo />\n          <h3>{t('Virtual Keypad')}</h3>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"form-group\">\n            <label>{t('Clover Domain')}:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={cloverDomain}\n              onChange={event => setCloverDomain(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>{t('Merchant ID')}:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={merchantId}\n              onChange={event => setMerchantId(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>{t('Access Token')}:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={accessToken}\n              onChange={event => setAccessToken(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>{t('Friendly ID')}:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={friendlyId}\n              onChange={event => setFriendlyId(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"custom-control custom-switch\">\n              <input\n                id=\"chkManualCardEntry\"\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                disabled={disabled}\n                checked={manualCardEntry}\n                onChange={() => setManualCardEntry(!manualCardEntry)}\n              />\n              <label className=\"custom-control-label font-weight-normal\" htmlFor=\"chkManualCardEntry\">\n                {t('Allow Manual Card Entry')}\n              </label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"custom-control custom-switch\">\n              <input\n                id=\"chkAutoConnect\"\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                disabled={disabled}\n                checked={autoConnect}\n                onChange={() => setAutoConnect(!autoConnect)}\n              />\n              <label className=\"custom-control-label font-weight-normal\" htmlFor=\"chkAutoConnect\">\n                {t('Auto-connect')}\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer\">\n          <button type=\"submit\" className=\"btn btn-success\" disabled={disabled}>\n            {t('Submit')}\n          </button>\n          <button type=\"reset\" className=\"btn btn-secondary ml-2\" disabled={disabled}>\n            {t('Reset')}\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { createSelector } from 'reselect';\n\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !!devices.length\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nimport { APP } from '../../common/constants';\n\nexport default ({ device, active, disabled, onClick }) => {\n  const { t } = useTranslation();\n\n  const cloud = device.apps[APP.CLOUD_PAY_DISPLAY];\n  const cloudStatus = cloud ? t('Cloud Pay Display is installed') : t('Cloud Pay Display is NOT installed');\n\n  return (\n    <button\n      key={device.id}\n      type=\"button\"\n      className={classNames(\n        'list-group-item d-flex justify-content-between align-items-center list-group-item-action p-1',\n        {\n          disabled,\n          'list-group-item-primary': !disabled && active,\n        }\n      )}\n      onClick={onClick}\n    >\n      <div className=\"p-1\">\n        {device.name && <div className=\"font-weight-bold\">{device.name}</div>}\n        {device.productName} {device.serial}\n      </div>\n      <span\n        className={classNames('badge p-1', {\n          'badge-secondary': disabled,\n          'badge-success': !disabled && cloud,\n          'badge-warning': !disabled && !cloud,\n        })}\n        role=\"img\"\n        aria-label={cloudStatus}\n        title={cloudStatus}\n      >\n        ☁️\n      </span>\n    </button>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectDevices, selectDeviceId, connect, clearDevices } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\nimport Device from './Device';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const devices = useSelector(selectDevices);\n  const deviceId = useSelector(selectDeviceId);\n  const visible = useSelector(selectVisible);\n  const [disabled, setDisabled] = useState();\n\n  const select = useCallback(\n    id => async event => {\n      try {\n        event.preventDefault();\n        setDisabled(true);\n        await dispatch(connect(id));\n      } finally {\n        setDisabled(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const cancel = () => dispatch(clearDevices());\n\n  if (!visible) return null;\n\n  return (\n    <div className=\"Devices card\">\n      <div className=\"card-header\">\n        <Logo />\n        <h3>{t('Virtual Keypad')}</h3>\n        <button className=\"close text-light\" title={t('Cancel')} onClick={cancel} disabled={disabled}>\n          &times;\n        </button>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"form-group\">\n          <label>{t('Select Devices')}:</label>\n          <div className=\"list-group\">\n            {devices.map(device => (\n              <Device\n                key={device.id}\n                device={device}\n                disabled={disabled}\n                active={device.id === deviceId}\n                onClick={select(device.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ACTION } from '../../common/constants';\nimport {\n  acceptPayment,\n  acceptSignature,\n  disconnect,\n  identify,\n  invokeInputOption,\n  rejectPayment,\n  rejectSignature,\n  reset,\n  showWelcome,\n  transaction,\n} from '../../store';\n\nexport const ACTION_CREATOR = {\n  [ACTION.ACCEPT_PAYMENT]: acceptPayment,\n  [ACTION.ACCEPT_SIGNATURE]: acceptSignature,\n  [ACTION.DISCONNECT]: disconnect,\n  [ACTION.IDENTIFY]: identify,\n  [ACTION.INVOKE_INPUT_OPTION]: invokeInputOption,\n  [ACTION.REJECT_PAYMENT]: rejectPayment,\n  [ACTION.REJECT_SIGNATURE]: rejectSignature,\n  [ACTION.RESET]: reset,\n  [ACTION.SHOW_WELCOME]: showWelcome,\n  [ACTION.TRANSACTION]: transaction,\n};\n\nexport const MODE = {\n  TRANSACTION: 'TRANSACTION',\n  HISTORY: 'HISTORY',\n};\n","import { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'acceptPayment' });\n    dispatch(setStatus('Accepting payment…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.acceptPayment(action.payload.payment);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { clearSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'acceptSignature' });\n    dispatch(setStatus('Accepting signature…'));\n    dispatch(clearActions());\n    dispatch(clearSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.acceptSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const clearSignature = () => ({ type: CONST.SIGNATURE_CLEAR });\n\nexport const setSignature = signature => ({\n  type: CONST.SIGNATURE_SET,\n  payload: signature,\n});\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { selectFriendlyId } from '../configuration/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\nimport i18n from '../../i18n';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    const t = await i18n;\n    dispatch({ ...action, type: 'identify' });\n    dispatch(setStatus('Identifying…'));\n    dispatch(\n      setActions([\n        { type: ACTION.SHOW_WELCOME, payload: { description: 'OK' } },\n        { type: ACTION.DISCONNECT, payload: { description: 'Cancel' } },\n      ])\n    );\n\n    const state = getState();\n    const connector = selectConnector(state);\n    const friendlyId = selectFriendlyId(state);\n\n    connector.showMessage(`${friendlyId} ${t('connected')}`);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'invokeInputOption' });\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.InputOption();\n    request.setDescription(action.payload.description);\n    request.setKeyPress(action.payload.keyPress);\n    connector.invokeInputOption(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'rejectPayment' });\n    dispatch(setStatus('Rejecting payment…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.rejectPayment(action.payload.payment, action.payload.challenges[0]);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { clearSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'rejectSignature' });\n    dispatch(setStatus('Rejecting signature…'));\n    dispatch(clearActions());\n    dispatch(clearSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.rejectSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { createSelector } from 'reselect';\nimport { selectConnector } from '../../store';\n\nexport const selectVisible = createSelector(selectConnector, connector => !!connector);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectSignatureBounds, selectSignatureLines } from '../../store';\n\nexport default ({ width = 250, ...other }) => {\n  const bounds = useSelector(selectSignatureBounds);\n  const lines = useSelector(selectSignatureLines);\n\n  if (!lines.length) return null;\n\n  return (\n    <div className=\"Signature\">\n      <svg viewBox={bounds} width={width} {...other}>\n        {lines.map((points, i) => (\n          <polyline key={i} points={points} fill=\"none\" stroke=\"black\" />\n        ))}\n      </svg>\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport { currency } from '../../common';\nimport { selectStatus, selectBuffer, selectActiveTransactionType, selectActiveTransactionAmount } from '../../store';\nimport Signature from './Signature';\n\nexport default () => {\n  const { t } = useTranslation();\n  const status = useSelector(selectStatus);\n  const buffer = useSelector(selectBuffer);\n  const tranType = useSelector(selectActiveTransactionType);\n  const tranAmount = useSelector(selectActiveTransactionAmount);\n\n  const translatedStatus = useMemo(() => {\n    const partial = status.match(/^Partial authorization for (.+)\\nContinue with transaction\\?$/);\n    if (partial) {\n      const [, amount] = partial;\n      return (\n        <Trans i18nKey=\"STATUS~Partial authorization\" amount={amount}>\n          Partial authorization for {{ amount }}\n          Continue with transaction?\n        </Trans>\n      );\n    }\n    const cardEnding = status.match(/^Processing Card ending in (\\d+)…$/);\n    if (cardEnding) {\n      const [, last4] = cardEnding;\n      return (\n        <Trans i18nKey=\"STATUS~Processing card ending\" last4={last4}>\n          Processing Card ending in {{ last4 }}…\n        </Trans>\n      );\n    }\n    return t([`STATUS~${status}`, status]);\n  }, [status, t]);\n\n  return (\n    <div className=\"Screen alert alert-secondary\">\n      {!!tranAmount && (\n        <div className=\"Transaction d-flex justify-content-between bg-white rounded-top border-bottom border-secondary\">\n          <div className=\"font-italic\">{t([`TRANSACTION~${tranType}`, tranType])}</div>\n          <div className=\"font-weight-bold\">{currency(tranAmount)}</div>\n        </div>\n      )}\n      {!buffer && <div>{translatedStatus}</div>}\n      <Signature />\n      {buffer && <div className=\"text-muted\">{buffer}</div>}\n      {buffer && <h3 className=\"text-right\">{currency(buffer)}</h3>}\n    </div>\n  );\n};\n","import React, { forwardRef, useEffect, useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nexport default forwardRef(\n  ({ action, height, color, keyCodes, disabled, onClick, moreActions, onMoreClick, children, ...other }, ref) => {\n    const { t } = useTranslation();\n    const [show, setShow] = useState(false);\n    useEffect(() => {\n      if (show) {\n        const hide = () => setShow(false);\n        document.addEventListener('click', hide);\n        document.addEventListener('touch', hide);\n        document.addEventListener('keydown', hide);\n        return () => {\n          document.removeEventListener('click', hide);\n          document.removeEventListener('touch', hide);\n          document.removeEventListener('keydown', hide);\n        };\n      }\n      return undefined;\n    }, [show]);\n\n    useEffect(() => {\n      if (!disabled) {\n        const keydown = event => {\n          if (keyCodes.includes(event.code)) {\n            event.preventDefault();\n            onClick();\n            return false;\n          }\n          return true;\n        };\n        document.addEventListener('keydown', keydown);\n\n        return () => document.removeEventListener('keydown', keydown);\n      }\n      return undefined;\n    }, [disabled, keyCodes, onClick]);\n\n    const value = useMemo(() => {\n      const key = action?.payload?.description || action?.type;\n      return key ? t([`ACTION~${key}`, key]) : children;\n    }, [action, children, t]);\n\n    const title = useMemo(() => {\n      return `${t('Shortcut keys')}: ${keyCodes.map(k => t([`KEY_CODE~${k}`, k])).join(', ')}`;\n    }, [keyCodes, t]);\n\n    if (moreActions?.length) {\n      return (\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-dark action rounded-left\"\n            onClick={onClick}\n            disabled={disabled}\n            {...other}\n            title={title}\n          >\n            {value || <span>&nbsp;</span>}\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-dark action dropdown-toggle\"\n            onClick={() => setShow(!show)}\n            disabled={disabled}\n          ></button>\n          <div className={classNames('dropdown-menu bg-dark', { show })}>\n            {moreActions.map((a, i) => (\n              <button key={i} className=\"dropdown-item bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                {t([`ACTION~${a.payload?.description || a.type}`, a.payload?.description || a.type])}\n              </button>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        style={{ height }}\n        className={classNames('btn', `text-${color || 'light'}`, {\n          action,\n          'btn-dark': action,\n          'btn-outline-dark': !action,\n        })}\n        disabled={disabled}\n        onClick={onClick}\n        title={title}\n        {...other}\n      >\n        {value}\n      </button>\n    );\n  }\n);\n","import React, { useMemo, useCallback, useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  selectTransactionAction,\n  selectNonTransactionActions,\n  appendBuffer,\n  clearBuffer,\n  undoBuffer,\n  transaction,\n} from '../../store';\nimport Key from './Key';\nimport { ACTION_CREATOR } from './constants';\nimport { ACTION } from '../../common';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const actions = useSelector(selectNonTransactionActions);\n  const transactionAction = useSelector(selectTransactionAction);\n\n  const [actionClicked, setActionClicked] = useState(false);\n  const keysDisabled = useMemo(() => !transactionAction || actionClicked, [transactionAction, actionClicked]);\n\n  const onAction = useCallback(\n    async action => {\n      setActionClicked(true);\n      if (action.type === ACTION.INVOKE_INPUT_OPTION) setTimeout(() => setActionClicked(false), 250);\n      await dispatch(ACTION_CREATOR[action.type](action));\n    },\n    [dispatch, setActionClicked]\n  );\n\n  const actionHandler = action => async () => onAction(action);\n\n  useEffect(() => {\n    if (actions.length) setActionClicked(false);\n  }, [setActionClicked, actions]);\n\n  const keyRef = useRef();\n  const [keyHeight, setKeyHeight] = useState();\n  useEffect(() => {\n    if (keyRef.current) {\n      setKeyHeight(keyRef.current.offsetWidth);\n    }\n  }, [keyRef, setKeyHeight]);\n\n  const [action1, action2, ...moreActions] = actions;\n\n  return (\n    <div className=\"Keys\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action1 || {}}\n            disabled={!action1 || actionClicked}\n            keyCodes={['F1', 'NumpadDivide']}\n            onClick={actionHandler(action1)}\n          />\n        </div>\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action2 || {}}\n            disabled={!action2 || actionClicked}\n            keyCodes={['F2', 'NumpadMultiply']}\n            onClick={actionHandler(action2)}\n            moreActions={moreActions}\n            onMoreClick={action => onAction(action)}\n          />\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            ref={keyRef}\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad7', 'Digit7']}\n            onClick={() => dispatch(appendBuffer('7'))}\n          >\n            {t('KEY~7')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad8', 'Digit8']} onClick={() => dispatch(appendBuffer('8'))}>\n            {t('KEY~8')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad9', 'Digit9']} onClick={() => dispatch(appendBuffer('9'))}>\n            {t('KEY~9')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"danger\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadSubtract', 'Escape']}\n            onClick={() => dispatch(clearBuffer())}\n          >\n            {t('KEY~X')}\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad4', 'Digit4']}\n            onClick={() => dispatch(appendBuffer('4'))}\n          >\n            {t('KEY~4')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad5', 'Digit5']} onClick={() => dispatch(appendBuffer('5'))}>\n            {t('KEY~5')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad6', 'Digit6']} onClick={() => dispatch(appendBuffer('6'))}>\n            {t('KEY~6')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"warning\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadAdd', 'Backspace', 'Delete']}\n            onClick={() => dispatch(undoBuffer())}\n          >\n            {t('KEY~<')}\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-9\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-4 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad1', 'Digit1']}\n                onClick={() => dispatch(appendBuffer('1'))}\n              >\n                {t('KEY~1')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad2', 'Digit2']} onClick={() => dispatch(appendBuffer('2'))}>\n                {t('KEY~2')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad3', 'Digit3']} onClick={() => dispatch(appendBuffer('3'))}>\n                {t('KEY~3')}\n              </Key>\n            </div>\n          </div>\n          <div className=\"row no-gutters\">\n            <div className=\"col-8 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad0', 'Digit0']}\n                onClick={() => dispatch(appendBuffer('0'))}\n              >\n                {t('KEY~0')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key\n                disabled={keysDisabled}\n                keyCodes={['NumpadDecimal', 'Period']}\n                onClick={() => dispatch(appendBuffer('00'))}\n              >\n                {t('KEY~00')}\n              </Key>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"success\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadEnter', 'Enter']}\n            onClick={() => dispatch(transaction())}\n          >\n            {t('KEY~O')}\n          </Key>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nimport { disconnect, reset, showWelcome } from '../../store';\nimport { MODE } from './constants';\n\nexport default ({ mode, setMode }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const toggle = useCallback(() => setShow(!show), [show, setShow]);\n\n  const onShowWelcome = useCallback(() => dispatch(showWelcome()), [dispatch]);\n\n  const onReset = useCallback(() => dispatch(reset()), [dispatch]);\n\n  const onDisconnect = useCallback(() => dispatch(disconnect()), [dispatch]);\n\n  useEffect(() => {\n    if (show) {\n      const hide = () => setShow(false);\n      document.addEventListener('click', hide);\n      document.addEventListener('touch', hide);\n      document.addEventListener('keydown', hide);\n\n      return () => {\n        document.removeEventListener('click', hide);\n        document.removeEventListener('touch', hide);\n        document.removeEventListener('keydown', hide);\n      };\n    }\n    return undefined;\n  }, [show, setShow]);\n\n  return (\n    <div className=\"dropdown\">\n      <button type=\"button\" className=\"btn btn-sm btn-outline-dark text-light\" onClick={toggle} title={t('Menu')}>\n        ☰\n      </button>\n      <div className={classNames('dropdown-menu dropdown-menu-right', { show })}>\n        {Object.values(MODE).map(m => (\n          <button key={m} className=\"dropdown-item\" type=\"button\" onClick={() => setMode(m)}>\n            <div className=\"custom-control custom-checkbox\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id={`chkMode-${m}`}\n                checked={m === mode}\n                readOnly\n              />\n              <label className=\"custom-control-label\" htmlFor={`chkMode-${m}`}>\n                {t([`MODE~${m}`, m])}\n              </label>\n            </div>\n          </button>\n        ))}\n        <div className=\"dropdown-divider\" />\n        <button className=\"dropdown-item\" type=\"button\" onClick={onShowWelcome}>\n          {t('Show Welcome')}\n        </button>\n        <button className=\"dropdown-item\" type=\"button\" onClick={onReset}>\n          {t('Reset Device')}\n        </button>\n        <button className=\"dropdown-item\" type=\"button\" onClick={onDisconnect}>\n          {t('Disconnect')}\n        </button>\n      </div>\n    </div>\n  );\n};\n","export default ({ amount, tipAmount, payment }) => {\n  const start = (amount || 0) + (tipAmount || 0);\n  const final = (payment?.amount || 0) + (payment?.tipAmount || 0);\n  const partial = start > final;\n  const remaining = start - final;\n  return { start, final, partial, remaining };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\nimport { useTranslation } from 'react-i18next';\n\nimport { currency, card, TRANSACTION } from '../../common';\nimport { voidPayment, setError, setBuffer, transaction as doTransaction, hideTransaction } from '../../store';\nimport parseAmounts from './parseAmounts';\n\nexport default ({ transaction }) => {\n  const { type, payment } = transaction || {};\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { removeToast } = useToasts();\n\n  const amounts = parseAmounts(transaction);\n\n  const onRemaining = async () => {\n    try {\n      await dispatch(setBuffer(amounts.remaining));\n      await dispatch(doTransaction());\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  };\n\n  const onVoid = async () => {\n    try {\n      removeToast(transaction.id);\n      await dispatch(hideTransaction(transaction.id));\n      await dispatch(voidPayment(payment));\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  };\n\n  return (\n    <div className=\"Transaction\">\n      {transaction.type !== TRANSACTION.VOID && amounts.partial && (\n        <div className=\"alert alert-warning\">\n          <h6 className=\"alert-heading\">{t('Partial Payment')}</h6>\n          <div>\n            {t('Remaining')}: {currency(amounts.remaining)}\n          </div>\n        </div>\n      )}\n      <h5>\n        {t([`TRANSACTION~${type}`, type])} {t('Details')}\n      </h5>\n      <table className=\"table table-sm small mb-0\">\n        <tbody>\n          <tr>\n            <th>{t('Payment ID')}:</th>\n            <td>{payment.id}</td>\n          </tr>\n          <tr>\n            <th>{t('External ID')}:</th>\n            <td>{payment.externalPaymentId}</td>\n          </tr>\n          <tr>\n            <th>{t('Order ID')}:</th>\n            <td>{payment.order.id}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>{t('Total')}:</th>\n              <td>{currency(payment.amount + payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Amount')}:</th>\n            <td>{currency(payment.amount)}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>{t('Tip')}:</th>\n              <td>{currency(payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Card')}:</th>\n            <td>\n              <div>{t([`CARD~${payment.cardTransaction.cardType}`, payment.cardTransaction.cardType])}</div>\n              <div>{card(payment.cardTransaction)}</div>\n              {payment.cardTransaction.cardholderName && (\n                <div>\n                  {t([\n                    `CARDHOLDER_NAME~${payment.cardTransaction.cardholderName}`,\n                    payment.cardTransaction.cardholderName,\n                  ])}\n                </div>\n              )}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      {transaction.type === TRANSACTION.SALE && (\n        <div>\n          {amounts.partial && (\n            <button className=\"btn btn-primary btn-sm mr-1\" onClick={onRemaining}>\n              {t('Process')} {currency(amounts.remaining)}\n            </button>\n          )}\n          <button key=\"void\" className=\"btn btn-danger btn-sm\" onClick={onVoid}>\n            {t('Void')}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { hideTransaction } from '../../store';\nimport { TRANSACTION } from '../../common';\nimport parseAmounts from './parseAmounts';\nimport Transaction from './Transaction';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { addToast } = useToasts();\n\n  return transaction => {\n    const amounts = parseAmounts(transaction);\n\n    let appearance;\n    if (transaction.type === TRANSACTION.VOID) appearance = 'info';\n    else if (amounts.final >= amounts.start) appearance = 'success';\n    else if (amounts.final < amounts.start) appearance = 'warning';\n    else appearance = 'info';\n\n    addToast(<Transaction transaction={transaction} />, {\n      id: transaction.id,\n      appearance,\n      autoDismiss: false,\n      onDismiss: () => {\n        dispatch(hideTransaction(transaction.id));\n      },\n    });\n  };\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { format, compareDesc } from 'date-fns';\n\nimport { selectPaymentTransactions } from '../../store';\nimport { currency } from '../../common';\nimport { useShowTransaction } from '../Transaction';\n\nconst parseAmount = ({ amount, tipAmount, payment }) =>\n  currency(payment ? payment.amount + payment.tipAmount : amount + tipAmount);\n\nconst parseTimestamp = ({ timestamp }) => (timestamp ? format(timestamp, 'M/d h:mm a') : '??');\n\nexport default () => {\n  const { t } = useTranslation();\n  const transactions = useSelector(selectPaymentTransactions);\n  const showTransaction = useShowTransaction();\n\n  const sortedTransactions = useMemo(() => transactions.sort((a, b) => compareDesc(a.timestamp, b.timestamp)), [\n    transactions,\n  ]);\n\n  return (\n    <div className=\"History\">\n      <table className=\"table table-sm table-hover table-secondary table-striped\">\n        <thead>\n          <tr>\n            <th>{t('Date')}</th>\n            <th>{t('Type')}</th>\n            <th className=\"text-right\">{t('Amount')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedTransactions.map(transaction => (\n            <tr key={transaction.id} role=\"button\" onClick={() => showTransaction(transaction)}>\n              <td>{parseTimestamp(transaction)}</td>\n              <td>{transaction.type}</td>\n              <td className=\"text-right\">{parseAmount(transaction)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { Logo } from '../SVG';\nimport { MODE } from './constants';\nimport { selectVisible } from './selectors';\nimport Screen from './Screen';\nimport Keys from './Keys';\nimport Menu from './Menu';\nimport History from './History';\nimport './styles.scss';\n\nexport default () => {\n  const { t } = useTranslation();\n  const visible = useSelector(selectVisible);\n\n  const [mode, setMode] = useState(MODE.TRANSACTION);\n\n  if (!visible) return null;\n\n  return (\n    <div className=\"Keypad card\">\n      <div className=\"card-header\">\n        <Logo />\n        <h3>{t('Virtual Keypad')}</h3>\n        <Menu mode={mode} setMode={setMode} />\n      </div>\n      <div className=\"card-body\">\n        {mode === MODE.TRANSACTION && <Screen />}\n        {mode === MODE.TRANSACTION && <Keys />}\n        {mode === MODE.HISTORY && <History />}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nexport default ({ error }) => {\n  const { message, stack } = error;\n  const { t } = useTranslation();\n  const [expanded, setExpanded] = useState(false);\n\n  const expand = () => {\n    document.querySelector('.react-toast-notifications__container').classList.add('expanded');\n    setExpanded(true);\n  };\n\n  useEffect(() => {\n    return () => {\n      const remaining = document.querySelectorAll('.Error.expanded').length - (expanded ? 1 : 0);\n      if (!remaining) {\n        document.querySelector('.react-toast-notifications__container').classList.remove('expanded');\n      }\n    };\n  }, [expanded]);\n\n  return (\n    <div className={classNames('Error', { expanded })}>\n      <h5>{t([`ERROR~${message}`, message])}</h5>\n      {!!stack && !expanded && (\n        <button className=\"btn btn-link btn-sm\" onClick={expand}>\n          {t('Show details')}\n        </button>\n      )}\n      {!!stack && expanded && (\n        <pre className=\"mb-0\">\n          <code>{stack}</code>\n        </pre>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Configuration from '../Configuration';\nimport Devices from '../Devices/Devices';\nimport Keypad from '../Keypad';\nimport { useError } from '../Error';\nimport { useTransactions } from '../Transaction';\nimport useMouse from './useMouse';\nimport usePreventDoubleTapZoom from './usePreventDoubleTapZoom';\nimport './styles.scss';\n\nexport default () => {\n  const mouse = useMouse();\n  useError(mouse);\n  usePreventDoubleTapZoom();\n  useTransactions();\n\n  return (\n    <div className={classNames('App container maxwidth')}>\n      <Configuration />\n      <Devices />\n      <Keypad />\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { selectError, clearError } from '../../store';\nimport Error from './Error';\n\nexport default autoDismiss => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    if (error.message) {\n      addToast(<Error error={error} />, {\n        id: 'error',\n        appearance: 'error',\n        autoDismiss,\n        onDismiss: () => {\n          dispatch(clearError());\n        },\n      });\n    }\n  }, [addToast, dispatch, error, autoDismiss]);\n};\n","import { useState, useEffect } from 'react';\n\nexport default () => {\n  const [mouse, setMouse] = useState(false);\n\n  useEffect(() => {\n    if (!mouse) {\n      const onHover = () => setMouse(true);\n      document.addEventListener('mouseover', onHover);\n      return () => document.removeEventListener('mouseover', onHover);\n    }\n    return undefined;\n  }, [mouse, setMouse]);\n\n  return mouse;\n};\n","import { useEffect } from 'react';\n\nexport default ({ ms = 500 } = {}) =>\n  useEffect(() => {\n    let expires = 0;\n    const handler = event => {\n      if (event.touches.length === 1) {\n        const now = Date.now();\n        if (event.touches.length === 1 && now > expires) {\n          event.preventDefault();\n          // Trigger a fake click for the tap we just prevented\n          event.target.click();\n        }\n        expires = now + ms;\n      }\n    };\n\n    document.body.addEventListener('touchstart', handler, { passive: false });\n\n    return () => document.body.removeEventListener('touchstart', handler, { passive: false });\n  }, [ms]);\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectVisiblePaymentTransactions } from '../../store';\nimport useShowTransaction from './useShowTransaction';\n\nexport default () => {\n  const transactions = useSelector(selectVisiblePaymentTransactions);\n  const showTransaction = useShowTransaction();\n\n  useEffect(() => {\n    transactions.forEach(showTransaction);\n  }, [transactions, showTransaction]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { ToastProvider } from 'react-toast-notifications';\n\nimport store from './store';\nimport App from './components/App';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <ToastProvider placement=\"bottom-center\">\n        <App />\n      </ToastProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}