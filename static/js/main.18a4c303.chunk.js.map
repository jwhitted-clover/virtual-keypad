{"version":3,"sources":["common/constants.js","store/actions/initialState.js","store/configuration/initialState.js","common/Storage.js","store/connection/initialState.js","store/connection/reducer.js","store/devices/initialState.js","store/error/initialState.js","store/settings/initialState.js","store/signature/initialState.js","common/retryFetch.js","common/api.js","common/fetchDevices.js","common/fetchSettings.js","common/format.js","store/transactions/initialState.js","store/rootReducer.js","store/actions/reducer.js","store/actions/constants.js","store/connection/constants.js","store/buffer/reducer.js","store/buffer/initialState.js","store/buffer/constants.js","store/configuration/reducer.js","store/configuration/constants.js","store/devices/reducer.js","store/devices/constants.js","store/error/reducer.js","store/error/constants.js","store/settings/reducer.js","store/settings/constants.js","store/signature/reducer.js","store/signature/constants.js","store/status/reducer.js","store/status/initialState.js","store/status/constants.js","store/transactions/reducer.js","store/transactions/constants.js","store/configuration/selectors.js","store/error/actions.js","store/actions/actions.js","store/connection/selectors.js","store/status/actions.js","common/persist.js","store/configuration/actions.js","store/devices/actions.js","store/settings/actions.js","store/thunks/configure.js","store/devices/selectors.js","store/connection/actions.js","store/thunks/connect.js","store/transactions/actions.js","store/thunks/disconnect.js","locales/index.js","i18n.js","store/thunks/reset.js","store/error/selectors.js","store/thunks/showWelcome.js","store/buffer/actions.js","store/buffer/selectors.js","store/transactions/selectors.js","store/thunks/transaction.js","store/thunks/voidPayment.js","store/store.js","store/createStore.js","store/actions/selectors.js","store/settings/selectors.js","store/signature/selectors.js","store/status/selectors.js","components/Configuration/selectors.js","components/Fields/TextField.js","components/Fields/CheckboxField.js","components/SVG/Logo.js","components/Configuration/Configuration.js","components/Devices/selectors.js","components/Devices/Device.js","components/Devices/Devices.js","components/Keypad/constants.js","store/thunks/acceptPayment.js","store/thunks/acceptSignature.js","store/signature/actions.js","store/thunks/identify.js","store/thunks/invokeInputOption.js","store/thunks/rejectPayment.js","store/thunks/rejectSignature.js","components/Keypad/selectors.js","components/Keypad/Signature.js","components/Keypad/Screen.js","components/Keypad/Key.js","components/Keypad/Keys.js","components/Keypad/Menu.js","components/Transaction/parseAmounts.js","components/Transaction/Transaction.js","components/Transaction/useShowTransaction.js","components/Keypad/History.js","components/Keypad/Keypad.js","components/Error/Error.js","components/App/App.js","components/Error/useError.js","components/App/useMouse.js","components/App/usePreventDoubleTapZoom.js","components/Transaction/useTransactions.js","serviceWorker.js","index.js"],"names":["ACTION","APP","APP_NAME","APP_BY_NAME","Object","fromEntries","entries","map","arr","reverse","DOMAIN","PERMISSION","MANUAL_ENTRY_ALLOWED","PERFORM_MANUAL_REFUND","VOID_PAYMENTS","REG_PRODUCTS","TRANSACTION","qs","QS","parse","window","location","search","hash","storage","JSON","atob","localStorage","getItem","e","Storage","cloverDomain","configuration","document","referrer","URL","origin","includes","toString","getCloverDomain","merchantId","merchant_id","employeeId","employee_id","accessToken","access_token","friendlyId","loading","undefined","connector","connected","fixCreditPayIntent","doTxStart","device","payIntent","order","requestInfo","externalReferenceId","externalPaymentId","call","tryDispose","dispose","list","selected","message","stack","employee","permissions","width","height","strokes","retryFetch","url","retries","options","fetch","catch","deviceApps","deviceId","method","headers","accept","then","r","json","devices","permissionSets","filterNames","values","searchParams","set","length","n","join","appsReducer","o","a","app","appName","createPartition","array","size","reduce","last","push","api","elements","filter","d","test","productName","partitions","i","Promise","all","id","apps","flat","applications","currency","value","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","active","mode","data","rootReducer","combineReducers","actions","state","initialState","type","payload","found","some","description","inputOptions","io","buffer","replace","slice","connection","request","Clover","remotepay","RetrieveDeviceStatusRequest","setSendLastMessage","retrieveDeviceStatus","error","stringify","success","settings","signature","status","challenges","transactions","cur","timestamp","Date","now","amount","tipAmount","visible","newState","payment","credit","selectConfiguration","selectFriendlyId","createSelector","selectProduction","selectCardEntryMethods","production","CardEntryMethods","DEFAULT","CARD_ENTRY_METHOD_MANUAL","selectConfigurationLoading","setError","setActions","selectConnection","selectConnector","setStatus","text","initialDevices","setItem","btoa","setConfiguration","setDeviceId","setDevices","setPermissions","dispatch","getState","persist","fetchDevices","Error","fetchSettings","selectRawDevices","selectDeviceId","selectDevices","sort","b","setConnector","find","factory","CloverConnectorFactoryBuilder","createICloverConnectorFactory","FACTORY_VERSION","VERSION_12","createICloverConnector","WebSocketCloudCloverDeviceConfigurationBuilder","setCloverServer","setFriendlyId","build","Listener","keys","getPrototypeOf","forEach","ICloverConnectorListener","listener","addCloverConnectorListener","initializeConnection","setActiveTransaction","hideTransaction","updateTransaction","showWelcomeScreen","resolve","setTimeout","en","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","keySeparator","nsSeparator","interpolation","escapeValue","resources","action","resetDevice","selectError","appendBuffer","selectBuffer","selectRawTransactions","selectTransactions","selectActiveTransaction","selectActiveTransactionType","selectActiveTransactionAmount","selectPaymentTransactions","t","selectVisiblePaymentTransactions","selectTransactionMode","cardEntryMethods","CloverID","getNewId","SaleRequest","setAmount","setExternalId","setCardEntryMethods","sale","ManualRefundRequest","manualRefund","orderId","VoidPaymentRequest","setPaymentId","setOrderId","setVoidReason","VoidReason","USER_CANCEL","voidPayment","store","middleware","applyMiddleware","thunk","devTools","__REDUX_DEVTOOLS_EXTENSION__","enhancer","f","createStore","compose","config","configure","selectActions","selectTransactionAction","selectNonTransactionActions","selectRawSettings","selectEmployee","selectEmployeeRoles","roles","selectPermissions","selectCreditEnabled","employeeRoles","employeeRoleIds","permissionRoleIds","Set","p","name","has","selectVoidEnabled","selectSignature","selectSignatureBounds","bounds","points","point","x","X","y","Y","Math","min","max","Infinity","selectSignatureLines","selectStatus","selectVisible","autoCorrect","autoComplete","autoCapitalize","spellCheck","disabled","onChange","other","useTranslation","className","htmlFor","title","event","target","label","checked","isSwitch","switch","mb0","classNames","xmlns","viewBox","aria-labelledby","role","data-name","transform","useDispatch","useSelector","useState","setCloverDomain","setMerchantId","setEmployeeId","setAccessToken","submitting","setSubmitting","useMemo","submit","useCallback","preventDefault","reset","onSubmit","onReset","Card","CardHeader","Logo","CardBody","TextField","required","pattern","maxLength","CardFooter","Button","color","onClick","show","setShow","toggle","stopPropagation","cloud","cloudStatus","key","serial","onMouseEnter","onMouseLeave","aria-label","Tooltip","isOpen","placement","setDisabled","select","connect","Device","ACTION_CREATOR","acceptPayment","VerifySignatureRequest","setPayment","acceptSignature","disconnect","showMessage","InputOption","setDescription","setKeyPress","keyPress","invokeInputOption","rejectPayment","rejectSignature","showWelcome","transaction","MODE","HISTORY","lines","fill","stroke","tranType","tranAmount","translatedStatus","partial","match","Trans","i18nKey","cardEnding","last4","Signature","forwardRef","ref","keyCodes","moreActions","moreText","onMoreClick","children","useEffect","keydown","code","addEventListener","removeEventListener","k","ButtonDropdown","DropdownToggle","caret","DropdownMenu","right","DropdownItem","outline","innerRef","style","transactionAction","transactionMode","creditEnabled","actionClicked","setActionClicked","keysDisabled","onAction","actionHandler","keyRef","useRef","keyHeight","setKeyHeight","current","offsetWidth","submitOptions","action1","action2","Key","setMode","onShowWelcome","onDisconnect","m","CheckboxField","readOnly","divider","start","final","remaining","removeToast","useToasts","voidEnabled","voidableUntil","add","minutes","voidable","setVoidable","ms","to","clearTimeout","parseAmounts","onRemaining","doTransaction","onVoid","Table","orderRef","cardTransaction","cardType","first6","repeat","trim","card","cardholderName","addToast","appearance","amounts","Transaction","autoDismiss","onDismiss","showTransaction","useShowTransaction","sortedTransactions","compareDesc","hover","striped","format","parseTimestamp","parseAmount","Menu","Screen","Keys","History","expanded","setExpanded","querySelectorAll","querySelector","classList","remove","useError","mouse","setMouse","onHover","useMouse","expires","handler","touches","click","body","passive","usePreventDoubleTapZoom","useTransactions","Configuration","Devices","Keypad","Boolean","hostname","ReactDOM","render","StrictMode","App","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.18a4c303.chunk.js","sourcesContent":["export const ACTION = {\n  ACCEPT_PAYMENT: 'ACCEPT_PAYMENT',\n  ACCEPT_SIGNATURE: 'ACCEPT_SIGNATURE',\n  DISCONNECT: 'DISCONNECT',\n  IDENTIFY: 'IDENTIFY',\n  INVOKE_INPUT_OPTION: 'INVOKE_INPUT_OPTION',\n  REJECT_PAYMENT: 'REJECT_PAYMENT',\n  REJECT_SIGNATURE: 'REJECT_SIGNATURE',\n  RESET: 'RESET',\n  SHOW_WELCOME: 'SHOW_WELCOME',\n  TRANSACTION: 'TRANSACTION',\n  TRANSACTION_MODE: 'TRANSACTION_MODE',\n  VOID_PAYMENT: 'VOID_PAYMENT',\n};\n\nexport const APP = {\n  CLOUD_PAY_DISPLAY: 'CLOUD_PAY_DISPLAY',\n};\n\nexport const APP_NAME = {\n  [APP.CLOUD_PAY_DISPLAY]: 'Cloud Pay Display',\n};\n\nexport const APP_BY_NAME = Object.fromEntries(Object.entries(APP_NAME).map(arr => arr.reverse()));\n\nexport const DOMAIN = 'https://www.clover.com';\n\nexport const PERMISSION = {\n  MANUAL_ENTRY_ALLOWED: 'MANUAL_ENTRY_ALLOWED',\n  PERFORM_MANUAL_REFUND: 'PERFORM_MANUAL_REFUND',\n  VOID_PAYMENTS: 'VOID_PAYMENTS',\n};\n\nexport const REG_PRODUCTS = /^(Flex|Mini|Mobile)/i;\n\nexport const REMOTE_APPLICATION_ID = 'virtual-keypad';\n\nexport const STORAGE = 'clover/virtual-keypad';\n\nexport const TRANSACTION = {\n  SALE: 'SALE',\n  CREDIT: 'CREDIT',\n  VOID: 'VOID',\n};\n","export default [];\n","import QS from 'query-string';\n\nimport { DOMAIN } from '../../common/constants';\nimport * as Storage from '../../common/Storage';\n\nconst qs = QS.parse(window.location.search);\nconst hash = QS.parse(window.location.hash);\nconst storage = Storage.get();\n\nconst getCloverDomain = () => {\n  if (storage?.configuration?.cloverDomain) {\n    return storage?.configuration?.cloverDomain;\n  }\n  if (document.referrer) {\n    const referrer = new URL(document.referrer);\n    if (referrer.origin.includes('clover.com')) {\n      return referrer.toString();\n    }\n  }\n  return DOMAIN;\n};\n\nexport default {\n  cloverDomain: getCloverDomain(),\n  merchantId: qs.merchant_id || storage?.configuration?.merchantId || '',\n  employeeId: qs.employee_id || storage?.configuration?.employeeId || '',\n  accessToken: hash.access_token || storage?.configuration?.accessToken || '',\n  friendlyId: storage?.configuration?.friendlyId || 'Virtual Keypad',\n  loading: undefined,\n};\n","import { STORAGE } from './constants';\n\nexport const set = value => {\n  localStorage.setItem(STORAGE, btoa(JSON.stringify(value)));\n};\n\nexport const get = () => {\n  try {\n    return JSON.parse(atob(localStorage.getItem(STORAGE) || 'bnVsbA=='));\n  } catch (e) {\n    return null;\n  }\n};\n","export default {\n  connector: null,\n  connected: false,\n};\n","import Clover from 'remote-pay-cloud';\n\nimport * as CONST from './constants';\nimport initialState from './initialState';\n\nconst fixCreditPayIntent = connector => {\n  // HACK: CREDIT transactions do not properly relay externalId nor externalReferenceId\n  // We are going to override connector.device.doTxStart and populate the externalReferenceId from the externalPaymentId\n  const { doTxStart } = connector.device;\n  // eslint-disable-next-line no-param-reassign\n  connector.device.doTxStart = (payIntent, order, requestInfo) => {\n    if (requestInfo === 'CREDIT') {\n      // eslint-disable-next-line no-param-reassign\n      payIntent.externalReferenceId = payIntent.externalPaymentId;\n    }\n    return doTxStart.call(connector.device, payIntent, order, requestInfo);\n  };\n};\n\nconst tryDispose = connector => {\n  try {\n    // eslint-disable-next-line no-unused-expressions\n    connector?.dispose();\n  } catch (e) {\n    // Do nothing\n  }\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONNECTION_CLEAR:\n      tryDispose(state.connector);\n      return initialState;\n    case CONST.CONNECTION_SET:\n      tryDispose(state.connector);\n      return {\n        ...state,\n        connector: payload,\n        connected: false,\n      };\n    case '@@connector/onDeviceDisconnected':\n      return { ...state, connected: false };\n    case '@@connector/onDeviceReady': {\n      fixCreditPayIntent(state.connector);\n      const request = new Clover.remotepay.RetrieveDeviceStatusRequest();\n      request.setSendLastMessage(true);\n      state.connector.retrieveDeviceStatus(request);\n\n      return { ...state, connected: true };\n    }\n    default:\n      return state;\n  }\n};\n","export default {\n  list: [],\n  selected: '',\n};\n","export default {\n  message: null,\n  stack: null,\n};\n","export default {\n  employee: null,\n  permissions: null,\n};\n","export default {\n  width: 0,\n  height: 0,\n  strokes: [],\n};\n","const retryFetch = (url, { retries = 3, ...options }) =>\n  fetch(url, options).catch(e => {\n    if (retries > 1) return retryFetch(url, { retries: retries - 1, ...options });\n    throw e;\n  });\n\nexport default retryFetch;\n","import { PERMISSION } from './constants';\nimport retryFetch from './retryFetch';\n\nexport const deviceApps = ({ cloverDomain, merchantId, deviceId, accessToken }) =>\n  retryFetch(\n    new URL(\n      `/v2/merchant/${merchantId}/device/${deviceId}/current_apps?access_token=${accessToken}`,\n      cloverDomain\n    ).toString(),\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n    }\n  ).then(r => r.json());\n\nexport const devices = ({ cloverDomain, merchantId, accessToken }) =>\n  retryFetch(new URL(`/v3/merchants/${merchantId}/devices?access_token=${accessToken}`, cloverDomain).toString(), {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    },\n  }).then(r => r.json());\n\nexport const employee = ({ cloverDomain, merchantId, employeeId, accessToken }) =>\n  retryFetch(\n    new URL(\n      `/v3/merchants/${merchantId}/employees/${employeeId}?access_token=${accessToken}&expand=roles`,\n      cloverDomain\n    ).toString(),\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n    }\n  ).then(r => r.json());\n\nexport const permissionSets = ({ cloverDomain, merchantId, accessToken, filterNames = Object.values(PERMISSION) }) => {\n  const url = new URL(`/v3/merchants/${merchantId}/permission_sets`, cloverDomain);\n  url.searchParams.set('access_token', accessToken);\n  url.searchParams.set('expand', 'roles');\n  url.searchParams.set('limit', 1000);\n  if (filterNames?.length) {\n    url.searchParams.set('filter', `name in (${filterNames.map(n => `'${n}'`).join(',')})`);\n  }\n  return retryFetch(url.toString(), {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    },\n  }).then(r => r.json());\n};\n","import { APP_BY_NAME, REG_PRODUCTS } from './constants';\nimport * as api from './api';\n\nconst appsReducer = (o, a) => {\n  const app = APP_BY_NAME[a.appName];\n  return app ? { ...o, [app]: true } : o;\n};\n\nconst createPartition = (array, size) =>\n  array.reduce(\n    (a, o) => {\n      const last = a[a.length - 1];\n      if (last.length === size) {\n        a.push([o]);\n      } else {\n        last.push(o);\n      }\n      return a;\n    },\n    [[]]\n  );\n\nexport default async ({ cloverDomain, merchantId, accessToken }) => {\n  const { elements } = await api.devices({ cloverDomain, merchantId, accessToken });\n  const devices = elements.filter(d => REG_PRODUCTS.test(d.productName));\n\n  // NOTE: We need to limit simultaneous API requests.\n  const partitions = createPartition(devices, 4);\n  for (let i = 0; i < partitions.length; i++) {\n    // eslint-disable-next-line no-await-in-loop\n    partitions[i] = await Promise.all(\n      partitions[i].map(({ id: deviceId }) => api.deviceApps({ cloverDomain, merchantId, accessToken, deviceId }))\n    );\n  }\n  const apps = partitions.flat();\n\n  return devices.map((device, i) => ({\n    ...device,\n    apps: apps[i].applications.reduce(appsReducer, {}),\n  }));\n};\n","import * as api from './api';\n\nexport default async ({ cloverDomain, merchantId, accessToken, employeeId }) => {\n  const [employee, permissions] = await Promise.all([\n    api.employee({ cloverDomain, merchantId, employeeId, accessToken }).catch(() => null),\n    api.permissionSets({ cloverDomain, merchantId, accessToken }).catch(() => null),\n  ]);\n  return { employee, permissions };\n};\n","export const currency = value => {\n  const n = +value;\n  if (!isNaN(n) && n >= 0) {\n    return (n / 100).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  return '';\n};\n\nexport const card = ({ first6, last4 }) => [first6, '*'.repeat(6), last4].join('').replace(/.{4}/g, ' $&').trim();\n","import { TRANSACTION } from '../../common';\n\nexport default {\n  active: null,\n  mode: TRANSACTION.SALE,\n  data: {},\n};\n","import { combineReducers } from 'redux';\nimport actions from './actions/reducer';\nimport buffer from './buffer/reducer';\nimport configuration from './configuration/reducer';\nimport connection from './connection/reducer';\nimport devices from './devices/reducer';\nimport error from './error/reducer';\nimport settings from './settings/reducer';\nimport signature from './signature/reducer';\nimport status from './status/reducer';\nimport transactions from './transactions/reducer';\n\nconst rootReducer = combineReducers({\n  actions,\n  buffer,\n  configuration,\n  connection,\n  devices,\n  error,\n  settings,\n  signature,\n  status,\n  transactions,\n});\n\nexport default rootReducer;\n","import { ACTION } from '../../common/constants';\nimport * as CONST from './constants';\nimport { CONNECTION_SET } from '../connection/constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ACTIONS_CLEAR:\n      return initialState;\n    case CONST.ACTIONS_APPEND: {\n      const found = state.some(a => a.type === payload.type && a.payload?.description === payload.payload?.description);\n      return found ? state : [...state, payload];\n    }\n    case CONST.ACTIONS_SET:\n      return payload || [];\n    case CONNECTION_SET:\n      return [{ type: ACTION.DISCONNECT, payload: { description: 'Cancel' } }];\n    case '@@connector/onDeviceReady':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onResetDeviceResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onDeviceActivityStart':\n      return payload.inputOptions.map(io => ({ type: ACTION.INVOKE_INPUT_OPTION, payload: io }));\n    case '@@connector/onSaleResponse':\n    case '@@connector/onVoidPaymentResponse':\n    case '@@connector/onManualRefundResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onConfirmPaymentRequest':\n      return [\n        { type: ACTION.ACCEPT_PAYMENT, payload },\n        { type: ACTION.REJECT_PAYMENT, payload },\n      ];\n    case '@@connector/onVerifySignatureRequest':\n      return [\n        { type: ACTION.ACCEPT_SIGNATURE, payload },\n        { type: ACTION.REJECT_SIGNATURE, payload },\n      ];\n    default:\n      return state;\n  }\n};\n","export const ACTIONS_APPEND = 'appendActions';\nexport const ACTIONS_CLEAR = 'clearActions';\nexport const ACTIONS_SET = 'setActions';\n","export const CONNECTION_CLEAR = 'clearConnector';\nexport const CONNECTION_SET = 'setConnector';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.BUFFER_CLEAR:\n      return initialState;\n    case CONST.BUFFER_APPEND:\n      return (state + payload).replace(/^0+/, '').slice(0, 7);\n    case CONST.BUFFER_SET:\n      return payload;\n    case CONST.BUFFER_UNDO:\n      return state.length ? state.slice(0, state.length - 1) : '';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const BUFFER_APPEND = 'appendBuffer';\nexport const BUFFER_CLEAR = 'clearBuffer';\nexport const BUFFER_SET = 'setBuffer';\nexport const BUFFER_UNDO = 'undoBuffer';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONFIGURATION_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case CONST.CONFIGURATION_NOT_LOADING:\n      return {\n        ...state,\n        loading: undefined,\n      };\n    case CONST.CONFIGURATION_SET:\n      return {\n        ...state,\n        cloverDomain: payload.cloverDomain || '',\n        merchantId: payload.merchantId || '',\n        employeeId: payload.employeeId || '',\n        accessToken: payload.accessToken || '',\n        friendlyId: payload.friendlyId || '',\n      };\n    default:\n      return state;\n  }\n};\n","export const CONFIGURATION_LOADING = 'setConfigurationLoading';\nexport const CONFIGURATION_NOT_LOADING = 'setConfigurationNotLoading';\nexport const CONFIGURATION_SET = 'setConfiguration';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.DEVICES_CLEAR_LIST:\n      return {\n        ...state,\n        list: [],\n      };\n    case CONST.DEVICES_CLEAR_SELECTED:\n      return {\n        ...state,\n        selected: '',\n      };\n    case CONST.DEVICES_SET_SELECTED:\n      return {\n        ...state,\n        selected: payload || '',\n      };\n    case CONST.DEVICES_SET_LIST:\n      return {\n        ...state,\n        list: payload || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const DEVICES_CLEAR_LIST = 'clearDevices';\nexport const DEVICES_CLEAR_SELECTED = 'clearDeviceId';\nexport const DEVICES_SET_LIST = 'setDevices';\nexport const DEVICES_SET_SELECTED = 'setDeviceId';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ERROR_CLEAR:\n      return initialState;\n    case CONST.ERROR_SET:\n      return {\n        ...state,\n        message: payload.message,\n        stack: payload.stack,\n      };\n    case '@@connector/onDeviceError':\n      return {\n        ...state,\n        message: `Device Error ${payload.message}`,\n        stack: JSON.stringify(payload, null, 2),\n      };\n    case '@@connector/onManualRefundResponse':\n    case '@@connector/onSaleResponse':\n    case '@@connector/onVoidPaymentResponse':\n      if (!payload.success) {\n        return {\n          ...state,\n          message: payload.message,\n          stack: JSON.stringify(payload, null, 2),\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n","export const ERROR_CLEAR = 'clearError';\nexport const ERROR_SET = 'setError';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.SETTINGS_EMPLOYEE:\n      return {\n        ...state,\n        employee: payload,\n      };\n    case CONST.SETTINGS_PERMISSIONS:\n      return {\n        ...state,\n        permissions: payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const SETTINGS_EMPLOYEE = 'setEmployee';\nexport const SETTINGS_PERMISSIONS = 'setPermissions';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.SIGNATURE_CLEAR:\n      return initialState;\n    case CONST.SIGNATURE_SET:\n      return {\n        width: payload?.width || 0,\n        height: payload?.height || 0,\n        strokes: payload?.strokes || [],\n      };\n    case '@@connector/onVerifySignatureRequest':\n      return {\n        width: payload.signature?.width || 0,\n        height: payload.signature?.height || 0,\n        strokes: payload.signature?.strokes || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const SIGNATURE_CLEAR = 'clearSignature';\nexport const SIGNATURE_SET = 'setSignature';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.STATUS_CLEAR:\n      return '';\n    case CONST.STATUS_SET:\n      return payload || '';\n    case '@@connector/onDeviceReady':\n      return 'Ready';\n    case '@@connector/onResetDeviceResponse':\n      return 'Ready';\n    case '@@connector/onDeviceActivityStart':\n      return payload.message;\n    case '@@connector/onSaleResponse':\n    case '@@connector/onVoidPaymentResponse':\n    case '@@connector/onManualRefundResponse':\n      return 'Ready';\n    case '@@connector/onConfirmPaymentRequest':\n      return payload.challenges[0].message;\n    case '@@connector/onVerifySignatureRequest':\n      return 'Verify Signature';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const STATUS_CLEAR = 'clearStatus';\nexport const STATUS_SET = 'setStatus';\n","import * as CONST from './constants';\nimport initialState from './initialState';\nimport { TRANSACTION } from '../../common';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.TRANSACTIONS_MODE:\n      return {\n        ...state,\n        mode: payload,\n      };\n    case CONST.TRANSACTIONS_ACTIVE: {\n      if (payload.id) {\n        const cur = state.data[payload.id] || {};\n\n        return {\n          ...state,\n          active: payload.id,\n          data: {\n            ...state.data,\n            [payload.id]: {\n              ...state.data[payload.id],\n              id: payload.id,\n              timestamp: Date.now(),\n              type: payload.type || cur.type,\n              amount: payload.amount || cur.amount || 0,\n              tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            },\n          },\n        };\n      }\n      return {\n        ...state,\n        active: '',\n      };\n    }\n    case CONST.TRANSACTIONS_HIDE:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: false,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_SHOW:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: true,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_REMOVE: {\n      const newState = {\n        ...state,\n        data: { ...state.data },\n      };\n      delete newState.data[payload];\n      return newState;\n    }\n    case CONST.TRANSACTIONS_UPDATE: {\n      const cur = state.data[payload.id] || {};\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload.id]: {\n            ...cur,\n            id: payload.id,\n            timestamp: Date.now(),\n            visible: payload.visible || cur.visible || false,\n            amount: payload.amount || cur.amount || 0,\n            tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            type: payload.type || cur.type || '',\n            payment: payload.payment || cur.payment || null,\n          },\n        },\n      };\n    }\n    case '@@connector/onSaleResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.SALE,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      return state;\n    }\n    case '@@connector/onManualRefundResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.credit.externalReferenceId]: {\n              ...state.data[payload.credit.externalReferenceId],\n              id: payload.credit.externalReferenceId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.CREDIT,\n              payment: payload.credit,\n            },\n          },\n        };\n      }\n      return state;\n    }\n    case '@@connector/onVoidPaymentResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.VOID,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    default:\n      return state;\n  }\n};\n","export const TRANSACTIONS_ACTIVE = 'setActiveTransaction';\nexport const TRANSACTIONS_REMOVE = 'removeTransaction';\nexport const TRANSACTIONS_UPDATE = 'updateTransaction';\nexport const TRANSACTIONS_SHOW = 'showTransaction';\nexport const TRANSACTIONS_HIDE = 'hideTransaction';\nexport const TRANSACTIONS_MODE = 'setTransactionMode';\n","import Clover from 'remote-pay-cloud';\nimport { createSelector } from 'reselect';\n\nimport { DOMAIN } from '../../common';\n\nexport const selectConfiguration = state => state.configuration;\n\nexport const selectFriendlyId = createSelector(selectConfiguration, ({ friendlyId }) => friendlyId || 'Virtual Keypad');\n\nexport const selectProduction = createSelector(selectConfiguration, ({ cloverDomain }) => cloverDomain === DOMAIN);\n\nexport const selectCardEntryMethods = createSelector(selectProduction, production =>\n  production\n    ? Clover.CardEntryMethods.DEFAULT\n    : // eslint-disable-next-line no-bitwise\n      Clover.CardEntryMethods.DEFAULT | Clover.CardEntryMethods.CARD_ENTRY_METHOD_MANUAL\n);\n\nexport const selectConfigurationLoading = createSelector(selectConfiguration, ({ loading }) => loading || false);\n","import * as CONST from './constants';\n\nexport const clearError = () => ({ type: CONST.ERROR_CLEAR });\n\nexport const setError = ({ message, stack } = {}) => ({\n  type: CONST.ERROR_SET,\n  payload: { message, stack },\n});\n","import * as CONST from './constants';\n\nexport const appendAction = action => ({\n  type: CONST.ACTIONS_APPEND,\n  payload: action,\n});\n\nexport const clearActions = () => ({ type: CONST.ACTIONS_CLEAR });\n\nexport const setActions = actions => ({\n  type: CONST.ACTIONS_SET,\n  payload: actions,\n});\n","import { createSelector } from 'reselect';\n\nexport const selectConnection = state => state.connection;\n\nexport const selectConnector = createSelector(selectConnection, ({ connector }) => connector);\n\nexport const selectConnected = createSelector(selectConnection, ({ connected }) => connected);\n","import * as CONST from './constants';\n\nexport const clearStatus = () => ({ type: CONST.STATUS_CLEAR });\n\nexport const setStatus = text => ({\n  type: CONST.STATUS_SET,\n  payload: text,\n});\n","import * as Storage from './Storage';\nimport initialDevices from '../store/devices/initialState';\n\nexport default ({ configuration, devices }) =>\n  Storage.set({\n    configuration: {\n      ...configuration,\n      loading: undefined,\n    },\n    devices: {\n      ...initialDevices,\n      selected: devices.selected,\n    },\n  });\n","import * as CONST from './constants';\n\nexport const setConfiguration = ({ cloverDomain, merchantId, employeeId, accessToken, friendlyId }) => ({\n  type: CONST.CONFIGURATION_SET,\n  payload: { cloverDomain, merchantId, employeeId, accessToken, friendlyId },\n});\n\nexport const setConfigurationLoading = () => ({ type: CONST.CONFIGURATION_LOADING });\n\nexport const setConfigurationNotLoading = () => ({ type: CONST.CONFIGURATION_NOT_LOADING });\n","import * as CONST from './constants';\n\nexport const clearDeviceId = () => ({ type: CONST.DEVICES_CLEAR_SELECTED });\n\nexport const clearDevices = () => ({ type: CONST.DEVICES_CLEAR_LIST });\n\nexport const setDeviceId = deviceId => ({\n  type: CONST.DEVICES_SET_SELECTED,\n  payload: deviceId,\n});\n\nexport const setDevices = devices => ({\n  type: CONST.DEVICES_SET_LIST,\n  payload: devices,\n});\n","import * as CONST from './constants';\n\nexport const setEmployee = data => ({\n  type: CONST.SETTINGS_EMPLOYEE,\n  payload: data,\n});\n\nexport const setPermissions = data => ({\n  type: CONST.SETTINGS_PERMISSIONS,\n  payload: data,\n});\n","import { APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport fetchDevices from '../../common/fetchDevices';\nimport fetchSettings from '../../common/fetchSettings';\nimport { setConfiguration, setConfigurationLoading, setConfigurationNotLoading } from '../configuration/actions';\nimport { setDevices } from '../devices/actions';\nimport { clearError, setError } from '../error/actions';\nimport { setEmployee, setPermissions } from '../settings/actions';\n\nexport default ({ cloverDomain, merchantId, employeeId, accessToken, friendlyId }) => async (dispatch, getState) => {\n  try {\n    await dispatch({ type: 'configure', payload: { cloverDomain, merchantId, employeeId, accessToken, friendlyId } });\n    await dispatch(clearError());\n    await dispatch(setConfigurationLoading());\n\n    await dispatch(setConfiguration({ cloverDomain, merchantId, employeeId, accessToken, friendlyId }));\n    persist(getState());\n\n    const devices = await fetchDevices({ cloverDomain, merchantId, employeeId, accessToken });\n    await dispatch(setDevices(devices));\n\n    if (!devices.length) {\n      throw new Error('Merchant has no devices');\n    }\n\n    if (!devices.some(a => a.apps[APP.CLOUD_PAY_DISPLAY])) {\n      throw new Error('Merchant has no devices with Cloud Pay Display installed');\n    }\n\n    const { employee, permissions } = await fetchSettings({ cloverDomain, merchantId, employeeId, accessToken });\n    await dispatch(setEmployee(employee));\n    await dispatch(setPermissions(permissions));\n  } catch (e) {\n    await dispatch(setError(e));\n  } finally {\n    await dispatch(setConfigurationNotLoading());\n  }\n};\n","import { createSelector } from 'reselect';\n\nexport const selectRawDevices = state => state.devices;\n\nexport const selectDeviceId = createSelector(selectRawDevices, ({ selected }) => selected);\n\nexport const selectDevices = createSelector(selectRawDevices, selectDeviceId, ({ list }, deviceId) =>\n  [...list].sort((a, b) => (a.id === deviceId ? -1 : b.id === deviceId ? 1 : 0))\n);\n","import * as CONST from './constants';\n\nexport const clearConnector = () => ({ type: CONST.CONNECTION_CLEAR });\n\nexport const setConnector = connector => ({\n  type: CONST.CONNECTION_SET,\n  payload: connector,\n});\n","import Clover from 'remote-pay-cloud';\n\nimport { REMOTE_APPLICATION_ID, APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport { selectConfiguration } from '../configuration/selectors';\nimport { selectDevices } from '../devices/selectors';\nimport { setConnector } from '../connection/actions';\nimport { setDeviceId } from '../devices/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default deviceId => async (dispatch, getState) => {\n  try {\n    await dispatch({ type: 'connect', payload: deviceId });\n    await dispatch(setDeviceId(deviceId));\n\n    const state = getState();\n    persist(state);\n\n    const { cloverDomain, merchantId, accessToken, friendlyId } = selectConfiguration(state);\n    const device = selectDevices(state).find(d => d.id === deviceId);\n\n    if (!device) throw new Error(`Device not found`);\n    if (!device.apps[APP.CLOUD_PAY_DISPLAY]) throw new Error('Device does not have Cloud Pay Display installed');\n\n    const factory = Clover.CloverConnectorFactoryBuilder.createICloverConnectorFactory({\n      [Clover.CloverConnectorFactoryBuilder.FACTORY_VERSION]: Clover.CloverConnectorFactoryBuilder.VERSION_12,\n    });\n\n    const connector = factory.createICloverConnector(\n      new Clover.WebSocketCloudCloverDeviceConfigurationBuilder(\n        REMOTE_APPLICATION_ID,\n        deviceId,\n        merchantId,\n        accessToken\n      )\n        .setCloverServer(cloverDomain)\n        .setFriendlyId(friendlyId)\n        .build()\n    );\n\n    class Listener extends Clover.remotepay.ICloverConnectorListener {\n      constructor() {\n        super();\n        Object.keys(Object.getPrototypeOf(Object.getPrototypeOf(this))).forEach(type => {\n          this[type] = payload => dispatch({ type: `@@connector/${type}`, payload });\n        });\n      }\n    }\n    const listener = new Listener();\n    connector.addCloverConnectorListener(listener);\n\n    dispatch(setConnector(connector));\n    dispatch(setStatus('Connecting…'));\n\n    connector.initializeConnection();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const setActiveTransaction = ({ id, type, amount, tipAmount } = {}) => ({\n  type: CONST.TRANSACTIONS_ACTIVE,\n  payload: { id, type, amount, tipAmount },\n});\n\nexport const removeTransaction = id => ({\n  type: CONST.TRANSACTIONS_REMOVE,\n  payload: id,\n});\n\nexport const showTransaction = id => ({\n  type: CONST.TRANSACTIONS_SHOW,\n  payload: id,\n});\n\nexport const hideTransaction = id => ({\n  type: CONST.TRANSACTIONS_HIDE,\n  payload: id,\n});\n\nexport const updateTransaction = ({ id, type, amount, tipAmount, payment }) => ({\n  type: CONST.TRANSACTIONS_UPDATE,\n  payload: { id, type, amount, tipAmount, payment },\n});\n\nexport const setTransactionMode = ({ mode }) => ({\n  type: CONST.TRANSACTIONS_MODE,\n  payload: mode,\n});\n","import { clearConnector } from '../connection/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setError } from '../error/actions';\nimport { clearDevices } from '../devices/actions';\nimport { setActiveTransaction } from '../transactions/actions';\n\nexport default () => async (dispatch, getState) => {\n  try {\n    await dispatch({ type: 'disconnect' });\n\n    const connector = selectConnector(getState());\n    try {\n      connector.showWelcomeScreen();\n      await new Promise(resolve => setTimeout(resolve, 500));\n    } catch (e2) {\n      // Do nothing\n    }\n\n    connector.dispose();\n\n    await dispatch(clearConnector());\n    await dispatch(clearDevices());\n    await dispatch(setActiveTransaction());\n  } catch (e) {\n    await dispatch(setError(e));\n  }\n};\n","import en from './en.json';\n\nexport default { en };\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport resources from './locales';\n\nexport default i18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'en',\n    debug: false,\n    keySeparator: '~',\n    nsSeparator: false,\n    interpolation: { escapeValue: false },\n    resources,\n  });\n","import { selectConnector } from '../connection/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'reset' });\n    dispatch(setStatus('Resetting…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.resetDevice();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","export const selectError = state => state.error;\n","import { setError } from '../error';\nimport { ACTION } from '../../common/constants';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'showWelcome' });\n    dispatch(setStatus('Ready'));\n    dispatch(setActions([{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }]));\n\n    const connector = selectConnector(getState());\n    connector.showWelcomeScreen();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const appendBuffer = value => ({\n  type: CONST.BUFFER_APPEND,\n  payload: value,\n});\n\nexport const clearBuffer = () => ({ type: CONST.BUFFER_CLEAR });\n\nexport const setBuffer = value => ({\n  type: CONST.BUFFER_SET,\n  payload: value || '',\n});\n\nexport const undoBuffer = () => ({ type: CONST.BUFFER_UNDO });\n","export const selectBuffer = state => state.buffer;\n","import { createSelector } from 'reselect';\n\nexport const selectRawTransactions = state => state.transactions;\n\nexport const selectTransactions = createSelector(selectRawTransactions, ({ data }) => Object.values(data));\n\nexport const selectActiveTransaction = createSelector(selectRawTransactions, ({ active, data }) => data[active]);\n\nexport const selectActiveTransactionType = createSelector(selectActiveTransaction, active => active?.type);\n\nexport const selectActiveTransactionAmount = createSelector(\n  selectActiveTransaction,\n  active => (active?.amount || 0) + (active?.tipAmount || 0)\n);\n\nexport const selectPaymentTransactions = createSelector(selectTransactions, transactions =>\n  transactions.filter(t => t.payment)\n);\n\nexport const selectVisiblePaymentTransactions = createSelector(selectPaymentTransactions, transactions =>\n  transactions.filter(t => t.visible)\n);\n\nexport const selectTransactionMode = createSelector(selectRawTransactions, ({ mode }) => mode);\n","import Clover from 'remote-pay-cloud';\nimport i18n from '../../i18n';\n\nimport { clearBuffer } from '../buffer/actions';\nimport { selectBuffer } from '../buffer/selectors';\nimport { selectConnector } from '../connection/selectors';\nimport { selectCardEntryMethods } from '../configuration/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\nimport { TRANSACTION } from '../../common/constants';\nimport { updateTransaction, setActiveTransaction, selectTransactionMode } from '../transactions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    const t = await i18n;\n    dispatch({ ...action, type: 'transaction' });\n\n    const state = getState();\n    const buffer = selectBuffer(state);\n    const connector = selectConnector(state);\n    const cardEntryMethods = selectCardEntryMethods(state);\n    const type = selectTransactionMode(state);\n\n    dispatch(clearActions());\n    dispatch(setStatus('Processing...'));\n    dispatch(clearBuffer());\n\n    const amount = +buffer;\n    if (!amount) throw new Error('Amount is required');\n    if (isNaN(amount)) throw new Error('Amount is invalid');\n    if (amount <= 0 || amount > 99_999_99) throw new Error('Amount is invalid');\n\n    let id = Clover.CloverID.getNewId();\n    if (type === TRANSACTION.CREDIT) {\n      // HACK: externalId is ignored.  We need to use the externalReferenceId field, which is limited to 12-chars.\n      id = id.slice(0, 12);\n    }\n\n    dispatch(setActiveTransaction({ id, type, amount }));\n\n    switch (type) {\n      case TRANSACTION.SALE:\n        {\n          const request = new Clover.remotepay.SaleRequest();\n          request.setAmount(amount);\n          request.setExternalId(id);\n          request.setCardEntryMethods(cardEntryMethods);\n\n          dispatch(updateTransaction({ id, type: TRANSACTION.SALE, amount }));\n\n          connector.sale(request);\n        }\n        break;\n      case TRANSACTION.CREDIT:\n        {\n          const request = new Clover.remotepay.ManualRefundRequest();\n          request.setAmount(amount);\n          request.setExternalId(id);\n          request.setCardEntryMethods(cardEntryMethods);\n\n          dispatch(updateTransaction({ id, type: TRANSACTION.CREDIT, amount }));\n\n          connector.manualRefund(request);\n        }\n        break;\n      default:\n        throw new Error(`${t('ERROR~Invalid transaction type')}: ${type}`);\n    }\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { TRANSACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setStatus } from '../status/actions';\nimport { setActiveTransaction } from '../transactions';\n\nexport default payment => async (dispatch, getState) => {\n  try {\n    dispatch({ type: 'voidPayment', payload: payment });\n\n    const { id, externalPaymentId, orderId, amount, tipAmount } = payment;\n    const connector = selectConnector(getState());\n\n    dispatch(clearActions());\n    dispatch(setStatus('Processing…'));\n    if (!id) throw new Error('No payment was specified');\n\n    const type = TRANSACTION.VOID;\n    dispatch(setActiveTransaction({ id: externalPaymentId, type, amount, tipAmount }));\n\n    const request = new Clover.remotepay.VoidPaymentRequest();\n    request.setPaymentId(id);\n    request.setOrderId(orderId);\n    request.setVoidReason(Clover.order.VoidReason.USER_CANCEL);\n    connector.voidPayment(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import createStore from './createStore';\nimport { selectConfiguration } from './configuration/selectors';\nimport { configure } from './thunks';\n\nconst store = createStore(undefined);\n\nconst config = selectConfiguration(store.getState());\nstore.dispatch(configure(config));\n\nexport default store;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nexport default initialState => {\n  const middleware = applyMiddleware(thunk);\n\n  // eslint-disable-next-line no-underscore-dangle\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n  const enhancer = devTools ? devTools() : f => f;\n\n  return createStore(rootReducer, initialState, compose(middleware, enhancer));\n};\n","import { createSelector } from 'reselect';\n\nimport { ACTION } from '../../common/constants';\n\nexport const selectActions = state => state.actions;\n\nexport const selectTransactionAction = createSelector(selectActions, actions =>\n  actions.find(a => a.type === ACTION.TRANSACTION)\n);\n\nexport const selectNonTransactionActions = createSelector(selectActions, actions => {\n  const arr = actions.filter(a => a.type !== ACTION.TRANSACTION);\n  if (arr.length === 2) {\n    const [a, b] = arr;\n    if (a.payload?.description === 'No' && b.payload?.description === 'Yes') {\n      return [b, a];\n    }\n  }\n  return arr;\n});\n","import { createSelector } from 'reselect';\nimport { PERMISSION } from '../../common';\n\nexport const selectRawSettings = state => state.settings;\n\nexport const selectEmployee = createSelector(selectRawSettings, ({ employee }) => employee);\n\nexport const selectEmployeeRoles = createSelector(selectEmployee, employee => employee?.roles?.elements);\n\nexport const selectPermissions = createSelector(selectRawSettings, ({ permissions }) => permissions?.elements);\n\nexport const selectCreditEnabled = createSelector(\n  selectEmployeeRoles,\n  selectPermissions,\n  (employeeRoles, permissions) => {\n    if (employeeRoles && permissions) {\n      const employeeRoleIds = employeeRoles.map(r => r.id);\n      const permissionRoleIds = new Set(\n        permissions\n          .filter(p => p.name === PERMISSION.PERFORM_MANUAL_REFUND)\n          .map(p => p.roles?.elements.map(r => r.id))\n          .flat()\n      );\n      return employeeRoleIds.some(id => permissionRoleIds.has(id));\n    }\n    return false;\n  }\n);\n\nexport const selectVoidEnabled = createSelector(\n  selectEmployeeRoles,\n  selectPermissions,\n  (employeeRoles, permissions) => {\n    if (employeeRoles && permissions) {\n      const employeeRoleIds = employeeRoles.map(r => r.id);\n      const permissionRoleIds = new Set(\n        permissions\n          .filter(p => p.name === PERMISSION.VOID_PAYMENTS)\n          .map(p => p.roles?.elements.map(r => r.id))\n          .flat()\n      );\n      return employeeRoleIds.some(id => permissionRoleIds.has(id));\n    }\n    return false;\n  }\n);\n","import { createSelector } from 'reselect';\n\nexport const selectSignature = state => state.signature;\n\nexport const selectSignatureBounds = createSelector(selectSignature, ({ strokes }) => {\n  const bounds = strokes\n    .map(({ points }) => points)\n    .flat()\n    .reduce(\n      ({ x, X, y, Y }, point) => ({\n        x: Math.min(x, point.x),\n        X: Math.max(X, point.x),\n        y: Math.min(y, point.y),\n        Y: Math.max(Y, point.y),\n      }),\n      { x: Infinity, X: -Infinity, y: Infinity, Y: -Infinity }\n    );\n  return [bounds.x, bounds.y, bounds.X - bounds.x, bounds.Y - bounds.y].join(' ');\n});\n\nexport const selectSignatureLines = createSelector(selectSignature, ({ strokes }) =>\n  strokes.map(({ points }) => points.map(({ x, y }) => `${x},${y}`).join(' '))\n);\n","export const selectStatus = state => state.status;\n","import { createSelector } from 'reselect';\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !devices.length\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default ({\n  id,\n  type = 'text',\n  autoCorrect = 'off',\n  autoComplete = 'off',\n  autoCapitalize = 'off',\n  spellCheck = 'false',\n  value,\n  disabled,\n  onChange,\n  ...other\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={id}>{t(`${id}~label`)}:</label>\n      <input\n        id={id}\n        type={type}\n        className=\"form-control\"\n        title={t(`${id}~title`, '')}\n        autoCorrect={autoCorrect}\n        autoComplete={autoComplete}\n        autoCapitalize={autoCapitalize}\n        spellCheck={spellCheck}\n        value={value}\n        onChange={event => onChange(event.target.value)}\n        disabled={disabled}\n        {...other}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport default ({ id, label, checked, onChange, disabled, switch: isSwitch, mb0, ...other }) => {\n  return (\n    <div className={classNames('form-group', { 'mb-0': mb0 })}>\n      <div className={classNames('custom-control', { 'custom-switch': isSwitch, 'custom-checkbox': !isSwitch })}>\n        <input\n          id={id}\n          type=\"checkbox\"\n          className=\"custom-control-input\"\n          checked={checked}\n          onChange={() => onChange(!checked)}\n          disabled={disabled}\n          {...other}\n        />\n        <label className=\"custom-control-label font-weight-normal\" htmlFor={id}>\n          {label}\n        </label>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default ({ size = 28 }) => {\n  const { t } = useTranslation();\n  return (\n    <svg\n      className=\"Logo\"\n      id=\"clover-logo-svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 33.15 33.15\"\n      aria-labelledby=\"svg-logo-title\"\n      role=\"image\"\n    >\n      <title id=\"svg-logo-title\">{t('Clover')}</title>\n      <g id=\"clover-symbol-2\" data-name=\"clover-symbol\">\n        <path d=\"M191.45,85.64A7.5,7.5,0,1,0,184,93.09h7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,85.64a7.5,7.5,0,1,1,7.49,7.45h-7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,102.7a7.5,7.5,0,1,0,7.49-7.45h-7.49v7.45Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path\n          d=\"M191.46,102.7A7.5,7.5,0,1,1,184,95.25h7.49v7.45Zm-7.5,5.35a5.38,5.38,0,0,0,5.4-5.35V97.36H184a5.35,5.35,0,1,0,0,10.7h0Z\"\n          transform=\"translate(-176.46 -77.01)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n","import React, { useCallback, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { configure, selectConfiguration, selectConfigurationLoading } from '../../store';\nimport { selectVisible } from './selectors';\nimport { TextField } from '../Fields';\nimport { Logo } from '../SVG';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const configuration = useSelector(selectConfiguration);\n  const loading = useSelector(selectConfigurationLoading);\n  const visible = useSelector(selectVisible);\n\n  const [cloverDomain, setCloverDomain] = useState(configuration.cloverDomain);\n  const [merchantId, setMerchantId] = useState(configuration.merchantId);\n  const [employeeId, setEmployeeId] = useState(configuration.employeeId);\n  const [accessToken, setAccessToken] = useState(configuration.accessToken);\n  const [friendlyId, setFriendlyId] = useState(configuration.friendlyId);\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const disabled = useMemo(() => loading || submitting, [loading, submitting]);\n\n  const submit = useCallback(\n    async event => {\n      try {\n        event.preventDefault();\n        setSubmitting(true);\n        await dispatch(configure({ cloverDomain, merchantId, employeeId, accessToken, friendlyId }));\n      } finally {\n        setSubmitting(false);\n      }\n    },\n    [dispatch, cloverDomain, merchantId, employeeId, accessToken, friendlyId]\n  );\n\n  const reset = useCallback(\n    event => {\n      event.preventDefault();\n      setCloverDomain(configuration.cloverDomain);\n      setMerchantId(configuration.merchantId);\n      setEmployeeId(configuration.employeeId);\n      setAccessToken(configuration.accessToken);\n      setFriendlyId(configuration.friendlyId);\n    },\n    [configuration, setCloverDomain, setMerchantId, setEmployeeId, setAccessToken, setFriendlyId]\n  );\n\n  if (!visible) return null;\n\n  return (\n    <form onSubmit={submit} onReset={reset}>\n      <Card className=\"Configuration\">\n        <CardHeader>\n          <Logo />\n          <h3>{t('Virtual Keypad')}</h3>\n        </CardHeader>\n        {loading && (\n          <CardBody>\n            <p>Loading...</p>\n          </CardBody>\n        )}\n        {!loading && (\n          <>\n            <CardBody>\n              <TextField\n                id=\"cloverDomain\"\n                type=\"url\"\n                value={cloverDomain}\n                onChange={setCloverDomain}\n                disabled={disabled}\n                required\n              />\n              <TextField\n                id=\"merchantId\"\n                pattern=\"^[a-zA-Z0-9]{13}$\"\n                maxLength=\"13\"\n                value={merchantId}\n                onChange={setMerchantId}\n                disabled={disabled}\n                required\n              />\n              <TextField\n                id=\"employeeId\"\n                pattern=\"^[a-zA-Z0-9]{13}$\"\n                maxLength=\"13\"\n                value={employeeId}\n                onChange={setEmployeeId}\n                disabled={disabled}\n              />\n              <TextField\n                id=\"accessToken\"\n                pattern=\"^[a-fA-F0-9]{8}(-?[a-fA-F0-9]{4}){3}-?[a-fA-F0-9]{12}$\"\n                value={accessToken}\n                onChange={setAccessToken}\n                disabled={disabled}\n                required\n              />\n              <TextField id=\"friendlyId\" value={friendlyId} onChange={setFriendlyId} disabled={disabled} />\n            </CardBody>\n            <CardFooter>\n              <Button type=\"submit\" color=\"success\" disabled={disabled}>\n                {t('Submit')}\n              </Button>\n              <Button type=\"reset\" color=\"secondary\" className=\"ml-2\" disabled={disabled}>\n                {t('Reset')}\n              </Button>\n            </CardFooter>\n          </>\n        )}\n      </Card>\n    </form>\n  );\n};\n","import { createSelector } from 'reselect';\n\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !!devices.length\n);\n","import React, { useState, useMemo } from 'react';\nimport { Tooltip } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nimport { APP } from '../../common/constants';\n\nexport default ({ device, active, disabled, onClick }) => {\n  const { t } = useTranslation();\n  const [show, setShow] = useState(false);\n  const id = useMemo(() => `device-${device.id}`, [device.id]);\n\n  const toggle = event => {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setShow(!show);\n  };\n\n  const cloud = device.apps[APP.CLOUD_PAY_DISPLAY];\n  const cloudStatus = t(`cloudPayDisplay~${cloud ? '' : 'un'}installed`);\n\n  return (\n    <button\n      key={device.id}\n      type=\"button\"\n      className={classNames(\n        'list-group-item d-flex justify-content-between align-items-center list-group-item-action p-1',\n        {\n          disabled,\n          'list-group-item-primary': !disabled && active,\n        }\n      )}\n      onClick={onClick}\n    >\n      <div className=\"p-1\">\n        {device.name && <div className=\"font-weight-bold\">{device.name}</div>}\n        {device.productName} {device.serial}\n      </div>\n      <span\n        id={id}\n        onMouseEnter={() => setShow(true)}\n        onMouseLeave={() => setShow(false)}\n        onClick={toggle}\n        className={classNames('badge p-1', {\n          'badge-secondary': disabled,\n          'badge-success': !disabled && cloud,\n          'badge-warning': !disabled && !cloud,\n        })}\n        role=\"img\"\n        aria-label={cloudStatus}\n      >\n        ☁️\n      </span>\n      <Tooltip isOpen={show} target={id} toggle={toggle} placement=\"left\">\n        <span className=\"small\">{cloudStatus}</span>\n      </Tooltip>\n    </button>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectDevices, selectDeviceId, connect, clearDevices } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\nimport Device from './Device';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const devices = useSelector(selectDevices);\n  const deviceId = useSelector(selectDeviceId);\n  const visible = useSelector(selectVisible);\n  const [disabled, setDisabled] = useState();\n\n  const select = useCallback(\n    id => async event => {\n      try {\n        event.preventDefault();\n        setDisabled(true);\n        await dispatch(connect(id));\n      } finally {\n        setDisabled(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const cancel = () => dispatch(clearDevices());\n\n  if (!visible) return null;\n\n  return (\n    <Card className=\"Devices\">\n      <CardHeader>\n        <Logo />\n        <h3>{t('Virtual Keypad')}</h3>\n        <button className=\"close text-light\" title={t('Cancel')} onClick={cancel} disabled={disabled}>\n          &times;\n        </button>\n      </CardHeader>\n      <CardBody>\n        <div className=\"form-group\">\n          <label>{t('Select Device')}:</label>\n          <div className=\"list-group\">\n            {devices.map(device => (\n              <Device\n                key={device.id}\n                device={device}\n                disabled={disabled}\n                active={device.id === deviceId}\n                onClick={select(device.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n","import { ACTION } from '../../common/constants';\nimport {\n  acceptPayment,\n  acceptSignature,\n  disconnect,\n  identify,\n  invokeInputOption,\n  rejectPayment,\n  rejectSignature,\n  reset,\n  setTransactionMode,\n  showWelcome,\n  transaction,\n} from '../../store';\n\nexport const ACTION_CREATOR = {\n  [ACTION.ACCEPT_PAYMENT]: acceptPayment,\n  [ACTION.ACCEPT_SIGNATURE]: acceptSignature,\n  [ACTION.DISCONNECT]: disconnect,\n  [ACTION.IDENTIFY]: identify,\n  [ACTION.INVOKE_INPUT_OPTION]: invokeInputOption,\n  [ACTION.REJECT_PAYMENT]: rejectPayment,\n  [ACTION.REJECT_SIGNATURE]: rejectSignature,\n  [ACTION.RESET]: reset,\n  [ACTION.SHOW_WELCOME]: showWelcome,\n  [ACTION.TRANSACTION]: transaction,\n  [ACTION.TRANSACTION_MODE]: ({ payload }) => setTransactionMode(payload),\n};\n\nexport const MODE = {\n  TRANSACTION: 'TRANSACTION',\n  HISTORY: 'HISTORY',\n};\n","import { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'acceptPayment' });\n    dispatch(setStatus('Accepting payment…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.acceptPayment(action.payload.payment);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { clearSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'acceptSignature' });\n    dispatch(setStatus('Accepting signature…'));\n    dispatch(clearActions());\n    dispatch(clearSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.acceptSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const clearSignature = () => ({ type: CONST.SIGNATURE_CLEAR });\n\nexport const setSignature = signature => ({\n  type: CONST.SIGNATURE_SET,\n  payload: signature,\n});\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { selectFriendlyId } from '../configuration/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\nimport i18n from '../../i18n';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    const t = await i18n;\n    dispatch({ ...action, type: 'identify' });\n    dispatch(setStatus('Identifying…'));\n    dispatch(\n      setActions([\n        { type: ACTION.SHOW_WELCOME, payload: { description: 'OK' } },\n        { type: ACTION.DISCONNECT, payload: { description: 'Cancel' } },\n      ])\n    );\n\n    const state = getState();\n    const connector = selectConnector(state);\n    const friendlyId = selectFriendlyId(state);\n\n    connector.showMessage(`${friendlyId} ${t('connected')}`);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'invokeInputOption' });\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.InputOption();\n    request.setDescription(action.payload.description);\n    request.setKeyPress(action.payload.keyPress);\n    connector.invokeInputOption(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'rejectPayment' });\n    dispatch(setStatus('Rejecting payment…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.rejectPayment(action.payload.payment, action.payload.challenges[0]);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { clearSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'rejectSignature' });\n    dispatch(setStatus('Rejecting signature…'));\n    dispatch(clearActions());\n    dispatch(clearSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.rejectSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { createSelector } from 'reselect';\nimport { selectConnector } from '../../store';\n\nexport const selectVisible = createSelector(selectConnector, connector => !!connector);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectSignatureBounds, selectSignatureLines } from '../../store';\n\nexport default ({ width = 250, ...other }) => {\n  const bounds = useSelector(selectSignatureBounds);\n  const lines = useSelector(selectSignatureLines);\n\n  if (!lines.length) return null;\n\n  return (\n    <div className=\"Signature\">\n      <svg viewBox={bounds} width={width} {...other}>\n        {lines.map((points, i) => (\n          <polyline key={i} points={points} fill=\"none\" stroke=\"black\" />\n        ))}\n      </svg>\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport { currency } from '../../common';\nimport { selectStatus, selectBuffer, selectActiveTransactionType, selectActiveTransactionAmount } from '../../store';\nimport Signature from './Signature';\n\nexport default () => {\n  const { t } = useTranslation();\n  const status = useSelector(selectStatus);\n  const buffer = useSelector(selectBuffer);\n  const tranType = useSelector(selectActiveTransactionType);\n  const tranAmount = useSelector(selectActiveTransactionAmount);\n\n  const translatedStatus = useMemo(() => {\n    const partial = status.match(/^Partial authorization for (.+)\\nContinue with transaction\\?$/);\n    if (partial) {\n      const [, amount] = partial;\n      return (\n        <Trans i18nKey=\"STATUS~Partial authorization\" amount={amount}>\n          Partial authorization for {{ amount }}\n          Continue with transaction?\n        </Trans>\n      );\n    }\n    const cardEnding = status.match(/^Processing Card ending in (\\d+)…$/);\n    if (cardEnding) {\n      const [, last4] = cardEnding;\n      return (\n        <Trans i18nKey=\"STATUS~Processing card ending\" last4={last4}>\n          Processing Card ending in {{ last4 }}…\n        </Trans>\n      );\n    }\n    return t([`STATUS~${status}`, status]);\n  }, [status, t]);\n\n  return (\n    <div className=\"Screen alert alert-secondary\">\n      {!!tranAmount && (\n        <div className=\"Transaction d-flex justify-content-between bg-white rounded-top border-bottom border-secondary\">\n          <div className=\"font-italic\">{t([`TRANSACTION~${tranType}`, tranType])}</div>\n          <div className=\"font-weight-bold\">{currency(tranAmount)}</div>\n        </div>\n      )}\n      {!buffer && <div>{translatedStatus}</div>}\n      <Signature />\n      {buffer && <div className=\"text-muted\">{buffer}</div>}\n      {buffer && <h3 className=\"text-right\">{currency(buffer)}</h3>}\n    </div>\n  );\n};\n","import React, { forwardRef, useEffect, useState, useMemo, useCallback } from 'react';\nimport { Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nexport default forwardRef(\n  (\n    { action, height, color, keyCodes, disabled, onClick, moreActions, moreText, onMoreClick, children, ...other },\n    ref\n  ) => {\n    const { t } = useTranslation();\n    const [show, setShow] = useState(false);\n\n    const toggle = useCallback(() => setShow(cur => !cur), [setShow]);\n\n    useEffect(() => {\n      if (!disabled) {\n        const keydown = event => {\n          if (keyCodes.includes(event.code)) {\n            event.preventDefault();\n            onClick();\n            return false;\n          }\n          return true;\n        };\n        document.addEventListener('keydown', keydown);\n        return () => document.removeEventListener('keydown', keydown);\n      }\n      return undefined;\n    }, [disabled, keyCodes, onClick]);\n\n    const value = useMemo(() => {\n      const key = action?.payload?.description || action?.type;\n      return key ? t([`ACTION~${key}`, key]) : children;\n    }, [action, children, t]);\n\n    const title = useMemo(\n      () => [t('Shortcut keys'), keyCodes.map(k => t([`KEY_CODE~${k}`, k])).join(', ')].join(': '),\n      [keyCodes, t]\n    );\n\n    if (action && moreActions?.length) {\n      return (\n        <ButtonDropdown isOpen={show} toggle={toggle}>\n          <Button\n            color=\"dark\"\n            className=\"action rounded-left\"\n            onClick={onClick}\n            disabled={disabled}\n            title={title}\n            {...other}\n          >\n            {value || <span>&nbsp;</span>}\n          </Button>\n          <DropdownToggle caret color=\"dark\" className=\"action\" disabled={disabled} />\n          <DropdownMenu className=\"bg-dark\" right>\n            {moreActions.map((a, i) => (\n              <DropdownItem key={i} className=\"bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                {t([`ACTION~${a.payload?.description || a.type}`, a.payload?.description || a.type])}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </ButtonDropdown>\n      );\n    }\n\n    if (moreActions?.length) {\n      return (\n        <div className=\"btn-group-vertical d-flex flex-column\">\n          <ButtonDropdown isOpen={show} toggle={toggle}>\n            <DropdownToggle caret color=\"dark\" outline size=\"sm\" className=\"text-light\">\n              {moreText}\n            </DropdownToggle>\n            <DropdownMenu right className=\"bg-dark\">\n              {moreActions.map((a, i) => (\n                <DropdownItem key={i} className=\"bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                  {t([`ACTION~${a.payload?.description || a.type}`, a.payload?.description || a.type])}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </ButtonDropdown>\n          <Button\n            outline\n            color=\"dark\"\n            className={classNames('h-100', `text-${color || 'light'}`)}\n            onClick={onClick}\n            disabled={disabled}\n            title={title}\n            {...other}\n          >\n            {value || <span>&nbsp;</span>}\n          </Button>\n        </div>\n      );\n    }\n\n    return (\n      <Button\n        innerRef={ref}\n        style={{ height }}\n        outline={!action}\n        color=\"dark\"\n        className={classNames(`text-${color || 'light'}`, { action })}\n        disabled={disabled}\n        onClick={onClick}\n        title={title}\n        {...other}\n      >\n        {value}\n      </Button>\n    );\n  }\n);\n","import React, { useMemo, useCallback, useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  appendBuffer,\n  clearBuffer,\n  selectCreditEnabled,\n  selectNonTransactionActions,\n  selectTransactionAction,\n  selectTransactionMode,\n  transaction,\n  undoBuffer,\n} from '../../store';\nimport Key from './Key';\nimport { ACTION_CREATOR } from './constants';\nimport { ACTION, TRANSACTION } from '../../common';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const actions = useSelector(selectNonTransactionActions);\n  const transactionAction = useSelector(selectTransactionAction);\n  const transactionMode = useSelector(selectTransactionMode);\n  const creditEnabled = useSelector(selectCreditEnabled);\n\n  const [actionClicked, setActionClicked] = useState(false);\n  const keysDisabled = useMemo(() => !transactionAction || actionClicked, [transactionAction, actionClicked]);\n\n  const onAction = useCallback(\n    async action => {\n      setActionClicked(true);\n      if (action.type === ACTION.INVOKE_INPUT_OPTION || action.type === ACTION.TRANSACTION_MODE) {\n        setTimeout(() => setActionClicked(false), 250);\n      }\n      await dispatch(ACTION_CREATOR[action.type](action));\n    },\n    [dispatch, setActionClicked]\n  );\n\n  const actionHandler = action => async () => onAction(action);\n\n  useEffect(() => {\n    if (actions.length) setActionClicked(false);\n  }, [setActionClicked, actions]);\n\n  const keyRef = useRef();\n  const [keyHeight, setKeyHeight] = useState();\n  useEffect(() => {\n    if (keyRef.current) {\n      setKeyHeight(keyRef.current.offsetWidth);\n    }\n  }, [keyRef, setKeyHeight]);\n\n  const submitOptions = useMemo(\n    () =>\n      creditEnabled\n        ? {\n            moreText: t([`TRANSACTION~${transactionMode}`, transactionMode]),\n            moreActions: [\n              {\n                type: ACTION.TRANSACTION_MODE,\n                payload: { description: 'TRANSACTION~SALE', mode: TRANSACTION.SALE },\n              },\n              {\n                type: ACTION.TRANSACTION_MODE,\n                payload: { description: 'TRANSACTION~CREDIT', mode: TRANSACTION.CREDIT },\n              },\n            ],\n            onMoreClick: action => onAction(action),\n          }\n        : undefined,\n    [creditEnabled, onAction, t, transactionMode]\n  );\n\n  const [action1, action2, ...moreActions] = actions;\n\n  return (\n    <div className=\"Keys\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action1 || {}}\n            disabled={!action1 || actionClicked}\n            keyCodes={['F1', 'NumpadDivide']}\n            onClick={actionHandler(action1)}\n          />\n        </div>\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action2 || {}}\n            disabled={!action2 || actionClicked}\n            keyCodes={['F2', 'NumpadMultiply']}\n            onClick={actionHandler(action2)}\n            moreActions={moreActions}\n            onMoreClick={action => onAction(action)}\n          />\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            ref={keyRef}\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad7', 'Digit7']}\n            onClick={() => dispatch(appendBuffer('7'))}\n          >\n            {t('KEY~7')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad8', 'Digit8']} onClick={() => dispatch(appendBuffer('8'))}>\n            {t('KEY~8')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad9', 'Digit9']} onClick={() => dispatch(appendBuffer('9'))}>\n            {t('KEY~9')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"danger\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadSubtract', 'Escape']}\n            onClick={() => dispatch(clearBuffer())}\n          >\n            {t('KEY~X')}\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad4', 'Digit4']}\n            onClick={() => dispatch(appendBuffer('4'))}\n          >\n            {t('KEY~4')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad5', 'Digit5']} onClick={() => dispatch(appendBuffer('5'))}>\n            {t('KEY~5')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad6', 'Digit6']} onClick={() => dispatch(appendBuffer('6'))}>\n            {t('KEY~6')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"warning\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadAdd', 'Backspace', 'Delete']}\n            onClick={() => dispatch(undoBuffer())}\n          >\n            {t('KEY~<')}\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-9\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-4 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad1', 'Digit1']}\n                onClick={() => dispatch(appendBuffer('1'))}\n              >\n                {t('KEY~1')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad2', 'Digit2']} onClick={() => dispatch(appendBuffer('2'))}>\n                {t('KEY~2')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad3', 'Digit3']} onClick={() => dispatch(appendBuffer('3'))}>\n                {t('KEY~3')}\n              </Key>\n            </div>\n          </div>\n          <div className=\"row no-gutters\">\n            <div className=\"col-8 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad0', 'Digit0']}\n                onClick={() => dispatch(appendBuffer('0'))}\n              >\n                {t('KEY~0')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key\n                disabled={keysDisabled}\n                keyCodes={['NumpadDecimal', 'Period']}\n                onClick={() => dispatch(appendBuffer('00'))}\n              >\n                {t('KEY~00')}\n              </Key>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"success\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadEnter', 'Enter']}\n            onClick={() => dispatch(transaction())}\n            {...submitOptions}\n          >\n            {t('KEY~O')}\n          </Key>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { disconnect, reset, showWelcome } from '../../store';\nimport { CheckboxField } from '../Fields';\nimport { MODE } from './constants';\n\nexport default ({ mode, setMode }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const toggle = useCallback(() => setShow(!show), [show, setShow]);\n  const onShowWelcome = useCallback(() => dispatch(showWelcome()), [dispatch]);\n  const onReset = useCallback(() => dispatch(reset()), [dispatch]);\n  const onDisconnect = useCallback(() => dispatch(disconnect()), [dispatch]);\n\n  return (\n    <ButtonDropdown isOpen={show} toggle={toggle}>\n      <DropdownToggle size=\"sm\" outline color=\"dark\" className=\"text-light\" onClick={toggle} title={t('Menu')}>\n        ☰\n      </DropdownToggle>\n      <DropdownMenu right>\n        {Object.values(MODE).map(m => (\n          <DropdownItem key={m} onClick={() => setMode(m)}>\n            <CheckboxField id={`mode-${m}`} label={t([`MODE~${m}`, m])} checked={m === mode} readOnly mb0 />\n          </DropdownItem>\n        ))}\n        <DropdownItem divider />\n        <DropdownItem onClick={onShowWelcome}>{t('Show Welcome')}</DropdownItem>\n        <DropdownItem onClick={onReset}>{t('Reset Device')}</DropdownItem>\n        <DropdownItem onClick={onDisconnect}>{t('Disconnect')}</DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  );\n};\n","export default ({ amount, tipAmount, payment }) => {\n  const start = (amount || 0) + (tipAmount || 0);\n  const final = (payment?.amount || 0) + (payment?.tipAmount || 0);\n  const partial = start > final;\n  const remaining = start - final;\n  return { start, final, partial, remaining };\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Table } from 'reactstrap';\nimport { useToasts } from 'react-toast-notifications';\nimport { useTranslation } from 'react-i18next';\nimport { add } from 'date-fns';\n\nimport { currency, card, TRANSACTION } from '../../common';\nimport {\n  hideTransaction,\n  selectVoidEnabled,\n  setBuffer,\n  setError,\n  transaction as doTransaction,\n  voidPayment,\n} from '../../store';\nimport parseAmounts from './parseAmounts';\n\nexport default ({ transaction }) => {\n  const { id, timestamp, type, payment } = transaction || {};\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { removeToast } = useToasts();\n  const voidEnabled = useSelector(selectVoidEnabled);\n  const now = Date.now();\n  const voidableUntil = add(timestamp, { minutes: 26 });\n  const [voidable, setVoidable] = useState(voidEnabled && now <= voidableUntil);\n\n  useEffect(() => {\n    if (voidable) {\n      const ms = voidableUntil - now;\n      if (ms > 0) {\n        const to = setTimeout(() => setVoidable(false), ms);\n        return () => clearTimeout(to);\n      }\n    }\n    return undefined;\n  }, [now, setVoidable, voidable, voidableUntil]);\n\n  const { partial, remaining } = parseAmounts(transaction);\n\n  const onRemaining = useCallback(async () => {\n    try {\n      await dispatch(setBuffer(remaining));\n      await dispatch(doTransaction());\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  }, [remaining, dispatch]);\n\n  const onVoid = useCallback(async () => {\n    try {\n      removeToast(id);\n      await dispatch(hideTransaction(id));\n      await dispatch(voidPayment(payment));\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  }, [dispatch, id, payment, removeToast]);\n\n  return (\n    <div className=\"Transaction\">\n      {transaction.type !== TRANSACTION.VOID && partial && (\n        <div className=\"alert alert-warning\">\n          <h6 className=\"alert-heading\">{t('Partial Payment')}</h6>\n          <div>\n            {t('Remaining')}: {currency(remaining)}\n          </div>\n        </div>\n      )}\n      <h5>\n        {t([`TRANSACTION~${type}`, type])} {t('Details')}\n      </h5>\n      <Table size=\"sm\" className=\"small mb-0\">\n        <tbody>\n          <tr>\n            <th>{t('Payment ID')}:</th>\n            <td>{payment.id}</td>\n          </tr>\n          {payment.externalPaymentId && (\n            <tr>\n              <th>{t('External ID')}:</th>\n              <td>{payment.externalPaymentId}</td>\n            </tr>\n          )}\n          {payment.externalReferenceId && (\n            <tr>\n              <th>{t('External Ref')}:</th>\n              <td>{payment.externalReferenceId}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Order ID')}:</th>\n            <td>{payment.order?.id || payment.orderRef?.id}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>{t('Total')}:</th>\n              <td>{currency(payment.amount + payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Amount')}:</th>\n            <td>{currency(payment.amount)}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>{t('Tip')}:</th>\n              <td>{currency(payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Card')}:</th>\n            <td>\n              <div>{t([`CARD~${payment.cardTransaction.cardType}`, payment.cardTransaction.cardType])}</div>\n              <div>{card(payment.cardTransaction)}</div>\n              {payment.cardTransaction.cardholderName && (\n                <div>\n                  {t([\n                    `CARDHOLDER_NAME~${payment.cardTransaction.cardholderName}`,\n                    payment.cardTransaction.cardholderName,\n                  ])}\n                </div>\n              )}\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n      {transaction.type === TRANSACTION.SALE && (\n        <div>\n          {partial && (\n            <Button color=\"primary\" size=\"sm\" className=\"mr-1\" onClick={onRemaining}>\n              {t('Process')} {currency(remaining)}\n            </Button>\n          )}\n          {voidable && (\n            <Button color=\"danger\" size=\"sm\" onClick={onVoid}>\n              {t('Void')}\n            </Button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { hideTransaction } from '../../store';\nimport { TRANSACTION } from '../../common';\nimport parseAmounts from './parseAmounts';\nimport Transaction from './Transaction';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { addToast } = useToasts();\n\n  return transaction => {\n    const amounts = parseAmounts(transaction);\n\n    let appearance;\n    if (transaction.type === TRANSACTION.VOID) appearance = 'info';\n    else if (amounts.final >= amounts.start) appearance = 'success';\n    else if (amounts.final < amounts.start) appearance = 'warning';\n    else appearance = 'info';\n\n    addToast(<Transaction transaction={transaction} />, {\n      id: transaction.id,\n      appearance,\n      autoDismiss: false,\n      onDismiss: () => {\n        dispatch(hideTransaction(transaction.id));\n      },\n    });\n  };\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Table } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport { format, compareDesc } from 'date-fns';\n\nimport { selectPaymentTransactions } from '../../store';\nimport { currency } from '../../common';\nimport { useShowTransaction } from '../Transaction';\n\nconst parseAmount = ({ amount, tipAmount, payment }) =>\n  currency(payment ? (payment.amount || 0) + (payment.tipAmount || 0) : (amount || 0) + (tipAmount || 0));\n\nconst parseTimestamp = ({ timestamp }) => (timestamp ? format(timestamp, 'M/d h:mm a') : '??');\n\nexport default () => {\n  const { t } = useTranslation();\n  const transactions = useSelector(selectPaymentTransactions);\n  const showTransaction = useShowTransaction();\n\n  const sortedTransactions = useMemo(() => transactions.sort((a, b) => compareDesc(a.timestamp, b.timestamp)), [\n    transactions,\n  ]);\n\n  return (\n    <div className=\"History\">\n      <Table size=\"sm\" hover className=\"table-secondary\" striped>\n        <thead>\n          <tr>\n            <th>{t('Date')}</th>\n            <th>{t('Type')}</th>\n            <th className=\"text-right\">{t('Amount')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedTransactions.map(transaction => (\n            <tr key={transaction.id} role=\"button\" onClick={() => showTransaction(transaction)}>\n              <td>{parseTimestamp(transaction)}</td>\n              <td>{transaction.type}</td>\n              <td className=\"text-right\">{parseAmount(transaction)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { Logo } from '../SVG';\nimport { MODE } from './constants';\nimport { selectVisible } from './selectors';\nimport Screen from './Screen';\nimport Keys from './Keys';\nimport Menu from './Menu';\nimport History from './History';\nimport './styles.scss';\n\nexport default () => {\n  const { t } = useTranslation();\n  const visible = useSelector(selectVisible);\n\n  const [mode, setMode] = useState(MODE.TRANSACTION);\n\n  if (!visible) return null;\n\n  return (\n    <Card className=\"Keypad\">\n      <CardHeader>\n        <Logo />\n        <h3>{t('Virtual Keypad')}</h3>\n        <Menu mode={mode} setMode={setMode} />\n      </CardHeader>\n      <CardBody>\n        {mode === MODE.TRANSACTION && <Screen />}\n        {mode === MODE.TRANSACTION && <Keys />}\n        {mode === MODE.HISTORY && <History />}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Button } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nexport default ({ error }) => {\n  const { message, stack } = error;\n  const { t } = useTranslation();\n  const [expanded, setExpanded] = useState(false);\n\n  const expand = () => {\n    document.querySelector('.react-toast-notifications__container').classList.add('expanded');\n    setExpanded(true);\n  };\n\n  useEffect(() => {\n    return () => {\n      const remaining = document.querySelectorAll('.Error.expanded').length - (expanded ? 1 : 0);\n      if (!remaining) {\n        document.querySelector('.react-toast-notifications__container').classList.remove('expanded');\n      }\n    };\n  }, [expanded]);\n\n  return (\n    <div className={classNames('Error', { expanded })}>\n      <h5>{t([`ERROR~${message}`, message])}</h5>\n      {!!stack && !expanded && (\n        <Button color=\"link\" size=\"small\" onClick={expand}>\n          {t('Show details')}\n        </Button>\n      )}\n      {!!stack && expanded && (\n        <pre className=\"mb-0\">\n          <code>{stack}</code>\n        </pre>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Configuration from '../Configuration';\nimport Devices from '../Devices/Devices';\nimport Keypad from '../Keypad';\nimport { useError } from '../Error';\nimport { useTransactions } from '../Transaction';\nimport useMouse from './useMouse';\nimport usePreventDoubleTapZoom from './usePreventDoubleTapZoom';\nimport './styles.scss';\n\nexport default () => {\n  const mouse = useMouse();\n  useError(mouse);\n  usePreventDoubleTapZoom();\n  useTransactions();\n\n  return (\n    <div className={classNames('App container maxwidth')}>\n      <Configuration />\n      <Devices />\n      <Keypad />\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { selectError, clearError } from '../../store';\nimport Error from './Error';\n\nexport default autoDismiss => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    if (error.message) {\n      addToast(<Error error={error} />, {\n        id: 'error',\n        appearance: 'error',\n        autoDismiss,\n        onDismiss: () => {\n          dispatch(clearError());\n        },\n      });\n    }\n  }, [addToast, dispatch, error, autoDismiss]);\n};\n","import { useState, useEffect } from 'react';\n\nexport default () => {\n  const [mouse, setMouse] = useState(false);\n\n  useEffect(() => {\n    if (!mouse) {\n      const onHover = () => setMouse(true);\n      document.addEventListener('mouseover', onHover);\n      return () => document.removeEventListener('mouseover', onHover);\n    }\n    return undefined;\n  }, [mouse, setMouse]);\n\n  return mouse;\n};\n","import { useEffect } from 'react';\n\nexport default ({ ms = 500 } = {}) =>\n  useEffect(() => {\n    let expires = 0;\n    const handler = event => {\n      if (event.touches.length === 1) {\n        const now = Date.now();\n        if (event.touches.length === 1 && now > expires) {\n          event.preventDefault();\n          // Trigger a fake click for the tap we just prevented\n          event.target.click();\n        }\n        expires = now + ms;\n      }\n    };\n\n    document.body.addEventListener('touchstart', handler, { passive: false });\n\n    return () => document.body.removeEventListener('touchstart', handler, { passive: false });\n  }, [ms]);\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectVisiblePaymentTransactions } from '../../store';\nimport useShowTransaction from './useShowTransaction';\n\nexport default () => {\n  const transactions = useSelector(selectVisiblePaymentTransactions);\n  const showTransaction = useShowTransaction();\n\n  useEffect(() => {\n    transactions.forEach(showTransaction);\n  }, [transactions, showTransaction]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { ToastProvider } from 'react-toast-notifications';\n\nimport store from './store';\nimport App from './components/App';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <ToastProvider placement=\"bottom-center\">\n        <App />\n      </ToastProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}