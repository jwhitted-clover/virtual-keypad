{"version":3,"sources":["store/store.js","common/constants.js","store/actions/initialState.js","store/configuration/initialState.js","store/connection/initialState.js","store/devices/initialState.js","store/error/initialState.js","store/payment/initialState.js","store/signature/initialState.js","store/transaction/initialState.js","common/api.js","common/fetchDevices.js","common/format.js","store/rootReducer.js","store/actions/reducer.js","store/actions/constants.js","store/buffer/reducer.js","store/buffer/initialState.js","store/buffer/constants.js","store/configuration/reducer.js","store/configuration/constants.js","store/connection/reducer.js","store/connection/constants.js","store/devices/reducer.js","store/devices/constants.js","store/error/reducer.js","store/error/constants.js","store/payment/reducer.js","store/payment/constants.js","store/signature/reducer.js","store/signature/constants.js","store/status/reducer.js","store/status/initialState.js","store/status/constants.js","store/transaction/reducer.js","store/transaction/constants.js","store/configuration/selectors.js","store/error/actions.js","store/actions/actions.js","store/connection/selectors.js","store/status/actions.js","store/signature/actions.js","common/persist.js","store/configuration/actions.js","store/devices/actions.js","store/thunks/configure.js","store/devices/selectors.js","store/connection/actions.js","store/thunks/connect.js","store/transaction/actions.js","store/thunks/disconnect.js","store/error/selectors.js","store/buffer/selectors.js","store/buffer/actions.js","store/thunks/transaction.js","store/createStore.js","store/actions/selectors.js","store/payment/selectors.js","store/signature/selectors.js","store/status/selectors.js","store/transaction/selectors.js","components/Configuration/selectors.js","components/SVG/Logo.js","components/SVG/Power.js","components/Configuration/Configuration.js","components/Devices/selectors.js","components/Devices/Device.js","components/Devices/Devices.js","components/Error/selectors.js","components/Error/Error.js","components/Keypad/selectors.js","components/Keypad/Signature.js","components/Keypad/Screen.js","components/Keypad/Key.js","components/Keypad/constants.js","store/thunks/acceptPayment.js","store/thunks/acceptSignature.js","store/thunks/identify.js","store/thunks/invokeInputOption.js","store/thunks/rejectPayment.js","store/thunks/rejectSignature.js","store/thunks/reset.js","store/thunks/showWelcome.js","components/Keypad/Keys.js","components/Keypad/Keypad.js","components/Payment/Payment.js","store/payment/actions.js","components/App/App.js","components/App/usePreventDoubleTapZoom.js","serviceWorker.js","index.js"],"names":["initialState","ACTION","APP","APP_NAME","APP_BY_NAME","Object","fromEntries","entries","map","arr","reverse","TRANSACTION","cloverDomain","merchantId","accessToken","friendlyId","autoConnect","connector","connected","list","selected","message","stack","id","externalId","orderId","amount","tipAmount","card","type","first6","last4","name","width","height","strokes","deviceApps","deviceId","fetch","URL","toString","method","headers","accept","then","r","json","devices","appsReducer","o","a","app","appName","api","elements","Promise","all","apps","device","i","applications","reduce","currency","value","n","isNaN","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","rootReducer","combineReducers","actions","state","payload","found","some","description","inputOptions","io","buffer","replace","slice","length","configuration","connection","dispose","e","request","Clover","remotepay","RetrieveDeviceStatusRequest","setSendLastMessage","retrieveDeviceStatus","error","payment","externalPaymentId","order","cardTransaction","cardType","cardholderName","success","signature","status","challenges","transaction","selectConfiguration","selectFriendlyId","createSelector","selectAutoConnect","setError","setActions","selectConnection","selectConnector","setStatus","text","setSignature","localStorage","setItem","JSON","stringify","initialDevices","setConfiguration","setDevices","setDeviceId","dispatch","getState","persist","fetchDevices","Error","selectRawDevices","selectDeviceId","selectDevices","sort","b","setConnector","resolve","setTimeout","find","d","factory","CloverConnectorFactoryBuilder","createICloverConnectorFactory","FACTORY_VERSION","VERSION_12","createICloverConnector","WebSocketCloudCloverDeviceConfigurationBuilder","setCloverServer","setFriendlyId","build","Listener","keys","getPrototypeOf","forEach","ICloverConnectorListener","listener","addCloverConnectorListener","initializeConnection","setTransactionAmount","selectError","selectBuffer","appendBuffer","action","SaleRequest","setAmount","setExternalId","CloverID","getNewId","setCardEntryMethods","CardEntryMethods","DEFAULT","sale","parse","getItem","console","warn","store","middleware","applyMiddleware","thunk","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","enhancer","f","createStore","compose","config","configure","selectActions","selectTransactionAction","selectNonTransactionActions","filter","selectPayment","selectSignature","repeat","join","trim","selectSignatureBounds","bounds","points","flat","point","x","X","y","Y","Math","min","max","Infinity","selectSignatureLines","selectStatus","selectTransaction","selectTransactionAmount","selectTransactionType","selectVisible","size","className","xmlns","viewBox","aria-labelledby","role","data-name","transform","fill","style","useDispatch","useSelector","visible","qs","QS","location","search","hash","useState","setCloverDomain","merchant_id","setMerchantId","access_token","setAccessToken","setAutoConnect","disabled","setDisabled","submit","useCallback","event","preventDefault","reset","onSubmit","onReset","Logo","onChange","target","checked","htmlFor","active","onClick","cloud","cloudStatus","key","classNames","productName","serial","aria-label","title","select","connect","Device","expanded","setExpanded","close","other","lines","stroke","tranType","tranAmount","sentenceCase","Signature","forwardRef","ref","color","keyCodes","moreActions","onMoreClick","children","show","setShow","useEffect","hide","document","addEventListener","removeEventListener","keydown","includes","code","ACTION_CREATOR","acceptPayment","VerifySignatureRequest","setPayment","acceptSignature","disconnect","showMessage","InputOption","setDescription","setKeyPress","keyPress","invokeInputOption","rejectPayment","rejectSignature","resetDevice","showWelcomeScreen","transactionAction","actionClicked","setActionClicked","keysDisabled","useMemo","onAction","actionHandler","keyRef","useRef","keyHeight","setKeyHeight","current","offsetWidth","action1","action2","Key","click","Power","Screen","Keys","ms","expires","handler","touches","now","Date","body","passive","usePreventDoubleTapZoom","Configuration","Devices","Keypad","Payment","Boolean","hostname","match","ReactDOM","render","StrictMode","App","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b5948313.chunk.js","sourcesContent":["import { STORAGE } from '../common/constants';\nimport createStore from './createStore';\nimport { selectAutoConnect, selectConfiguration } from './configuration/selectors';\nimport { configure } from './thunks';\n\nlet initialState;\ntry {\n  initialState = JSON.parse(localStorage.getItem(STORAGE));\n} catch (e) {\n  console.warn('Failed to initialize state from storage', e);\n} finally {\n  initialState = initialState || undefined;\n}\n\nconst store = createStore(initialState);\n\nconst state = store.getState();\nif (selectAutoConnect(state)) {\n  const config = selectConfiguration(state);\n  store.dispatch(configure(config));\n}\n\nexport default store;\n","export const ACTION = {\n  ACCEPT_PAYMENT: 'ACCEPT_PAYMENT',\n  ACCEPT_SIGNATURE: 'ACCEPT_SIGNATURE',\n  DISCONNECT: 'DISCONNECT',\n  IDENTIFY: 'IDENTIFY',\n  INVOKE_INPUT_OPTION: 'INVOKE_INPUT_OPTION',\n  REJECT_PAYMENT: 'REJECT_PAYMENT',\n  REJECT_SIGNATURE: 'REJECT_SIGNATURE',\n  RESET: 'RESET',\n  SHOW_WELCOME: 'SHOW_WELCOME',\n  TRANSACTION: 'TRANSACTION',\n};\n\nexport const APP = {\n  CLOUD_PAY_DISPLAY: 'CLOUD_PAY_DISPLAY',\n};\n\nexport const APP_NAME = {\n  [APP.CLOUD_PAY_DISPLAY]: 'Cloud Pay Display',\n};\n\nexport const APP_BY_NAME = Object.fromEntries(Object.entries(APP_NAME).map(arr => arr.reverse()));\n\nexport const REMOTE_APPLICATION_ID = 'virtual-keypad';\n\nexport const STORAGE = 'clover/virtual-keypad';\n\nexport const TRANSACTION = {\n  SALE: 'SALE',\n  REFUND: 'REFUND',\n};\n","export default [];\n","export default {\n  cloverDomain: '',\n  merchantId: '',\n  accessToken: '',\n  friendlyId: '',\n  autoConnect: false,\n};\n","export default {\n  connector: null,\n  connected: false,\n};\n","export default {\n  list: [],\n  selected: '',\n};\n","export default {\n  message: null,\n  stack: null,\n};\n","export default {\n  id: '',\n  externalId: '',\n  orderId: '',\n  amount: 0,\n  tipAmount: 0,\n  card: {\n    type: '',\n    first6: '',\n    last4: '',\n    name: '',\n  },\n};\n","export default {\n  width: 0,\n  height: 0,\n  strokes: [],\n};\n","export default {\n  amount: 0,\n  type: '',\n};\n","export const deviceApps = ({ cloverDomain, merchantId, deviceId, accessToken }) =>\n  fetch(\n    new URL(\n      `/v2/merchant/${merchantId}/device/${deviceId}/current_apps?access_token=${accessToken}`,\n      cloverDomain\n    ).toString(),\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n    }\n  ).then(r => r.json());\n\nexport const devices = ({ cloverDomain, merchantId, accessToken }) =>\n  fetch(new URL(`/v3/merchants/${merchantId}/devices?access_token=${accessToken}`, cloverDomain).toString(), {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    },\n  }).then(r => r.json());\n","import { APP_BY_NAME } from './constants';\nimport * as api from './api';\n\nconst appsReducer = (o, a) => {\n  const app = APP_BY_NAME[a.appName];\n  return app ? { ...o, [app]: true } : o;\n};\n\nexport default async ({ cloverDomain, merchantId, accessToken }) => {\n  const { elements: devices } = await api.devices({ cloverDomain, merchantId, accessToken });\n  const apps = await Promise.all(\n    devices.map(({ id: deviceId }) =>\n      api.deviceApps({\n        cloverDomain,\n        merchantId,\n        accessToken,\n        deviceId,\n      })\n    )\n  );\n  return devices.map((device, i) => ({\n    ...device,\n    apps: apps[i].applications.reduce(appsReducer, {}),\n  }));\n};\n","export const currency = value => {\n  const n = +value;\n  if (!isNaN(n) && n >= 0) {\n    return (n / 100).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  return '';\n};\n\nexport const card = ({ first6, last4 }) => [first6, '*'.repeat(6), last4].join('').replace(/.{4}/g, ' $&').trim();\n","import { combineReducers } from 'redux';\nimport actions from './actions/reducer';\nimport buffer from './buffer/reducer';\nimport configuration from './configuration/reducer';\nimport connection from './connection/reducer';\nimport devices from './devices/reducer';\nimport error from './error/reducer';\nimport payment from './payment/reducer';\nimport signature from './signature/reducer';\nimport status from './status/reducer';\nimport transaction from './transaction/reducer';\n\nconst rootReducer = combineReducers({\n  actions,\n  buffer,\n  configuration,\n  connection,\n  devices,\n  error,\n  payment,\n  signature,\n  status,\n  transaction,\n});\n\nexport default rootReducer;\n","import { ACTION } from '../../common/constants';\nimport * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ACTIONS_APPEND: {\n      const found = state.some(a => a.type === payload.type && a.payload?.description === payload.payload?.description);\n      return found ? state : [...state, payload];\n    }\n    case CONST.ACTIONS_SET:\n      return payload || [];\n    case '@@connector/onDeviceReady':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onResetDeviceResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onDeviceActivityStart':\n      return payload.inputOptions.map(io => ({ type: ACTION.INVOKE_INPUT_OPTION, payload: io }));\n    case '@@connector/onSaleResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onConfirmPaymentRequest':\n      return [\n        { type: ACTION.ACCEPT_PAYMENT, payload: { description: 'Accept', ...payload } },\n        { type: ACTION.REJECT_PAYMENT, payload: { description: 'Reject', ...payload } },\n      ];\n    case '@@connector/onVerifySignatureRequest':\n      return [\n        { type: ACTION.ACCEPT_SIGNATURE, payload: { description: 'Accept', ...payload } },\n        { type: ACTION.REJECT_SIGNATURE, payload: { description: 'Reject', ...payload } },\n      ];\n    default:\n      return state;\n  }\n};\n","export const ACTIONS_SET = 'ACTIONS_SET';\nexport const ACTIONS_APPEND = 'ACTIONS_APPEND';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.BUFFER_RESET:\n      return initialState;\n    case CONST.BUFFER_APPEND:\n      return (state + payload).replace(/^0+/, '').slice(0, 7);\n    case CONST.BUFFER_SET:\n      return payload;\n    case CONST.BUFFER_UNDO:\n      return state.length ? state.slice(0, state.length - 1) : '';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const BUFFER_APPEND = 'BUFFER_APPEND';\nexport const BUFFER_RESET = 'BUFFER_RESET';\nexport const BUFFER_SET = 'BUFFER_SET';\nexport const BUFFER_UNDO = 'BUFFER_UNDO';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONFIGURATION_SET:\n      return {\n        cloverDomain: payload.cloverDomain || '',\n        merchantId: payload.merchantId || '',\n        accessToken: payload.accessToken || '',\n        friendlyId: payload.friendlyId || '',\n        autoConnect: payload.autoConnect || false,\n      };\n    default:\n      return state;\n  }\n};\n","export const CONFIGURATION_SET = 'CONFIGURATION_SET';\n","import Clover from 'remote-pay-cloud';\n\nimport * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONNECTION_SET_CONNECTOR:\n      try {\n        if (state?.connector) {\n          state.connector.dispose();\n        }\n      } catch (e) {\n        // Do nothing\n      }\n\n      return {\n        ...state,\n        connector: payload,\n        connected: false,\n      };\n    case '@@connector/onDeviceDisconnected':\n      return { ...state, connected: false };\n    case '@@connector/onDeviceReady': {\n      const request = new Clover.remotepay.RetrieveDeviceStatusRequest();\n      request.setSendLastMessage(true);\n      state.connector.retrieveDeviceStatus(request);\n\n      return { ...state, connected: true };\n    }\n    default:\n      return state;\n  }\n};\n","export const CONNECTION_SET_CONNECTOR = 'CONNECTION_SET_CONNECTOR';\nexport const CONNECTION_SET_CONNECTED = 'CONNECTION_SET_CONNECTED';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.DEVICES_SET_SELECTED:\n      return {\n        ...state,\n        selected: payload || '',\n      };\n    case CONST.DEVICES_SET_LIST:\n      return {\n        ...state,\n        list: payload || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const DEVICES_SET_LIST = 'DEVICES_SET_LIST';\nexport const DEVICES_SET_SELECTED = 'DEVICES_SET_SELECTED';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ERROR_SET:\n      return {\n        ...state,\n        message: payload.message,\n        stack: payload.stack,\n      };\n    case '@@connector/onDeviceError':\n      return {\n        ...state,\n        message: `Device Error ${payload.message}`,\n        stack: null,\n      };\n    default:\n      return state;\n  }\n};\n","export const ERROR_SET = 'ERROR_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.PAYMENT_SET:\n      return {\n        id: payload?.id || '',\n        externalId: payload?.externalPaymentId || '',\n        orderId: payload?.order?.id || '',\n        amount: payload?.amount || 0,\n        tipAmount: payload?.tipAmount || 0,\n        card: {\n          type: payload?.cardTransaction?.cardType || '',\n          first6: payload?.cardTransaction?.first6 || '',\n          last4: payload?.cardTransaction?.last4 || '',\n          name: payload?.cardTransaction?.cardholderName || '',\n        },\n      };\n    case '@@connector/onSaleResponse':\n      if (payload.success) {\n        return {\n          id: payload?.payment?.id || '',\n          externalId: payload?.payment?.externalPaymentId || '',\n          orderId: payload?.payment?.order?.id || '',\n          amount: payload?.payment?.amount || 0,\n          tipAmount: payload?.payment?.tipAmount || 0,\n          card: {\n            type: payload?.payment?.cardTransaction?.cardType || '',\n            first6: payload?.payment?.cardTransaction?.first6 || '',\n            last4: payload?.payment?.cardTransaction?.last4 || '',\n            name: payload?.payment?.cardTransaction?.cardholderName || '',\n          },\n        };\n      }\n      return initialState;\n    case '@@connector/onResetDeviceResponse':\n      return initialState;\n    default:\n      return state;\n  }\n};\n","export const PAYMENT_SET = 'PAYMENT_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.SIGNATURE_SET:\n      return {\n        width: payload?.width || 0,\n        height: payload?.height || 0,\n        strokes: payload?.strokes || [],\n      };\n    case '@@connector/onVerifySignatureRequest':\n      return {\n        width: payload.signature.width,\n        height: payload.signature.height,\n        strokes: payload.signature.strokes,\n      };\n    default:\n      return state;\n  }\n};\n","export const SIGNATURE_SET = 'SIGNATURE_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.STATUS_SET:\n      return payload || '';\n    case '@@connector/onDeviceReady':\n      return 'Ready';\n    case '@@connector/onResetDeviceResponse':\n      return 'Ready';\n    case '@@connector/onDeviceActivityStart':\n      return payload.message;\n    case '@@connector/onSaleResponse':\n      return 'Ready';\n    case '@@connector/onConfirmPaymentRequest':\n      return payload.challenges[0].message;\n    case '@@connector/onVerifySignatureRequest':\n      return 'Verify Signature';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const STATUS_SET = 'STATUS_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\nimport { ACTION } from '../../common';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.TRANSACTION_ADD_AMOUNT:\n      return {\n        ...state,\n        amount: state.amount + payload,\n      };\n    case CONST.TRANSACTION_SET_AMOUNT:\n      return {\n        ...state,\n        amount: payload,\n      };\n    case CONST.TRANSACTION_SET_TYPE:\n      return {\n        ...state,\n        type: payload,\n      };\n    case CONST.TRANSACTION_RESET:\n      return initialState;\n    case '@@connector/onTipAdded':\n      return {\n        ...state,\n        amount: state.amount + payload.tipAmount,\n      };\n    case '@@connector/onSaleResponse':\n      return initialState;\n    case '@@connector/onResetDeviceResponse':\n      return initialState;\n    case `@@action/${ACTION.TRANSACTION}`:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","export const TRANSACTION_RESET = 'TRANSACTION_RESET';\nexport const TRANSACTION_SET_AMOUNT = 'TRANSACTION_SET_AMOUNT';\nexport const TRANSACTION_ADD_AMOUNT = 'TRANSACTION_ADD_AMOUNT';\nexport const TRANSACTION_SET_TYPE = 'TRANSACTION_SET_TYPE';\n","import { createSelector } from 'reselect';\n\nexport const selectConfiguration = state => state.configuration;\n\nexport const selectFriendlyId = createSelector(selectConfiguration, ({ friendlyId }) => friendlyId || 'Virtual Keypad');\n\nexport const selectAutoConnect = createSelector(selectConfiguration, ({ autoConnect }) => autoConnect || false);\n","import * as CONST from './constants';\n\nexport const setError = ({ message, stack } = {}) => ({\n  type: CONST.ERROR_SET,\n  payload: { message, stack },\n});\n","import * as CONST from './constants';\n\nexport const setActions = actions => ({\n  type: CONST.ACTIONS_SET,\n  payload: actions,\n});\n\nexport const appendAction = action => ({\n  type: CONST.ACTIONS_APPEND,\n  payload: action,\n});\n","import { createSelector } from 'reselect';\n\nexport const selectConnection = state => state.connection;\n\nexport const selectConnector = createSelector(selectConnection, ({ connector }) => connector);\n\nexport const selectConnected = createSelector(selectConnection, ({ connected }) => connected);\n","import * as CONST from './constants';\n\nexport const setStatus = text => ({\n  type: CONST.STATUS_SET,\n  payload: text,\n});\n","import * as CONST from './constants';\n\nexport const setSignature = signature => ({\n  type: CONST.SIGNATURE_SET,\n  payload: signature,\n});\n","import { STORAGE } from './constants';\nimport initialDevices from '../store/devices/initialState';\n\nexport default ({ configuration, devices }) =>\n  localStorage.setItem(\n    STORAGE,\n    JSON.stringify({\n      configuration,\n      devices: {\n        ...initialDevices,\n        selected: devices.selected,\n      },\n    })\n  );\n","import * as CONST from './constants';\n\nexport const setConfiguration = ({ cloverDomain, merchantId, accessToken, friendlyId, autoConnect }) => ({\n  type: CONST.CONFIGURATION_SET,\n  payload: { cloverDomain, merchantId, accessToken, friendlyId, autoConnect },\n});\n","import * as CONST from './constants';\n\nexport const setDevices = devices => ({\n  type: CONST.DEVICES_SET_LIST,\n  payload: devices,\n});\n\nexport const setDeviceId = deviceId => ({\n  type: CONST.DEVICES_SET_SELECTED,\n  payload: deviceId,\n});\n","import { APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport fetchDevices from '../../common/fetchDevices';\nimport { setConfiguration } from '../configuration/actions';\nimport { setDevices } from '../devices/actions';\nimport { setError } from '../error/actions';\n\nexport default ({ cloverDomain, merchantId, accessToken, friendlyId, autoConnect }) => async (dispatch, getState) => {\n  try {\n    await dispatch(setConfiguration({ cloverDomain, merchantId, accessToken, friendlyId, autoConnect }));\n    persist(getState());\n\n    const devices = await fetchDevices({ cloverDomain, merchantId, accessToken });\n    await dispatch(setDevices(devices));\n\n    if (!devices.length) {\n      throw new Error('Merchant has no devices.');\n    }\n\n    if (!devices.some(a => a.apps[APP.CLOUD_PAY_DISPLAY])) {\n      throw new Error('Merchant has no devices with Cloud Pay Display installed.');\n    }\n  } catch (e) {\n    await dispatch(setError(e));\n  }\n};\n","import { createSelector } from 'reselect';\n\nexport const selectRawDevices = state => state.devices;\n\nexport const selectDeviceId = createSelector(selectRawDevices, ({ selected }) => selected);\n\nexport const selectDevices = createSelector(selectRawDevices, selectDeviceId, ({ list }, deviceId) =>\n  [...list].sort((a, b) => (a.id === deviceId ? -1 : b.id === deviceId ? 1 : 0))\n);\n","import * as CONST from './constants';\n\nexport const setConnector = connector => ({\n  type: CONST.CONNECTION_SET_CONNECTOR,\n  payload: connector,\n});\n","import Clover from 'remote-pay-cloud';\n\nimport { REMOTE_APPLICATION_ID, APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport { selectConfiguration } from '../configuration/selectors';\nimport { selectDevices } from '../devices/selectors';\nimport { setConnector } from '../connection/actions';\nimport { setDeviceId } from '../devices/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default deviceId => async (dispatch, getState) => {\n  try {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    await dispatch(setDeviceId(deviceId));\n\n    const state = getState();\n    persist(state);\n\n    const { cloverDomain, merchantId, accessToken, friendlyId } = selectConfiguration(state);\n    const device = selectDevices(state).find(d => d.id === deviceId);\n\n    if (!device) throw new Error(`Device not found.`);\n    if (!device.apps[APP.CLOUD_PAY_DISPLAY]) throw new Error('Device does not have Cloud Pay Display installed.');\n\n    const factory = Clover.CloverConnectorFactoryBuilder.createICloverConnectorFactory({\n      [Clover.CloverConnectorFactoryBuilder.FACTORY_VERSION]: Clover.CloverConnectorFactoryBuilder.VERSION_12,\n    });\n\n    const connector = factory.createICloverConnector(\n      new Clover.WebSocketCloudCloverDeviceConfigurationBuilder(\n        REMOTE_APPLICATION_ID,\n        deviceId,\n        merchantId,\n        accessToken\n      )\n        .setCloverServer(cloverDomain)\n        .setFriendlyId(friendlyId)\n        .build()\n    );\n\n    class Listener extends Clover.remotepay.ICloverConnectorListener {\n      constructor() {\n        super();\n        Object.keys(Object.getPrototypeOf(Object.getPrototypeOf(this))).forEach(type => {\n          this[type] = payload => dispatch({ type: `@@connector/${type}`, payload });\n        });\n      }\n    }\n    const listener = new Listener();\n    connector.addCloverConnectorListener(listener);\n\n    dispatch(setConnector(connector));\n    dispatch(setStatus('Connecting...'));\n\n    connector.initializeConnection();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const resetTransaction = () => ({ type: CONST.TRANSACTION_RESET });\n\nexport const setTransactionAmount = amount => ({\n  type: CONST.TRANSACTION_SET_AMOUNT,\n  payload: amount,\n});\n\nexport const addTransactionAmount = amount => ({\n  type: CONST.TRANSACTION_ADD_AMOUNT,\n  payload: amount,\n});\n\nexport const setTransactionType = type => ({\n  type: CONST.TRANSACTION_SET_TYPE,\n  payload: type,\n});\n","import { setConnector } from '../connection/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setError } from '../error/actions';\nimport { setDevices } from '../devices/actions';\nimport { resetTransaction } from '../transaction/actions';\n\nexport default () => async (dispatch, getState) => {\n  try {\n    const connector = selectConnector(getState());\n    connector.dispose();\n\n    dispatch(setConnector());\n    dispatch(setDevices());\n    dispatch(resetTransaction());\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","export const selectError = state => state.error;\n","export const selectBuffer = state => state.buffer;\n","import * as CONST from './constants';\n\nexport const resetBuffer = () => ({ type: CONST.BUFFER_RESET });\n\nexport const setBuffer = value => ({\n  type: CONST.BUFFER_SET,\n  payload: value || '',\n});\n\nexport const appendBuffer = value => ({\n  type: CONST.BUFFER_APPEND,\n  payload: value,\n});\n\nexport const undoBuffer = () => ({ type: CONST.BUFFER_UNDO });\n","import Clover from 'remote-pay-cloud';\n\nimport { TRANSACTION, ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { selectBuffer } from '../buffer/selectors';\nimport { setTransactionType, setTransactionAmount } from '../transaction/actions';\nimport { setActions } from '../actions/actions';\nimport { setStatus } from '../status/actions';\nimport { resetBuffer } from '../buffer/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.TRANSACTION}` });\n\n    const state = getState();\n    const buffer = selectBuffer(state);\n    const connector = selectConnector(state);\n\n    dispatch(setActions());\n    dispatch(setStatus('Processing...'));\n    dispatch(resetBuffer());\n\n    const amount = +buffer;\n    if (!amount) throw new Error('Amount is required');\n    if (isNaN(amount)) throw new Error('Amount is invalid');\n    if (amount < 0 || amount > 99_999_99) throw new Error('Amount must between 0.00 and 99,999.99');\n\n    dispatch(setTransactionType(TRANSACTION.SALE));\n    dispatch(setTransactionAmount(amount));\n\n    const request = new Clover.remotepay.SaleRequest();\n    request.setAmount(amount);\n    request.setExternalId(Clover.CloverID.getNewId());\n    request.setCardEntryMethods(Clover.CardEntryMethods.DEFAULT);\n    connector.sale(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nexport default initialState => {\n  const middleware = applyMiddleware(thunk);\n\n  // eslint-disable-next-line no-underscore-dangle\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n  const enhancer = devTools ? devTools() : f => f;\n\n  return createStore(rootReducer, initialState, compose(middleware, enhancer));\n};\n","import { createSelector } from 'reselect';\n\nimport { ACTION } from '../../common/constants';\n\nexport const selectActions = state => state.actions;\n\nexport const selectTransactionAction = createSelector(selectActions, actions =>\n  actions.find(a => a.type === ACTION.TRANSACTION)\n);\n\nexport const selectNonTransactionActions = createSelector(selectActions, actions =>\n  actions.filter(a => a.type !== ACTION.TRANSACTION)\n);\n","import { createSelector } from 'reselect';\n\nexport const selectPayment = state => state.payment;\n\nexport const selectHasPayment = createSelector(selectPayment, ({ id }) => !!id);\n\nexport const selectCardNumber = createSelector(selectPayment, ({ card: { first6, last4 } }) => {\n  if (first6 && last4) {\n    return [first6, '*'.repeat(6), last4].join('').replace(/.{4}/g, ' $&').trim();\n  }\n  return '';\n});\n","import { createSelector } from 'reselect';\n\nexport const selectSignature = state => state.signature;\n\nexport const selectSignatureBounds = createSelector(selectSignature, ({ strokes }) => {\n  const bounds = strokes\n    .map(({ points }) => points)\n    .flat()\n    .reduce(\n      ({ x, X, y, Y }, point) => ({\n        x: Math.min(x, point.x),\n        X: Math.max(X, point.x),\n        y: Math.min(y, point.y),\n        Y: Math.max(Y, point.y),\n      }),\n      { x: Infinity, X: -Infinity, y: Infinity, Y: -Infinity }\n    );\n  return [bounds.x, bounds.y, bounds.X - bounds.x, bounds.Y - bounds.y].join(' ');\n});\n\nexport const selectSignatureLines = createSelector(selectSignature, ({ strokes }) =>\n  strokes.map(({ points }) => points.map(({ x, y }) => `${x},${y}`).join(' '))\n);\n","export const selectStatus = state => state.status;\n","import { createSelector } from 'reselect';\n\nexport const selectTransaction = state => state.transaction;\n\nexport const selectTransactionAmount = createSelector(selectTransaction, ({ amount }) => amount || 0);\n\nexport const selectTransactionType = createSelector(selectTransaction, ({ type }) => type);\n","import { createSelector } from 'reselect';\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !devices.length\n);\n","import React from 'react';\n\nexport default ({ size = 28 }) => {\n  return (\n    <svg\n      className=\"Logo\"\n      id=\"clover-logo-svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 33.15 33.15\"\n      aria-labelledby=\"svg-logo-title\"\n      role=\"image\"\n    >\n      <title id=\"svg-logo-title\">Clover</title>\n      <g id=\"clover-symbol-2\" data-name=\"clover-symbol\">\n        <path d=\"M191.45,85.64A7.5,7.5,0,1,0,184,93.09h7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,85.64a7.5,7.5,0,1,1,7.49,7.45h-7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,102.7a7.5,7.5,0,1,0,7.49-7.45h-7.49v7.45Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path\n          d=\"M191.46,102.7A7.5,7.5,0,1,1,184,95.25h7.49v7.45Zm-7.5,5.35a5.38,5.38,0,0,0,5.4-5.35V97.36H184a5.35,5.35,0,1,0,0,10.7h0Z\"\n          transform=\"translate(-176.46 -77.01)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\n\nexport default ({ fill, size = 20 }) => {\n  return (\n    <svg className=\"Power\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 501.672 501.672\">\n      <path\n        d=\"M476.836,275.667c0,124.608-101.381,226.005-225.995,226.005c-124.617,0-226.005-101.396-226.005-226.005\n\t\t\tc0-92.843,58.241-177.615,144.907-210.942c14.446-5.538,30.657,1.646,36.212,16.093c5.551,14.443-1.655,30.653-16.093,36.208\n\t\t\tC124.665,142.094,80.87,205.851,80.87,275.674c0,93.717,76.245,169.959,169.971,169.959c93.724,0,169.962-76.242,169.962-169.959\n\t\t\tc0-68.086-40.482-129.433-103.095-156.268c-14.227-6.09-20.824-22.559-14.718-36.781c6.084-14.22,22.543-20.814,36.771-14.718\n\t\t\tC423.024,103.576,476.836,185.128,476.836,275.667z M253.445,254.935c15.475,0,28.017-12.54,28.017-28.017V28.016\n\t\t\tC281.462,12.542,268.92,0,253.445,0c-15.468,0-28.016,12.542-28.016,28.016v198.902\n      C225.429,242.396,237.982,254.935,253.445,254.935z\"\n        style={{ fill }}\n      />\n    </svg>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport QS from 'query-string';\n\nimport { configure, selectConfiguration } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const configuration = useSelector(selectConfiguration);\n  const visible = useSelector(selectVisible);\n\n  const qs = QS.parse(window.location.search);\n  const hash = QS.parse(window.location.hash);\n\n  const [cloverDomain, setCloverDomain] = useState(configuration.cloverDomain || 'https://www.clover.com');\n  const [merchantId, setMerchantId] = useState(qs.merchant_id || configuration.merchantId);\n  const [accessToken, setAccessToken] = useState(hash.access_token || configuration.accessToken);\n  const [friendlyId, setFriendlyId] = useState(configuration.friendlyId || 'Virtual Keypad');\n  const [autoConnect, setAutoConnect] = useState(configuration.autoConnect || false);\n\n  const [disabled, setDisabled] = useState();\n\n  const submit = useCallback(\n    async event => {\n      try {\n        event.preventDefault();\n        setDisabled(true);\n        await dispatch(configure({ cloverDomain, merchantId, accessToken, friendlyId, autoConnect }));\n      } finally {\n        setDisabled(false);\n      }\n    },\n    [dispatch, cloverDomain, merchantId, accessToken, friendlyId, autoConnect]\n  );\n\n  const reset = useCallback(\n    event => {\n      event.preventDefault();\n      setCloverDomain(configuration.cloverDomain);\n      setMerchantId(configuration.merchantId);\n      setAccessToken(configuration.accessToken);\n      setFriendlyId(configuration.friendlyId);\n      setAutoConnect(configuration.autoConnect);\n    },\n    [configuration, setCloverDomain, setMerchantId, setAccessToken, setFriendlyId, setAutoConnect]\n  );\n\n  if (!visible) return null;\n\n  return (\n    <form onSubmit={submit} onReset={reset}>\n      <div className=\"Configuration card\">\n        <div className=\"card-header\">\n          <Logo />\n          <h3>Virtual Keypad</h3>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"form-group\">\n            <label>Clover Domain:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={cloverDomain}\n              onChange={event => setCloverDomain(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Merchant ID:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={merchantId}\n              onChange={event => setMerchantId(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Access Token:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={accessToken}\n              onChange={event => setAccessToken(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Friendly ID:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={friendlyId}\n              onChange={event => setFriendlyId(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"custom-control custom-switch\">\n              <input\n                id=\"chkAutoConnect\"\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                disabled={disabled}\n                checked={autoConnect}\n                onChange={() => setAutoConnect(!autoConnect)}\n              />\n              <label className=\"custom-control-label font-weight-normal\" htmlFor=\"chkAutoConnect\">\n                Auto-connect\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer\">\n          <button type=\"submit\" className=\"btn btn-success\" disabled={disabled}>\n            Submit\n          </button>\n          <button type=\"reset\" className=\"btn btn-secondary ml-2\" disabled={disabled}>\n            Reset\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { createSelector } from 'reselect';\n\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !!devices.length\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { APP } from '../../common/constants';\n\nexport default ({ device, active, disabled, onClick }) => {\n  const cloud = device.apps[APP.CLOUD_PAY_DISPLAY];\n  const cloudStatus = cloud ? 'Cloud Pay Display is installed' : 'Cloud Pay Display is NOT installed';\n\n  return (\n    <button\n      key={device.id}\n      type=\"button\"\n      className={classNames(\n        'list-group-item d-flex justify-content-between align-items-center list-group-item-action p-1',\n        {\n          disabled,\n          'list-group-item-primary': !disabled && active,\n        }\n      )}\n      onClick={onClick}\n    >\n      <div className=\"p-1\">\n        {device.name && <div className=\"font-weight-bold\">{device.name}</div>}\n        {device.productName} {device.serial}\n      </div>\n      <span\n        className={classNames('badge p-1', {\n          'badge-secondary': disabled,\n          'badge-success': !disabled && cloud,\n          'badge-warning': !disabled && !cloud,\n        })}\n        role=\"img\"\n        aria-label={cloudStatus}\n        title={cloudStatus}\n      >\n        ☁️\n      </span>\n    </button>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectDevices, selectDeviceId, connect, setDevices } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\nimport Device from './Device';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const devices = useSelector(selectDevices);\n  const deviceId = useSelector(selectDeviceId);\n  const visible = useSelector(selectVisible);\n  const [disabled, setDisabled] = useState();\n\n  const select = useCallback(\n    id => async event => {\n      try {\n        event.preventDefault();\n        setDisabled(true);\n        await dispatch(connect(id));\n      } finally {\n        setDisabled(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const cancel = () => dispatch(setDevices());\n\n  if (!visible) return null;\n\n  return (\n    <div className=\"Devices card\">\n      <div className=\"card-header\">\n        <Logo />\n        <h3>Virtual Keypad</h3>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"form-group\">\n          <label>Select Device:</label>\n          <div className=\"list-group\">\n            {devices.map(device => (\n              <Device\n                key={device.id}\n                device={device}\n                disabled={disabled}\n                active={device.id === deviceId}\n                onClick={select(device.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"card-footer\">\n        <button className=\"btn btn-secondary\" onClick={cancel} disabled={disabled}>\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { createSelector } from 'reselect';\n\nimport { selectError } from '../../store';\n\nexport const selectVisible = createSelector(selectError, error => !!error.message);\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectError, setError } from '../../store';\nimport { selectVisible } from './selectors';\nimport './styles.scss';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const visible = useSelector(selectVisible);\n  const [expanded, setExpanded] = useState(false);\n\n  const close = useCallback(() => dispatch(setError()), [dispatch]);\n\n  if (!visible) return null;\n\n  return (\n    <div className=\"Error alert alert-danger\">\n      <button type=\"button\" className=\"close\" onClick={close}>\n        &times;\n      </button>\n      <h3 className=\"alert-heading\">{error.message}</h3>\n      {!!error.stack && !expanded && (\n        <button type=\"button\" className=\"btn btn-link btn-sm text-danger\" onClick={() => setExpanded(true)}>\n          Show details&hellip;\n        </button>\n      )}\n      {!!error.stack && expanded && (\n        <pre>\n          <code>{error?.stack}</code>\n        </pre>\n      )}\n    </div>\n  );\n};\n","import { createSelector } from 'reselect';\nimport { selectConnector } from '../../store';\n\nexport const selectVisible = createSelector(selectConnector, connector => !!connector);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectSignatureBounds, selectSignatureLines } from '../../store';\n\nexport default ({ width = 250, ...other }) => {\n  const bounds = useSelector(selectSignatureBounds);\n  const lines = useSelector(selectSignatureLines);\n\n  if (!lines.length) return null;\n\n  return (\n    <div className=\"Signature\">\n      <svg viewBox={bounds} width={width} {...other}>\n        {lines.map((points, i) => (\n          <polyline key={i} points={points} fill=\"none\" stroke=\"black\" />\n        ))}\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { sentenceCase } from 'change-case';\n\nimport { currency } from '../../common';\nimport { selectStatus, selectBuffer, selectTransactionType, selectTransactionAmount } from '../../store';\nimport Signature from './Signature';\n\nexport default () => {\n  const status = useSelector(selectStatus);\n  const buffer = useSelector(selectBuffer);\n  const tranType = useSelector(selectTransactionType);\n  const tranAmount = useSelector(selectTransactionAmount);\n\n  return (\n    <div className=\"Screen alert alert-secondary\">\n      {!!tranAmount && (\n        <div className=\"Transaction d-flex justify-content-between bg-white rounded-top border-bottom border-secondary\">\n          <div className=\"font-italic\">{sentenceCase(tranType)}</div>\n          <div className=\"font-weight-bold\">{currency(tranAmount)}</div>\n        </div>\n      )}\n      {!buffer && <div>{status}</div>}\n      <Signature />\n      {buffer && <div className=\"text-muted\">{buffer}</div>}\n      {buffer && <h3 className=\"text-right\">{currency(buffer)}</h3>}\n    </div>\n  );\n};\n","import React, { forwardRef, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { sentenceCase } from 'change-case';\n\nexport default forwardRef(\n  ({ action, height, color, keyCodes, disabled, onClick, moreActions, onMoreClick, children, ...other }, ref) => {\n    const [show, setShow] = useState(false);\n    useEffect(() => {\n      if (show) {\n        const hide = () => setShow(false);\n        document.addEventListener('click', hide);\n        document.addEventListener('touch', hide);\n        document.addEventListener('keydown', hide);\n        return () => {\n          document.removeEventListener('click', hide);\n          document.removeEventListener('touch', hide);\n          document.removeEventListener('keydown', hide);\n        };\n      }\n      return undefined;\n    }, [show]);\n\n    useEffect(() => {\n      if (!disabled) {\n        const keydown = event => {\n          if (keyCodes.includes(event.code)) {\n            event.preventDefault();\n            onClick();\n            return false;\n          }\n          return true;\n        };\n        document.addEventListener('keydown', keydown);\n\n        return () => document.removeEventListener('keydown', keydown);\n      }\n      return undefined;\n    }, [disabled, keyCodes, onClick]);\n\n    const value = action ? sentenceCase(action.payload?.description || action?.type || '') : children;\n\n    if (moreActions?.length) {\n      return (\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-dark action rounded-left\"\n            onClick={onClick}\n            disabled={disabled}\n            {...other}\n            title={`Shortcut keys: ${keyCodes.join(', ')}`}\n          >\n            {value || <span>&nbsp;</span>}\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-dark action dropdown-toggle\"\n            onClick={() => setShow(!show)}\n            disabled={disabled}\n          ></button>\n          <div className={classNames('dropdown-menu bg-dark', { show })}>\n            {moreActions.map((a, i) => (\n              <button key={i} className=\"dropdown-item bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                {a.payload?.description || a.type}\n              </button>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        style={{ height }}\n        className={classNames('btn', `text-${color || 'light'}`, {\n          action,\n          'btn-dark': action,\n          'btn-outline-dark': !action,\n        })}\n        disabled={disabled}\n        onClick={onClick}\n        title={`Shortcut keys: ${keyCodes.join(', ')}`}\n        {...other}\n      >\n        {value}\n      </button>\n    );\n  }\n);\n","import { ACTION } from '../../common/constants';\nimport {\n  acceptPayment,\n  acceptSignature,\n  disconnect,\n  identify,\n  invokeInputOption,\n  rejectPayment,\n  rejectSignature,\n  reset,\n  showWelcome,\n  transaction,\n} from '../../store';\n\nexport const ACTION_CREATOR = {\n  [ACTION.ACCEPT_PAYMENT]: acceptPayment,\n  [ACTION.ACCEPT_SIGNATURE]: acceptSignature,\n  [ACTION.DISCONNECT]: disconnect,\n  [ACTION.IDENTIFY]: identify,\n  [ACTION.INVOKE_INPUT_OPTION]: invokeInputOption,\n  [ACTION.REJECT_PAYMENT]: rejectPayment,\n  [ACTION.REJECT_SIGNATURE]: rejectSignature,\n  [ACTION.RESET]: reset,\n  [ACTION.SHOW_WELCOME]: showWelcome,\n  [ACTION.TRANSACTION]: transaction,\n};\n","import { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.ACCEPT_PAYMENT}` });\n    dispatch(setStatus('Accepting payment...'));\n    dispatch(setActions());\n\n    const connector = selectConnector(getState());\n    connector.acceptPayment(action.payload.payment);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { setSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.ACCEPT_SIGNATURE}` });\n    dispatch(setStatus('Accepting signature...'));\n    dispatch(setActions());\n    dispatch(setSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.acceptSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { selectFriendlyId } from '../configuration/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.IDENTIFY}` });\n    dispatch(setStatus('Identifying...'));\n    dispatch(\n      setActions([\n        { type: ACTION.SHOW_WELCOME, payload: { description: 'OK' } },\n        { type: ACTION.DISCONNECT, payload: { description: 'Cancel' } },\n      ])\n    );\n\n    const state = getState();\n    const connector = selectConnector(state);\n    const friendlyId = selectFriendlyId(state);\n\n    connector.showMessage(`${friendlyId} connected`);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.INVOKE_INPUT_OPTION}` });\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.InputOption();\n    request.setDescription(action.payload.description);\n    request.setKeyPress(action.payload.keyPress);\n    connector.invokeInputOption(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.REJECT_PAYMENT}` });\n    dispatch(setStatus('Rejecting payment...'));\n    dispatch(setActions());\n\n    const connector = selectConnector(getState());\n    connector.rejectPayment(action.payload.payment, action.payload.challenges[0]);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { setSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.REJECT_SIGNATURE}` });\n    dispatch(setStatus('Rejecting signature...'));\n    dispatch(setActions());\n    dispatch(setSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.rejectSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.RESET}` });\n    dispatch(setStatus('Resetting...'));\n    dispatch(setActions());\n\n    const connector = selectConnector(getState());\n    connector.resetDevice();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { setError } from '../error';\nimport { ACTION } from '../../common/constants';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.SHOW_WELCOME}` });\n    dispatch(setStatus('Ready'));\n    dispatch(setActions([{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }]));\n\n    const connector = selectConnector(getState());\n    connector.showWelcomeScreen();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import React, { useMemo, useCallback, useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  selectTransactionAction,\n  selectNonTransactionActions,\n  appendBuffer,\n  resetBuffer,\n  undoBuffer,\n  transaction,\n} from '../../store';\nimport Key from './Key';\nimport { ACTION_CREATOR } from './constants';\nimport { ACTION } from '../../common';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const actions = useSelector(selectNonTransactionActions);\n  const transactionAction = useSelector(selectTransactionAction);\n\n  const [actionClicked, setActionClicked] = useState(false);\n  const keysDisabled = useMemo(() => !transactionAction || actionClicked, [transactionAction, actionClicked]);\n\n  const onAction = useCallback(\n    async action => {\n      setActionClicked(true);\n      if (action.type === ACTION.INVOKE_INPUT_OPTION) setTimeout(() => setActionClicked(false), 250);\n      await dispatch(ACTION_CREATOR[action.type](action));\n    },\n    [dispatch, setActionClicked]\n  );\n\n  const actionHandler = action => async () => onAction(action);\n\n  useEffect(() => {\n    if (actions.length) setActionClicked(false);\n  }, [setActionClicked, actions]);\n\n  const keyRef = useRef();\n  const [keyHeight, setKeyHeight] = useState();\n  useEffect(() => {\n    if (keyRef.current) {\n      setKeyHeight(keyRef.current.offsetWidth);\n    }\n  }, [keyRef, setKeyHeight]);\n\n  const [action1, action2, ...moreActions] = actions;\n\n  return (\n    <div className=\"Keys\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action1 || {}}\n            disabled={!action1 || actionClicked}\n            keyCodes={['F1', 'NumpadDivide']}\n            onClick={actionHandler(action1)}\n          />\n        </div>\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action2 || {}}\n            disabled={!action2 || actionClicked}\n            keyCodes={['F2', 'NumpadMultiply']}\n            onClick={actionHandler(action2)}\n            moreActions={moreActions}\n            onMoreClick={action => onAction(action)}\n          />\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            ref={keyRef}\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad7', 'Digit7']}\n            onClick={() => dispatch(appendBuffer('7'))}\n          >\n            7\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad8', 'Digit8']} onClick={() => dispatch(appendBuffer('8'))}>\n            8\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad9', 'Digit9']} onClick={() => dispatch(appendBuffer('9'))}>\n            9\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"danger\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadSubtract', 'Escape']}\n            onClick={() => dispatch(resetBuffer())}\n          >\n            X\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad4', 'Digit4']}\n            onClick={() => dispatch(appendBuffer('4'))}\n          >\n            4\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad5', 'Digit5']} onClick={() => dispatch(appendBuffer('5'))}>\n            5\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad6', 'Digit6']} onClick={() => dispatch(appendBuffer('6'))}>\n            6\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"warning\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadAdd', 'Backspace', 'Delete']}\n            onClick={() => dispatch(undoBuffer())}\n          >\n            &lt;\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-9\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-4 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad1', 'Digit1']}\n                onClick={() => dispatch(appendBuffer('1'))}\n              >\n                1\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad2', 'Digit2']} onClick={() => dispatch(appendBuffer('2'))}>\n                2\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad3', 'Digit3']} onClick={() => dispatch(appendBuffer('3'))}>\n                3\n              </Key>\n            </div>\n          </div>\n          <div className=\"row no-gutters\">\n            <div className=\"col-8 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad0', 'Digit0']}\n                onClick={() => dispatch(appendBuffer('0'))}\n              >\n                0\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key\n                disabled={keysDisabled}\n                keyCodes={['NumpadDecimal', 'Period']}\n                onClick={() => dispatch(appendBuffer('00'))}\n              >\n                00\n              </Key>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"success\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadEnter', 'Enter']}\n            onClick={() => dispatch(transaction())}\n          >\n            O\n          </Key>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { disconnect } from '../../store';\nimport { Logo, Power } from '../SVG';\nimport { selectVisible } from './selectors';\nimport Screen from './Screen';\nimport Keys from './Keys';\nimport './styles.scss';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const visible = useSelector(selectVisible);\n\n  const click = useCallback(() => dispatch(disconnect()), [dispatch]);\n\n  if (!visible) return null;\n\n  return (\n    <div className=\"Keypad card\">\n      <div className=\"card-header\">\n        <Logo />\n        <h3>Virtual Keypad</h3>\n        <button className=\"btn btn-sm btn-outline-dark\" onClick={click} title=\"Disconnect\">\n          <Power />\n        </button>\n      </div>\n      <div className=\"card-body\">\n        <Screen />\n        <Keys />\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { currency, card } from '../../common';\nimport { selectPayment, setPayment } from '../../store';\nimport './styles.scss';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const payment = useSelector(selectPayment);\n\n  const close = useCallback(() => dispatch(setPayment()), [dispatch]);\n\n  if (!payment.id) return null;\n\n  return (\n    <div className=\"Payment alert alert-success\">\n      <button type=\"button\" className=\"close\" onClick={close}>\n        &times;\n      </button>\n      <h4 className=\"alert-heading\">Payment Details</h4>\n      <table className=\"table table-sm small mb-0\">\n        <tbody>\n          <tr>\n            <th>Payment ID:</th>\n            <td>{payment.id}</td>\n          </tr>\n          <tr>\n            <th>External ID:</th>\n            <td>{payment.externalId}</td>\n          </tr>\n          <tr>\n            <th>Order ID:</th>\n            <td>{payment.orderId}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>Total:</th>\n              <td>{currency(payment.amount + payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>Amount:</th>\n            <td>{currency(payment.amount)}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>Tip:</th>\n              <td>{currency(payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>Card:</th>\n            <td>\n              <div>{payment.cardType}</div>\n              <div>{card(payment.card)}</div>\n              {payment.card.name && <div>{payment.card.name}</div>}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import * as CONST from './constants';\n\nexport const setPayment = payment => ({\n  type: CONST.PAYMENT_SET,\n  payload: payment,\n});\n","import React from 'react';\n\nimport Configuration from '../Configuration';\nimport Devices from '../Devices/Devices';\nimport Error from '../Error';\nimport Keypad from '../Keypad';\nimport Payment from '../Payment';\nimport usePreventDoubleTapZoom from './usePreventDoubleTapZoom';\nimport './styles.scss';\n\nexport default () => {\n  usePreventDoubleTapZoom();\n\n  return (\n    <div className=\"App container\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-12 col-md-6\">\n          <div className=\"maxwidth mx-auto\">\n            <Error />\n            <Configuration />\n            <Devices />\n            <Keypad />\n          </div>\n        </div>\n        <div className=\"col-12 col-md-6 order-first order-md-last\">\n          <div className=\"maxwidth mx-auto ml-md-2\">\n            <Payment />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport default ({ ms = 500 } = {}) =>\n  useEffect(() => {\n    let expires = 0;\n    const handler = event => {\n      if (event.touches.length === 1) {\n        const now = Date.now();\n        if (event.touches.length === 1 && now > expires) {\n          event.preventDefault();\n          // Trigger a fake click for the tap we just prevented\n          event.target.click();\n        }\n        expires = now + ms;\n      }\n    };\n\n    document.body.addEventListener('touchstart', handler, { passive: false });\n\n    return () => document.body.removeEventListener('touchstart', handler, { passive: false });\n  }, [ms]);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}