{"version":3,"sources":["store/store.js","common/constants.js","store/actions/initialState.js","store/configuration/initialState.js","store/connection/initialState.js","store/devices/initialState.js","store/error/initialState.js","store/signature/initialState.js","store/transactions/initialState.js","common/api.js","common/fetchDevices.js","common/format.js","store/rootReducer.js","store/actions/reducer.js","store/actions/constants.js","store/connection/constants.js","store/buffer/reducer.js","store/buffer/initialState.js","store/buffer/constants.js","store/configuration/reducer.js","store/configuration/constants.js","store/connection/reducer.js","store/devices/reducer.js","store/devices/constants.js","store/error/reducer.js","store/error/constants.js","store/signature/reducer.js","store/signature/constants.js","store/status/reducer.js","store/status/initialState.js","store/status/constants.js","store/transactions/reducer.js","store/transactions/constants.js","store/configuration/selectors.js","store/error/actions.js","store/actions/actions.js","store/connection/selectors.js","store/status/actions.js","store/signature/actions.js","common/persist.js","store/configuration/actions.js","store/devices/actions.js","store/thunks/configure.js","store/devices/selectors.js","store/connection/actions.js","store/thunks/connect.js","store/transactions/actions.js","store/thunks/disconnect.js","store/error/selectors.js","store/buffer/actions.js","store/buffer/selectors.js","store/transactions/selectors.js","store/thunks/transaction.js","store/thunks/voidPayment.js","store/createStore.js","store/actions/selectors.js","store/signature/selectors.js","store/status/selectors.js","components/Configuration/selectors.js","components/SVG/Logo.js","components/Configuration/Configuration.js","components/Devices/selectors.js","components/Devices/Device.js","components/Devices/Devices.js","components/Keypad/constants.js","store/thunks/acceptPayment.js","store/thunks/acceptSignature.js","store/thunks/identify.js","store/thunks/invokeInputOption.js","store/thunks/rejectPayment.js","store/thunks/rejectSignature.js","store/thunks/reset.js","store/thunks/showWelcome.js","components/Keypad/selectors.js","components/Keypad/Signature.js","components/Keypad/Screen.js","components/Keypad/Key.js","components/Keypad/Keys.js","components/Keypad/Menu.js","components/Transaction/parseAmounts.js","components/Transaction/Transaction.js","components/Transaction/useShowTransaction.js","components/Keypad/History.js","components/Keypad/Keypad.js","components/Error/Error.js","components/App/App.js","components/App/usePreventDoubleTapZoom.js","components/Error/useError.js","components/Transaction/useTransactions.js","serviceWorker.js","index.js"],"names":["initialState","ACTION","APP","APP_NAME","APP_BY_NAME","Object","fromEntries","entries","map","arr","reverse","TRANSACTION","cloverDomain","merchantId","accessToken","friendlyId","manualCardEntry","autoConnect","connector","connected","list","selected","message","stack","width","height","strokes","active","data","deviceApps","deviceId","fetch","URL","toString","method","headers","accept","then","r","json","devices","appsReducer","o","a","app","appName","api","elements","Promise","all","id","apps","device","i","applications","reduce","currency","value","n","isNaN","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","rootReducer","combineReducers","actions","state","type","payload","found","some","description","inputOptions","io","buffer","replace","slice","length","configuration","loading","connection","dispose","e","request","Clover","remotepay","RetrieveDeviceStatusRequest","setSendLastMessage","retrieveDeviceStatus","error","signature","status","challenges","transactions","cur","timestamp","Date","now","amount","tipAmount","visible","newState","payment","success","externalPaymentId","selectConfiguration","selectFriendlyId","createSelector","selectManualCardEntry","selectCardEntryMethods","manual","CardEntryMethods","DEFAULT","CARD_ENTRY_METHOD_MANUAL","selectAutoConnect","selectConfigurationLoading","setError","setActions","selectConnection","selectConnector","setStatus","text","setSignature","localStorage","setItem","JSON","stringify","initialDevices","setConfigurationLoading","setConfiguration","setDevices","setDeviceId","dispatch","getState","persist","fetchDevices","Error","selectRawDevices","selectDeviceId","selectDevices","sort","b","setConnector","resolve","setTimeout","find","d","factory","CloverConnectorFactoryBuilder","createICloverConnectorFactory","FACTORY_VERSION","VERSION_12","createICloverConnector","WebSocketCloudCloverDeviceConfigurationBuilder","setCloverServer","setFriendlyId","build","Listener","keys","getPrototypeOf","forEach","ICloverConnectorListener","listener","addCloverConnectorListener","initializeConnection","setActiveTransaction","hideTransaction","selectError","appendBuffer","selectBuffer","selectRawTransactions","selectTransactions","values","selectActiveTransaction","selectActiveTransactionType","selectActiveTransactionAmount","selectPaymentTransactions","filter","t","selectVisiblePaymentTransactions","action","cardEntryMethods","CloverID","getNewId","SaleRequest","setAmount","setExternalId","setCardEntryMethods","sale","orderId","VoidPaymentRequest","setPaymentId","setOrderId","setVoidReason","order","VoidReason","USER_CANCEL","voidPayment","parse","getItem","console","warn","store","middleware","applyMiddleware","thunk","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","enhancer","f","createStore","compose","config","configure","selectActions","selectTransactionAction","selectNonTransactionActions","selectSignature","selectSignatureBounds","bounds","points","flat","point","x","X","y","Y","Math","min","max","Infinity","join","selectSignatureLines","selectStatus","selectVisible","size","className","xmlns","viewBox","aria-labelledby","role","data-name","transform","useDispatch","useSelector","qs","QS","location","search","hash","useState","setCloverDomain","merchant_id","setMerchantId","access_token","setAccessToken","setManualCardEntry","setAutoConnect","submitting","setSubmitting","disabled","useMemo","submit","useCallback","event","preventDefault","reset","onSubmit","onReset","Logo","onChange","target","checked","htmlFor","onClick","cloud","cloudStatus","key","classNames","name","productName","serial","aria-label","title","setDisabled","select","connect","Device","ACTION_CREATOR","acceptPayment","VerifySignatureRequest","setPayment","acceptSignature","disconnect","showMessage","InputOption","setDescription","setKeyPress","keyPress","invokeInputOption","rejectPayment","rejectSignature","resetDevice","showWelcomeScreen","transaction","MODE","HISTORY","MODE_TEXT","other","lines","fill","stroke","tranType","tranAmount","sentenceCase","Signature","forwardRef","ref","color","keyCodes","moreActions","onMoreClick","children","show","setShow","useEffect","hide","document","addEventListener","removeEventListener","keydown","includes","code","style","transactionAction","actionClicked","setActionClicked","keysDisabled","onAction","actionHandler","keyRef","useRef","keyHeight","setKeyHeight","current","offsetWidth","action1","action2","Key","mode","setMode","toggle","power","m","readOnly","start","final","partial","remaining","removeToast","useToasts","amounts","parseAmounts","onRemaining","doTransaction","onVoid","cardType","first6","last4","repeat","trim","card","cardTransaction","cardholderName","addToast","appearance","Transaction","autoDismiss","onDismiss","showTransaction","useShowTransaction","sortedTransactions","compareDesc","format","parseTimestamp","parseAmount","Menu","Screen","Keys","History","expanded","setExpanded","querySelectorAll","querySelector","classList","remove","add","ms","expires","handler","touches","click","body","passive","usePreventDoubleTapZoom","useError","useTransactions","Configuration","Devices","Keypad","Boolean","hostname","match","ReactDOM","render","StrictMode","placement","App","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f58707c1.chunk.js","sourcesContent":["import { STORAGE } from '../common/constants';\nimport createStore from './createStore';\nimport { selectAutoConnect, selectConfiguration } from './configuration/selectors';\nimport { configure } from './thunks';\n\nlet initialState;\ntry {\n  initialState = JSON.parse(localStorage.getItem(STORAGE));\n} catch (e) {\n  console.warn('Failed to initialize state from storage', e);\n} finally {\n  initialState = initialState || undefined;\n}\n\nconst store = createStore(initialState);\n\nconst state = store.getState();\nif (selectAutoConnect(state)) {\n  const config = selectConfiguration(state);\n  store.dispatch(configure(config));\n}\n\nexport default store;\n","export const ACTION = {\n  ACCEPT_PAYMENT: 'ACCEPT_PAYMENT',\n  ACCEPT_SIGNATURE: 'ACCEPT_SIGNATURE',\n  DISCONNECT: 'DISCONNECT',\n  IDENTIFY: 'IDENTIFY',\n  INVOKE_INPUT_OPTION: 'INVOKE_INPUT_OPTION',\n  REJECT_PAYMENT: 'REJECT_PAYMENT',\n  REJECT_SIGNATURE: 'REJECT_SIGNATURE',\n  RESET: 'RESET',\n  SHOW_WELCOME: 'SHOW_WELCOME',\n  TRANSACTION: 'TRANSACTION',\n  VOID_PAYMENT: 'VOID_PAYMENT',\n};\n\nexport const APP = {\n  CLOUD_PAY_DISPLAY: 'CLOUD_PAY_DISPLAY',\n};\n\nexport const APP_NAME = {\n  [APP.CLOUD_PAY_DISPLAY]: 'Cloud Pay Display',\n};\n\nexport const APP_BY_NAME = Object.fromEntries(Object.entries(APP_NAME).map(arr => arr.reverse()));\n\nexport const REMOTE_APPLICATION_ID = 'virtual-keypad';\n\nexport const STORAGE = 'clover/virtual-keypad';\n\nexport const TRANSACTION = {\n  SALE: 'SALE',\n  REFUND: 'REFUND',\n  VOID: 'VOID',\n};\n","export default [];\n","export default {\n  cloverDomain: '',\n  merchantId: '',\n  accessToken: '',\n  friendlyId: '',\n  manualCardEntry: false,\n  autoConnect: false,\n};\n","export default {\n  connector: null,\n  connected: false,\n};\n","export default {\n  list: [],\n  selected: '',\n};\n","export default {\n  message: null,\n  stack: null,\n};\n","export default {\n  width: 0,\n  height: 0,\n  strokes: [],\n};\n","export default {\n  active: null,\n  data: {},\n};\n","export const deviceApps = ({ cloverDomain, merchantId, deviceId, accessToken }) =>\n  fetch(\n    new URL(\n      `/v2/merchant/${merchantId}/device/${deviceId}/current_apps?access_token=${accessToken}`,\n      cloverDomain\n    ).toString(),\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n    }\n  ).then(r => r.json());\n\nexport const devices = ({ cloverDomain, merchantId, accessToken }) =>\n  fetch(new URL(`/v3/merchants/${merchantId}/devices?access_token=${accessToken}`, cloverDomain).toString(), {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    },\n  }).then(r => r.json());\n","import { APP_BY_NAME } from './constants';\nimport * as api from './api';\n\nconst appsReducer = (o, a) => {\n  const app = APP_BY_NAME[a.appName];\n  return app ? { ...o, [app]: true } : o;\n};\n\nexport default async ({ cloverDomain, merchantId, accessToken }) => {\n  const { elements: devices } = await api.devices({ cloverDomain, merchantId, accessToken });\n  const apps = await Promise.all(\n    devices.map(({ id: deviceId }) =>\n      api.deviceApps({\n        cloverDomain,\n        merchantId,\n        accessToken,\n        deviceId,\n      })\n    )\n  );\n  return devices.map((device, i) => ({\n    ...device,\n    apps: apps[i].applications.reduce(appsReducer, {}),\n  }));\n};\n","export const currency = value => {\n  const n = +value;\n  if (!isNaN(n) && n >= 0) {\n    return (n / 100).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  return '';\n};\n\nexport const card = ({ first6, last4 }) => [first6, '*'.repeat(6), last4].join('').replace(/.{4}/g, ' $&').trim();\n","import { combineReducers } from 'redux';\nimport actions from './actions/reducer';\nimport buffer from './buffer/reducer';\nimport configuration from './configuration/reducer';\nimport connection from './connection/reducer';\nimport devices from './devices/reducer';\nimport error from './error/reducer';\nimport signature from './signature/reducer';\nimport status from './status/reducer';\nimport transactions from './transactions/reducer';\n\nconst rootReducer = combineReducers({\n  actions,\n  buffer,\n  configuration,\n  connection,\n  devices,\n  error,\n  signature,\n  status,\n  transactions,\n});\n\nexport default rootReducer;\n","import { ACTION } from '../../common/constants';\nimport * as CONST from './constants';\nimport { CONNECTION_SET_CONNECTOR } from '../connection/constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ACTIONS_APPEND: {\n      const found = state.some(a => a.type === payload.type && a.payload?.description === payload.payload?.description);\n      return found ? state : [...state, payload];\n    }\n    case CONST.ACTIONS_SET:\n      return payload || [];\n    case CONNECTION_SET_CONNECTOR:\n      return [{ type: ACTION.DISCONNECT, payload: { description: 'Cancel' } }];\n    case '@@connector/onDeviceReady':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onResetDeviceResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onDeviceActivityStart':\n      return payload.inputOptions.map(io => ({ type: ACTION.INVOKE_INPUT_OPTION, payload: io }));\n    case '@@connector/onSaleResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onVoidPaymentResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onConfirmPaymentRequest':\n      return [\n        { type: ACTION.ACCEPT_PAYMENT, payload: { description: 'Accept', ...payload } },\n        { type: ACTION.REJECT_PAYMENT, payload: { description: 'Reject', ...payload } },\n      ];\n    case '@@connector/onVerifySignatureRequest':\n      return [\n        { type: ACTION.ACCEPT_SIGNATURE, payload: { description: 'Accept', ...payload } },\n        { type: ACTION.REJECT_SIGNATURE, payload: { description: 'Reject', ...payload } },\n      ];\n    default:\n      return state;\n  }\n};\n","export const ACTIONS_SET = 'ACTIONS_SET';\nexport const ACTIONS_APPEND = 'ACTIONS_APPEND';\n","export const CONNECTION_SET_CONNECTOR = 'CONNECTION_SET_CONNECTOR';\nexport const CONNECTION_SET_CONNECTED = 'CONNECTION_SET_CONNECTED';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.BUFFER_RESET:\n      return initialState;\n    case CONST.BUFFER_APPEND:\n      return (state + payload).replace(/^0+/, '').slice(0, 7);\n    case CONST.BUFFER_SET:\n      return payload;\n    case CONST.BUFFER_UNDO:\n      return state.length ? state.slice(0, state.length - 1) : '';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const BUFFER_APPEND = 'BUFFER_APPEND';\nexport const BUFFER_RESET = 'BUFFER_RESET';\nexport const BUFFER_SET = 'BUFFER_SET';\nexport const BUFFER_UNDO = 'BUFFER_UNDO';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONFIGURATION_LOADING:\n      return {\n        ...state,\n        loading: payload || undefined,\n      };\n    case CONST.CONFIGURATION_SET:\n      return {\n        ...state,\n        cloverDomain: payload.cloverDomain || '',\n        merchantId: payload.merchantId || '',\n        accessToken: payload.accessToken || '',\n        friendlyId: payload.friendlyId || '',\n        manualCardEntry: payload.manualCardEntry || false,\n        autoConnect: payload.autoConnect || false,\n      };\n    default:\n      return state;\n  }\n};\n","export const CONFIGURATION_LOADING = 'CONFIGURATION_LOADING';\nexport const CONFIGURATION_SET = 'CONFIGURATION_SET';\n","import Clover from 'remote-pay-cloud';\n\nimport * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONNECTION_SET_CONNECTOR:\n      try {\n        if (state?.connector) {\n          state.connector.dispose();\n        }\n      } catch (e) {\n        // Do nothing\n      }\n\n      return {\n        ...state,\n        connector: payload,\n        connected: false,\n      };\n    case '@@connector/onDeviceDisconnected':\n      return { ...state, connected: false };\n    case '@@connector/onDeviceReady': {\n      const request = new Clover.remotepay.RetrieveDeviceStatusRequest();\n      request.setSendLastMessage(true);\n      state.connector.retrieveDeviceStatus(request);\n\n      return { ...state, connected: true };\n    }\n    default:\n      return state;\n  }\n};\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.DEVICES_SET_SELECTED:\n      return {\n        ...state,\n        selected: payload || '',\n      };\n    case CONST.DEVICES_SET_LIST:\n      return {\n        ...state,\n        list: payload || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const DEVICES_SET_LIST = 'DEVICES_SET_LIST';\nexport const DEVICES_SET_SELECTED = 'DEVICES_SET_SELECTED';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ERROR_SET:\n      return {\n        ...state,\n        message: payload.message,\n        stack: payload.stack,\n      };\n    case '@@connector/onDeviceError':\n      return {\n        ...state,\n        message: `Device Error ${payload.message}`,\n        stack: null,\n      };\n    default:\n      return state;\n  }\n};\n","export const ERROR_SET = 'ERROR_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.SIGNATURE_SET:\n      return {\n        width: payload?.width || 0,\n        height: payload?.height || 0,\n        strokes: payload?.strokes || [],\n      };\n    case '@@connector/onVerifySignatureRequest':\n      return {\n        width: payload.signature?.width || 0,\n        height: payload.signature?.height || 0,\n        strokes: payload.signature?.strokes || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const SIGNATURE_SET = 'SIGNATURE_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.STATUS_SET:\n      return payload || '';\n    case '@@connector/onDeviceReady':\n      return 'Ready';\n    case '@@connector/onResetDeviceResponse':\n      return 'Ready';\n    case '@@connector/onDeviceActivityStart':\n      return payload.message;\n    case '@@connector/onSaleResponse':\n      return 'Ready';\n    case '@@connector/onVoidPaymentResponse':\n      return 'Ready';\n    case '@@connector/onConfirmPaymentRequest':\n      return payload.challenges[0].message;\n    case '@@connector/onVerifySignatureRequest':\n      return 'Verify Signature';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const STATUS_SET = 'STATUS_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\nimport { TRANSACTION } from '../../common';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.TRANSACTIONS_ACTIVE: {\n      if (payload.id) {\n        const cur = state.data[payload.id] || {};\n\n        return {\n          ...state,\n          active: payload.id,\n          data: {\n            ...state.data,\n            [payload.id]: {\n              ...state.data[payload.id],\n              id: payload.id,\n              timestamp: Date.now(),\n              type: payload.type || cur.type,\n              amount: payload.amount || cur.amount || 0,\n              tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            },\n          },\n        };\n      }\n      return {\n        ...state,\n        active: '',\n      };\n    }\n    case CONST.TRANSACTIONS_HIDE:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: false,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_SHOW:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: true,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_REMOVE: {\n      const newState = {\n        ...state,\n        data: { ...state.data },\n      };\n      delete newState.data[payload];\n      return newState;\n    }\n    case CONST.TRANSACTIONS_UPDATE: {\n      const cur = state.data[payload.id] || {};\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload.id]: {\n            ...cur,\n            id: payload.id,\n            timestamp: Date.now(),\n            visible: payload.visible || cur.visible || false,\n            amount: payload.amount || cur.amount || 0,\n            tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            type: payload.type || cur.type || '',\n            payment: payload.payment || cur.payment || null,\n          },\n        },\n      };\n    }\n    case '@@connector/onSaleResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.SALE,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      return state;\n    }\n    case '@@connector/onVoidPaymentResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.VOID,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    default:\n      return state;\n  }\n};\n","export const TRANSACTIONS_ACTIVE = 'TRANSACTIONS_ACTIVE';\nexport const TRANSACTIONS_REMOVE = 'TRANSACTIONS_REMOVE';\nexport const TRANSACTIONS_UPDATE = 'TRANSACTIONS_UPDATE';\nexport const TRANSACTIONS_SHOW = 'TRANSACTIONS_SHOW';\nexport const TRANSACTIONS_HIDE = 'TRANSACTIONS_HIDE';\n","import Clover from 'remote-pay-cloud';\nimport { createSelector } from 'reselect';\n\nexport const selectConfiguration = state => state.configuration;\n\nexport const selectFriendlyId = createSelector(selectConfiguration, ({ friendlyId }) => friendlyId || 'Virtual Keypad');\n\nexport const selectManualCardEntry = createSelector(\n  selectConfiguration,\n  ({ manualCardEntry }) => manualCardEntry || false\n);\n\nexport const selectCardEntryMethods = createSelector(selectManualCardEntry, manual =>\n  manual\n    ? // eslint-disable-next-line no-bitwise\n      Clover.CardEntryMethods.DEFAULT | Clover.CardEntryMethods.CARD_ENTRY_METHOD_MANUAL\n    : Clover.CardEntryMethods.DEFAULT\n);\n\nexport const selectAutoConnect = createSelector(selectConfiguration, ({ autoConnect }) => autoConnect || false);\n\nexport const selectConfigurationLoading = createSelector(selectConfiguration, ({ loading }) => loading || false);\n","import * as CONST from './constants';\n\nexport const setError = ({ message, stack } = {}) => ({\n  type: CONST.ERROR_SET,\n  payload: { message, stack },\n});\n","import * as CONST from './constants';\n\nexport const setActions = actions => ({\n  type: CONST.ACTIONS_SET,\n  payload: actions,\n});\n\nexport const appendAction = action => ({\n  type: CONST.ACTIONS_APPEND,\n  payload: action,\n});\n","import { createSelector } from 'reselect';\n\nexport const selectConnection = state => state.connection;\n\nexport const selectConnector = createSelector(selectConnection, ({ connector }) => connector);\n\nexport const selectConnected = createSelector(selectConnection, ({ connected }) => connected);\n","import * as CONST from './constants';\n\nexport const setStatus = text => ({\n  type: CONST.STATUS_SET,\n  payload: text,\n});\n","import * as CONST from './constants';\n\nexport const setSignature = signature => ({\n  type: CONST.SIGNATURE_SET,\n  payload: signature,\n});\n","import { STORAGE } from './constants';\nimport initialDevices from '../store/devices/initialState';\n\nexport default ({ configuration, devices }) =>\n  localStorage.setItem(\n    STORAGE,\n    JSON.stringify({\n      configuration: {\n        ...configuration,\n        loading: undefined,\n      },\n      devices: {\n        ...initialDevices,\n        selected: devices.selected,\n      },\n    })\n  );\n","import * as CONST from './constants';\n\nexport const setConfigurationLoading = loading => ({\n  type: CONST.CONFIGURATION_LOADING,\n  payload: loading,\n});\n\nexport const setConfiguration = ({\n  cloverDomain,\n  merchantId,\n  accessToken,\n  friendlyId,\n  manualCardEntry,\n  autoConnect,\n}) => ({\n  type: CONST.CONFIGURATION_SET,\n  payload: { cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect },\n});\n","import * as CONST from './constants';\n\nexport const setDevices = devices => ({\n  type: CONST.DEVICES_SET_LIST,\n  payload: devices,\n});\n\nexport const setDeviceId = deviceId => ({\n  type: CONST.DEVICES_SET_SELECTED,\n  payload: deviceId,\n});\n","import { APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport fetchDevices from '../../common/fetchDevices';\nimport { setConfiguration, setConfigurationLoading } from '../configuration/actions';\nimport { setDevices } from '../devices/actions';\nimport { setError } from '../error/actions';\n\nexport default ({ cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect }) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    await dispatch(setConfigurationLoading(true));\n\n    await dispatch(\n      setConfiguration({ cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect })\n    );\n    persist(getState());\n\n    const devices = await fetchDevices({ cloverDomain, merchantId, accessToken });\n    await dispatch(setDevices(devices));\n\n    if (!devices.length) {\n      throw new Error('Merchant has no devices.');\n    }\n\n    if (!devices.some(a => a.apps[APP.CLOUD_PAY_DISPLAY])) {\n      throw new Error('Merchant has no devices with Cloud Pay Display installed.');\n    }\n  } catch (e) {\n    await dispatch(setError(e));\n  } finally {\n    await dispatch(setConfigurationLoading(false));\n  }\n};\n","import { createSelector } from 'reselect';\n\nexport const selectRawDevices = state => state.devices;\n\nexport const selectDeviceId = createSelector(selectRawDevices, ({ selected }) => selected);\n\nexport const selectDevices = createSelector(selectRawDevices, selectDeviceId, ({ list }, deviceId) =>\n  [...list].sort((a, b) => (a.id === deviceId ? -1 : b.id === deviceId ? 1 : 0))\n);\n","import * as CONST from './constants';\n\nexport const setConnector = connector => ({\n  type: CONST.CONNECTION_SET_CONNECTOR,\n  payload: connector,\n});\n","import Clover from 'remote-pay-cloud';\n\nimport { REMOTE_APPLICATION_ID, APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport { selectConfiguration } from '../configuration/selectors';\nimport { selectDevices } from '../devices/selectors';\nimport { setConnector } from '../connection/actions';\nimport { setDeviceId } from '../devices/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default deviceId => async (dispatch, getState) => {\n  try {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    await dispatch(setDeviceId(deviceId));\n\n    const state = getState();\n    persist(state);\n\n    const { cloverDomain, merchantId, accessToken, friendlyId } = selectConfiguration(state);\n    const device = selectDevices(state).find(d => d.id === deviceId);\n\n    if (!device) throw new Error(`Device not found.`);\n    if (!device.apps[APP.CLOUD_PAY_DISPLAY]) throw new Error('Device does not have Cloud Pay Display installed.');\n\n    const factory = Clover.CloverConnectorFactoryBuilder.createICloverConnectorFactory({\n      [Clover.CloverConnectorFactoryBuilder.FACTORY_VERSION]: Clover.CloverConnectorFactoryBuilder.VERSION_12,\n    });\n\n    const connector = factory.createICloverConnector(\n      new Clover.WebSocketCloudCloverDeviceConfigurationBuilder(\n        REMOTE_APPLICATION_ID,\n        deviceId,\n        merchantId,\n        accessToken\n      )\n        .setCloverServer(cloverDomain)\n        .setFriendlyId(friendlyId)\n        .build()\n    );\n\n    class Listener extends Clover.remotepay.ICloverConnectorListener {\n      constructor() {\n        super();\n        Object.keys(Object.getPrototypeOf(Object.getPrototypeOf(this))).forEach(type => {\n          this[type] = payload => dispatch({ type: `@@connector/${type}`, payload });\n        });\n      }\n    }\n    const listener = new Listener();\n    connector.addCloverConnectorListener(listener);\n\n    dispatch(setConnector(connector));\n    dispatch(setStatus('Connecting...'));\n\n    connector.initializeConnection();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const setActiveTransaction = ({ id, type, amount, tipAmount } = {}) => ({\n  type: CONST.TRANSACTIONS_ACTIVE,\n  payload: { id, type, amount, tipAmount },\n});\n\nexport const removeTransaction = id => ({\n  type: CONST.TRANSACTIONS_REMOVE,\n  payload: id,\n});\n\nexport const showTransaction = id => ({\n  type: CONST.TRANSACTIONS_SHOW,\n  payload: id,\n});\n\nexport const hideTransaction = id => ({\n  type: CONST.TRANSACTIONS_HIDE,\n  payload: id,\n});\n\nexport const updateTransaction = ({ id, type, amount, tipAmount, payment }) => ({\n  type: CONST.TRANSACTIONS_UPDATE,\n  payload: { id, type, amount, tipAmount, payment },\n});\n","import { setConnector } from '../connection/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setError } from '../error/actions';\nimport { setDevices } from '../devices/actions';\nimport { setActiveTransaction } from '../transactions/actions';\n\nexport default () => async (dispatch, getState) => {\n  try {\n    const connector = selectConnector(getState());\n    connector.dispose();\n\n    dispatch(setConnector());\n    dispatch(setDevices());\n    dispatch(setActiveTransaction());\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","export const selectError = state => state.error;\n","import * as CONST from './constants';\n\nexport const resetBuffer = () => ({ type: CONST.BUFFER_RESET });\n\nexport const setBuffer = value => ({\n  type: CONST.BUFFER_SET,\n  payload: value || '',\n});\n\nexport const appendBuffer = value => ({\n  type: CONST.BUFFER_APPEND,\n  payload: value,\n});\n\nexport const undoBuffer = () => ({ type: CONST.BUFFER_UNDO });\n","export const selectBuffer = state => state.buffer;\n","import { createSelector } from 'reselect';\n\nexport const selectRawTransactions = state => state.transactions;\n\nexport const selectTransactions = createSelector(selectRawTransactions, ({ data }) => Object.values(data));\n\nexport const selectActiveTransaction = createSelector(selectRawTransactions, ({ active, data }) => data[active]);\n\nexport const selectActiveTransactionType = createSelector(selectActiveTransaction, active => active?.type);\n\nexport const selectActiveTransactionAmount = createSelector(\n  selectActiveTransaction,\n  active => (active?.amount || 0) + (active?.tipAmount || 0)\n);\n\nexport const selectPaymentTransactions = createSelector(selectTransactions, transactions =>\n  transactions.filter(t => t.payment)\n);\n\nexport const selectVisiblePaymentTransactions = createSelector(selectPaymentTransactions, transactions =>\n  transactions.filter(t => t.visible)\n);\n","import Clover from 'remote-pay-cloud';\n\nimport { resetBuffer } from '../buffer/actions';\nimport { selectBuffer } from '../buffer/selectors';\nimport { selectConnector } from '../connection/selectors';\nimport { selectCardEntryMethods } from '../configuration/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\nimport { TRANSACTION, ACTION } from '../../common/constants';\nimport { updateTransaction, setActiveTransaction } from '../transactions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.TRANSACTION}` });\n\n    const state = getState();\n    const buffer = selectBuffer(state);\n    const connector = selectConnector(state);\n    const cardEntryMethods = selectCardEntryMethods(state);\n\n    dispatch(setActions());\n    dispatch(setStatus('Processing...'));\n    dispatch(resetBuffer());\n\n    const amount = +buffer;\n    if (!amount) throw new Error('Amount is required');\n    if (isNaN(amount)) throw new Error('Amount is invalid');\n    if (amount <= 0 || amount > 99_999_99) throw new Error('Amount must between 0.01 and 99,999.99');\n\n    const id = Clover.CloverID.getNewId();\n    const type = TRANSACTION.SALE;\n\n    dispatch(setActiveTransaction({ id, type, amount }));\n\n    const request = new Clover.remotepay.SaleRequest();\n    request.setAmount(amount);\n    request.setExternalId(id);\n    request.setCardEntryMethods(cardEntryMethods);\n\n    dispatch(updateTransaction({ id, type: TRANSACTION.SALE, amount }));\n\n    connector.sale(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION, TRANSACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setActions } from '../actions/actions';\nimport { setStatus } from '../status/actions';\nimport { setActiveTransaction } from '../transactions';\n\nexport default payment => async (dispatch, getState) => {\n  try {\n    dispatch({ type: `@@action/${ACTION.VOID_PAYMENT}`, payload: payment });\n\n    const { id, externalPaymentId, orderId, amount, tipAmount } = payment;\n    const connector = selectConnector(getState());\n\n    dispatch(setActions());\n    dispatch(setStatus('Processing...'));\n    if (!id) throw new Error('No payment was specified');\n\n    const type = TRANSACTION.VOID;\n    dispatch(setActiveTransaction({ id: externalPaymentId, type, amount, tipAmount }));\n\n    const request = new Clover.remotepay.VoidPaymentRequest();\n    request.setPaymentId(id);\n    request.setOrderId(orderId);\n    request.setVoidReason(Clover.order.VoidReason.USER_CANCEL);\n    connector.voidPayment(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nexport default initialState => {\n  const middleware = applyMiddleware(thunk);\n\n  // eslint-disable-next-line no-underscore-dangle\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n  const enhancer = devTools ? devTools() : f => f;\n\n  return createStore(rootReducer, initialState, compose(middleware, enhancer));\n};\n","import { createSelector } from 'reselect';\n\nimport { ACTION } from '../../common/constants';\n\nexport const selectActions = state => state.actions;\n\nexport const selectTransactionAction = createSelector(selectActions, actions =>\n  actions.find(a => a.type === ACTION.TRANSACTION)\n);\n\nexport const selectNonTransactionActions = createSelector(selectActions, actions => {\n  const arr = actions.filter(a => a.type !== ACTION.TRANSACTION);\n  if (arr.length === 2) {\n    const [a, b] = arr;\n    if (a.payload?.description === 'No' && b.payload?.description === 'Yes') {\n      return [b, a];\n    }\n  }\n  return arr;\n});\n","import { createSelector } from 'reselect';\n\nexport const selectSignature = state => state.signature;\n\nexport const selectSignatureBounds = createSelector(selectSignature, ({ strokes }) => {\n  const bounds = strokes\n    .map(({ points }) => points)\n    .flat()\n    .reduce(\n      ({ x, X, y, Y }, point) => ({\n        x: Math.min(x, point.x),\n        X: Math.max(X, point.x),\n        y: Math.min(y, point.y),\n        Y: Math.max(Y, point.y),\n      }),\n      { x: Infinity, X: -Infinity, y: Infinity, Y: -Infinity }\n    );\n  return [bounds.x, bounds.y, bounds.X - bounds.x, bounds.Y - bounds.y].join(' ');\n});\n\nexport const selectSignatureLines = createSelector(selectSignature, ({ strokes }) =>\n  strokes.map(({ points }) => points.map(({ x, y }) => `${x},${y}`).join(' '))\n);\n","export const selectStatus = state => state.status;\n","import { createSelector } from 'reselect';\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !devices.length\n);\n","import React from 'react';\n\nexport default ({ size = 28 }) => {\n  return (\n    <svg\n      className=\"Logo\"\n      id=\"clover-logo-svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 33.15 33.15\"\n      aria-labelledby=\"svg-logo-title\"\n      role=\"image\"\n    >\n      <title id=\"svg-logo-title\">Clover</title>\n      <g id=\"clover-symbol-2\" data-name=\"clover-symbol\">\n        <path d=\"M191.45,85.64A7.5,7.5,0,1,0,184,93.09h7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,85.64a7.5,7.5,0,1,1,7.49,7.45h-7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,102.7a7.5,7.5,0,1,0,7.49-7.45h-7.49v7.45Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path\n          d=\"M191.46,102.7A7.5,7.5,0,1,1,184,95.25h7.49v7.45Zm-7.5,5.35a5.38,5.38,0,0,0,5.4-5.35V97.36H184a5.35,5.35,0,1,0,0,10.7h0Z\"\n          transform=\"translate(-176.46 -77.01)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n","import React, { useCallback, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport QS from 'query-string';\n\nimport { configure, selectConfiguration, selectConfigurationLoading } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const configuration = useSelector(selectConfiguration);\n  const loading = useSelector(selectConfigurationLoading);\n  const visible = useSelector(selectVisible);\n\n  const qs = QS.parse(window.location.search);\n  const hash = QS.parse(window.location.hash);\n\n  const [cloverDomain, setCloverDomain] = useState(configuration.cloverDomain || 'https://www.clover.com');\n  const [merchantId, setMerchantId] = useState(qs.merchant_id || configuration.merchantId);\n  const [accessToken, setAccessToken] = useState(hash.access_token || configuration.accessToken);\n  const [friendlyId, setFriendlyId] = useState(configuration.friendlyId || 'Virtual Keypad');\n  const [manualCardEntry, setManualCardEntry] = useState(configuration.manualCardEntry || false);\n  const [autoConnect, setAutoConnect] = useState(configuration.autoConnect || false);\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const disabled = useMemo(() => loading || submitting, [loading, submitting]);\n\n  const submit = useCallback(\n    async event => {\n      try {\n        event.preventDefault();\n        setSubmitting(true);\n        await dispatch(configure({ cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect }));\n      } finally {\n        setSubmitting(false);\n      }\n    },\n    [dispatch, cloverDomain, merchantId, accessToken, friendlyId, manualCardEntry, autoConnect]\n  );\n\n  const reset = useCallback(\n    event => {\n      event.preventDefault();\n      setCloverDomain(configuration.cloverDomain);\n      setMerchantId(configuration.merchantId);\n      setAccessToken(configuration.accessToken);\n      setFriendlyId(configuration.friendlyId);\n      setManualCardEntry(configuration.manualCardEntry);\n      setAutoConnect(configuration.autoConnect);\n    },\n    [configuration, setCloverDomain, setMerchantId, setAccessToken, setFriendlyId, setManualCardEntry, setAutoConnect]\n  );\n\n  if (!visible) return null;\n\n  return (\n    <form onSubmit={submit} onReset={reset}>\n      <div className=\"Configuration card\">\n        <div className=\"card-header\">\n          <Logo />\n          <h3>Virtual Keypad</h3>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"form-group\">\n            <label>Clover Domain:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={cloverDomain}\n              onChange={event => setCloverDomain(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Merchant ID:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={merchantId}\n              onChange={event => setMerchantId(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Access Token:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={accessToken}\n              onChange={event => setAccessToken(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Friendly ID:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={friendlyId}\n              onChange={event => setFriendlyId(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"custom-control custom-switch\">\n              <input\n                id=\"chkManualCardEntry\"\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                disabled={disabled}\n                checked={manualCardEntry}\n                onChange={() => setManualCardEntry(!manualCardEntry)}\n              />\n              <label className=\"custom-control-label font-weight-normal\" htmlFor=\"chkManualCardEntry\">\n                Allow Manual Card Entry\n              </label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"custom-control custom-switch\">\n              <input\n                id=\"chkAutoConnect\"\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                disabled={disabled}\n                checked={autoConnect}\n                onChange={() => setAutoConnect(!autoConnect)}\n              />\n              <label className=\"custom-control-label font-weight-normal\" htmlFor=\"chkAutoConnect\">\n                Auto-connect\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer\">\n          <button type=\"submit\" className=\"btn btn-success\" disabled={disabled}>\n            Submit\n          </button>\n          <button type=\"reset\" className=\"btn btn-secondary ml-2\" disabled={disabled}>\n            Reset\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { createSelector } from 'reselect';\n\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !!devices.length\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { APP } from '../../common/constants';\n\nexport default ({ device, active, disabled, onClick }) => {\n  const cloud = device.apps[APP.CLOUD_PAY_DISPLAY];\n  const cloudStatus = cloud ? 'Cloud Pay Display is installed' : 'Cloud Pay Display is NOT installed';\n\n  return (\n    <button\n      key={device.id}\n      type=\"button\"\n      className={classNames(\n        'list-group-item d-flex justify-content-between align-items-center list-group-item-action p-1',\n        {\n          disabled,\n          'list-group-item-primary': !disabled && active,\n        }\n      )}\n      onClick={onClick}\n    >\n      <div className=\"p-1\">\n        {device.name && <div className=\"font-weight-bold\">{device.name}</div>}\n        {device.productName} {device.serial}\n      </div>\n      <span\n        className={classNames('badge p-1', {\n          'badge-secondary': disabled,\n          'badge-success': !disabled && cloud,\n          'badge-warning': !disabled && !cloud,\n        })}\n        role=\"img\"\n        aria-label={cloudStatus}\n        title={cloudStatus}\n      >\n        ☁️\n      </span>\n    </button>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectDevices, selectDeviceId, connect, setDevices } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\nimport Device from './Device';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const devices = useSelector(selectDevices);\n  const deviceId = useSelector(selectDeviceId);\n  const visible = useSelector(selectVisible);\n  const [disabled, setDisabled] = useState();\n\n  const select = useCallback(\n    id => async event => {\n      try {\n        event.preventDefault();\n        setDisabled(true);\n        await dispatch(connect(id));\n      } finally {\n        setDisabled(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const cancel = () => dispatch(setDevices());\n\n  if (!visible) return null;\n\n  return (\n    <div className=\"Devices card\">\n      <div className=\"card-header\">\n        <Logo />\n        <h3>Virtual Keypad</h3>\n        <button className=\"close text-light\" title=\"Cancel\" onClick={cancel} disabled={disabled}>\n          &times;\n        </button>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"form-group\">\n          <label>Select Device:</label>\n          <div className=\"list-group\">\n            {devices.map(device => (\n              <Device\n                key={device.id}\n                device={device}\n                disabled={disabled}\n                active={device.id === deviceId}\n                onClick={select(device.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ACTION } from '../../common/constants';\nimport {\n  acceptPayment,\n  acceptSignature,\n  disconnect,\n  identify,\n  invokeInputOption,\n  rejectPayment,\n  rejectSignature,\n  reset,\n  showWelcome,\n  transaction,\n} from '../../store';\n\nexport const ACTION_CREATOR = {\n  [ACTION.ACCEPT_PAYMENT]: acceptPayment,\n  [ACTION.ACCEPT_SIGNATURE]: acceptSignature,\n  [ACTION.DISCONNECT]: disconnect,\n  [ACTION.IDENTIFY]: identify,\n  [ACTION.INVOKE_INPUT_OPTION]: invokeInputOption,\n  [ACTION.REJECT_PAYMENT]: rejectPayment,\n  [ACTION.REJECT_SIGNATURE]: rejectSignature,\n  [ACTION.RESET]: reset,\n  [ACTION.SHOW_WELCOME]: showWelcome,\n  [ACTION.TRANSACTION]: transaction,\n};\n\nexport const MODE = {\n  TRANSACTION: 'TRANSACTION',\n  HISTORY: 'HISTORY',\n};\n\nexport const MODE_TEXT = {\n  [MODE.TRANSACTION]: 'Keypad',\n  [MODE.HISTORY]: 'History',\n};\n","import { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.ACCEPT_PAYMENT}` });\n    dispatch(setStatus('Accepting payment...'));\n    dispatch(setActions());\n\n    const connector = selectConnector(getState());\n    connector.acceptPayment(action.payload.payment);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { setSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.ACCEPT_SIGNATURE}` });\n    dispatch(setStatus('Accepting signature...'));\n    dispatch(setActions());\n    dispatch(setSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.acceptSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { selectFriendlyId } from '../configuration/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.IDENTIFY}` });\n    dispatch(setStatus('Identifying...'));\n    dispatch(\n      setActions([\n        { type: ACTION.SHOW_WELCOME, payload: { description: 'OK' } },\n        { type: ACTION.DISCONNECT, payload: { description: 'Cancel' } },\n      ])\n    );\n\n    const state = getState();\n    const connector = selectConnector(state);\n    const friendlyId = selectFriendlyId(state);\n\n    connector.showMessage(`${friendlyId} connected`);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.INVOKE_INPUT_OPTION}` });\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.InputOption();\n    request.setDescription(action.payload.description);\n    request.setKeyPress(action.payload.keyPress);\n    connector.invokeInputOption(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.REJECT_PAYMENT}` });\n    dispatch(setStatus('Rejecting payment...'));\n    dispatch(setActions());\n\n    const connector = selectConnector(getState());\n    connector.rejectPayment(action.payload.payment, action.payload.challenges[0]);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { setSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.REJECT_SIGNATURE}` });\n    dispatch(setStatus('Rejecting signature...'));\n    dispatch(setActions());\n    dispatch(setSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.rejectSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.RESET}` });\n    dispatch(setStatus('Resetting...'));\n    dispatch(setActions());\n\n    const connector = selectConnector(getState());\n    connector.resetDevice();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { setError } from '../error';\nimport { ACTION } from '../../common/constants';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.SHOW_WELCOME}` });\n    dispatch(setStatus('Ready'));\n    dispatch(setActions([{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }]));\n\n    const connector = selectConnector(getState());\n    connector.showWelcomeScreen();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { createSelector } from 'reselect';\nimport { selectConnector } from '../../store';\n\nexport const selectVisible = createSelector(selectConnector, connector => !!connector);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectSignatureBounds, selectSignatureLines } from '../../store';\n\nexport default ({ width = 250, ...other }) => {\n  const bounds = useSelector(selectSignatureBounds);\n  const lines = useSelector(selectSignatureLines);\n\n  if (!lines.length) return null;\n\n  return (\n    <div className=\"Signature\">\n      <svg viewBox={bounds} width={width} {...other}>\n        {lines.map((points, i) => (\n          <polyline key={i} points={points} fill=\"none\" stroke=\"black\" />\n        ))}\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { sentenceCase } from 'change-case';\n\nimport { currency } from '../../common';\nimport { selectStatus, selectBuffer, selectActiveTransactionType, selectActiveTransactionAmount } from '../../store';\nimport Signature from './Signature';\n\nexport default () => {\n  const status = useSelector(selectStatus);\n  const buffer = useSelector(selectBuffer);\n  const tranType = useSelector(selectActiveTransactionType);\n  const tranAmount = useSelector(selectActiveTransactionAmount);\n\n  return (\n    <div className=\"Screen alert alert-secondary\">\n      {!!tranAmount && (\n        <div className=\"Transaction d-flex justify-content-between bg-white rounded-top border-bottom border-secondary\">\n          <div className=\"font-italic\">{sentenceCase(tranType)}</div>\n          <div className=\"font-weight-bold\">{currency(tranAmount)}</div>\n        </div>\n      )}\n      {!buffer && <div>{status}</div>}\n      <Signature />\n      {buffer && <div className=\"text-muted\">{buffer}</div>}\n      {buffer && <h3 className=\"text-right\">{currency(buffer)}</h3>}\n    </div>\n  );\n};\n","import React, { forwardRef, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { sentenceCase } from 'change-case';\n\nexport default forwardRef(\n  ({ action, height, color, keyCodes, disabled, onClick, moreActions, onMoreClick, children, ...other }, ref) => {\n    const [show, setShow] = useState(false);\n    useEffect(() => {\n      if (show) {\n        const hide = () => setShow(false);\n        document.addEventListener('click', hide);\n        document.addEventListener('touch', hide);\n        document.addEventListener('keydown', hide);\n        return () => {\n          document.removeEventListener('click', hide);\n          document.removeEventListener('touch', hide);\n          document.removeEventListener('keydown', hide);\n        };\n      }\n      return undefined;\n    }, [show]);\n\n    useEffect(() => {\n      if (!disabled) {\n        const keydown = event => {\n          if (keyCodes.includes(event.code)) {\n            event.preventDefault();\n            onClick();\n            return false;\n          }\n          return true;\n        };\n        document.addEventListener('keydown', keydown);\n\n        return () => document.removeEventListener('keydown', keydown);\n      }\n      return undefined;\n    }, [disabled, keyCodes, onClick]);\n\n    const value = action ? sentenceCase(action.payload?.description || action?.type || '') : children;\n\n    if (moreActions?.length) {\n      return (\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-dark action rounded-left\"\n            onClick={onClick}\n            disabled={disabled}\n            {...other}\n            title={`Shortcut keys: ${keyCodes.join(', ')}`}\n          >\n            {value || <span>&nbsp;</span>}\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-dark action dropdown-toggle\"\n            onClick={() => setShow(!show)}\n            disabled={disabled}\n          ></button>\n          <div className={classNames('dropdown-menu bg-dark', { show })}>\n            {moreActions.map((a, i) => (\n              <button key={i} className=\"dropdown-item bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                {a.payload?.description || a.type}\n              </button>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        style={{ height }}\n        className={classNames('btn', `text-${color || 'light'}`, {\n          action,\n          'btn-dark': action,\n          'btn-outline-dark': !action,\n        })}\n        disabled={disabled}\n        onClick={onClick}\n        title={`Shortcut keys: ${keyCodes.join(', ')}`}\n        {...other}\n      >\n        {value}\n      </button>\n    );\n  }\n);\n","import React, { useMemo, useCallback, useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  selectTransactionAction,\n  selectNonTransactionActions,\n  appendBuffer,\n  resetBuffer,\n  undoBuffer,\n  transaction,\n} from '../../store';\nimport Key from './Key';\nimport { ACTION_CREATOR } from './constants';\nimport { ACTION } from '../../common';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const actions = useSelector(selectNonTransactionActions);\n  const transactionAction = useSelector(selectTransactionAction);\n\n  const [actionClicked, setActionClicked] = useState(false);\n  const keysDisabled = useMemo(() => !transactionAction || actionClicked, [transactionAction, actionClicked]);\n\n  const onAction = useCallback(\n    async action => {\n      setActionClicked(true);\n      if (action.type === ACTION.INVOKE_INPUT_OPTION) setTimeout(() => setActionClicked(false), 250);\n      await dispatch(ACTION_CREATOR[action.type](action));\n    },\n    [dispatch, setActionClicked]\n  );\n\n  const actionHandler = action => async () => onAction(action);\n\n  useEffect(() => {\n    if (actions.length) setActionClicked(false);\n  }, [setActionClicked, actions]);\n\n  const keyRef = useRef();\n  const [keyHeight, setKeyHeight] = useState();\n  useEffect(() => {\n    if (keyRef.current) {\n      setKeyHeight(keyRef.current.offsetWidth);\n    }\n  }, [keyRef, setKeyHeight]);\n\n  const [action1, action2, ...moreActions] = actions;\n\n  return (\n    <div className=\"Keys\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action1 || {}}\n            disabled={!action1 || actionClicked}\n            keyCodes={['F1', 'NumpadDivide']}\n            onClick={actionHandler(action1)}\n          />\n        </div>\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action2 || {}}\n            disabled={!action2 || actionClicked}\n            keyCodes={['F2', 'NumpadMultiply']}\n            onClick={actionHandler(action2)}\n            moreActions={moreActions}\n            onMoreClick={action => onAction(action)}\n          />\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            ref={keyRef}\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad7', 'Digit7']}\n            onClick={() => dispatch(appendBuffer('7'))}\n          >\n            7\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad8', 'Digit8']} onClick={() => dispatch(appendBuffer('8'))}>\n            8\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad9', 'Digit9']} onClick={() => dispatch(appendBuffer('9'))}>\n            9\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"danger\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadSubtract', 'Escape']}\n            onClick={() => dispatch(resetBuffer())}\n          >\n            X\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad4', 'Digit4']}\n            onClick={() => dispatch(appendBuffer('4'))}\n          >\n            4\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad5', 'Digit5']} onClick={() => dispatch(appendBuffer('5'))}>\n            5\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad6', 'Digit6']} onClick={() => dispatch(appendBuffer('6'))}>\n            6\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"warning\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadAdd', 'Backspace', 'Delete']}\n            onClick={() => dispatch(undoBuffer())}\n          >\n            &lt;\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-9\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-4 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad1', 'Digit1']}\n                onClick={() => dispatch(appendBuffer('1'))}\n              >\n                1\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad2', 'Digit2']} onClick={() => dispatch(appendBuffer('2'))}>\n                2\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad3', 'Digit3']} onClick={() => dispatch(appendBuffer('3'))}>\n                3\n              </Key>\n            </div>\n          </div>\n          <div className=\"row no-gutters\">\n            <div className=\"col-8 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad0', 'Digit0']}\n                onClick={() => dispatch(appendBuffer('0'))}\n              >\n                0\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key\n                disabled={keysDisabled}\n                keyCodes={['NumpadDecimal', 'Period']}\n                onClick={() => dispatch(appendBuffer('00'))}\n              >\n                00\n              </Key>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"success\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadEnter', 'Enter']}\n            onClick={() => dispatch(transaction())}\n          >\n            O\n          </Key>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { disconnect } from '../../store';\nimport { MODE, MODE_TEXT } from './constants';\n\nexport default ({ mode, setMode }) => {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const toggle = useCallback(() => setShow(!show), [show, setShow]);\n\n  const power = useCallback(() => dispatch(disconnect()), [dispatch]);\n\n  useEffect(() => {\n    if (show) {\n      const hide = () => setShow(false);\n      document.addEventListener('click', hide);\n      document.addEventListener('touch', hide);\n      document.addEventListener('keydown', hide);\n\n      return () => {\n        document.removeEventListener('click', hide);\n        document.removeEventListener('touch', hide);\n        document.removeEventListener('keydown', hide);\n      };\n    }\n    return undefined;\n  }, [show, setShow]);\n\n  return (\n    <div className=\"dropdown\">\n      <button type=\"button\" className=\"btn btn-sm btn-outline-dark text-light\" onClick={toggle}>\n        ☰\n      </button>\n      <div className={classNames('dropdown-menu dropdown-menu-right', { show })}>\n        {Object.values(MODE).map(m => (\n          <button key={m} className=\"dropdown-item\" type=\"button\" onClick={() => setMode(m)}>\n            <div className=\"custom-control custom-checkbox\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id={`chkMode-${m}`}\n                checked={m === mode}\n                readOnly\n              />\n              <label className=\"custom-control-label\" htmlFor={`chkMode-${m}`}>\n                {MODE_TEXT[m]}\n              </label>\n            </div>\n          </button>\n        ))}\n        <div className=\"dropdown-divider\" />\n        <button className=\"dropdown-item\" type=\"button\" onClick={power}>\n          Disconnect\n        </button>\n      </div>\n    </div>\n  );\n};\n","export default ({ amount, tipAmount, payment }) => {\n  const start = (amount || 0) + (tipAmount || 0);\n  const final = (payment?.amount || 0) + (payment?.tipAmount || 0);\n  const partial = start > final;\n  const remaining = start - final;\n  return { start, final, partial, remaining };\n};\n","import React from 'react';\nimport { sentenceCase } from 'change-case';\nimport { useDispatch } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { currency, card, TRANSACTION } from '../../common';\nimport { voidPayment, setError, setBuffer, transaction as doTransaction, hideTransaction } from '../../store';\nimport parseAmounts from './parseAmounts';\n\nexport default ({ transaction }) => {\n  const { type, payment } = transaction || {};\n  const dispatch = useDispatch();\n  const { removeToast } = useToasts();\n\n  const amounts = parseAmounts(transaction);\n\n  const onRemaining = async () => {\n    try {\n      await dispatch(setBuffer(amounts.remaining));\n      await dispatch(doTransaction());\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  };\n\n  const onVoid = async () => {\n    try {\n      removeToast(transaction.id);\n      await dispatch(hideTransaction(transaction.id));\n      await dispatch(voidPayment(payment));\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  };\n\n  return (\n    <div className=\"Transaction\">\n      {transaction.type !== TRANSACTION.VOID && amounts.partial && (\n        <div className=\"alert alert-warning\">\n          <h6 className=\"alert-heading\">Partial Payment</h6>\n          <div>Remaining: {currency(amounts.remaining)}</div>\n        </div>\n      )}\n      <h5>{sentenceCase(type || 'Transaction')} Details</h5>\n      <table className=\"table table-sm small mb-0\">\n        <tbody>\n          <tr>\n            <th>Payment ID:</th>\n            <td>{payment.id}</td>\n          </tr>\n          <tr>\n            <th>External ID:</th>\n            <td>{payment.externalPaymentId}</td>\n          </tr>\n          <tr>\n            <th>Order ID:</th>\n            <td>{payment.order.id}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>Total:</th>\n              <td>{currency(payment.amount + payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>Amount:</th>\n            <td>{currency(payment.amount)}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>Tip:</th>\n              <td>{currency(payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>Card:</th>\n            <td>\n              <div>{payment.cardType}</div>\n              <div>{card(payment.cardTransaction)}</div>\n              {payment.cardTransaction.cardholderName && <div>{payment.cardTransaction.cardholderName}</div>}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      {transaction.type === TRANSACTION.SALE && (\n        <div>\n          {amounts.partial && (\n            <button className=\"btn btn-primary btn-sm mr-1\" onClick={onRemaining}>\n              Process {currency(amounts.remaining)}\n            </button>\n          )}\n          <button key=\"void\" className=\"btn btn-danger btn-sm\" onClick={onVoid}>\n            Void\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { hideTransaction } from '../../store';\nimport { TRANSACTION } from '../../common';\nimport parseAmounts from './parseAmounts';\nimport Transaction from './Transaction';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { addToast } = useToasts();\n\n  return transaction => {\n    const amounts = parseAmounts(transaction);\n\n    let appearance;\n    if (transaction.type === TRANSACTION.VOID) appearance = 'info';\n    else if (amounts.final >= amounts.start) appearance = 'success';\n    else if (amounts.final < amounts.start) appearance = 'warning';\n    else appearance = 'info';\n\n    addToast(<Transaction transaction={transaction} />, {\n      id: transaction.id,\n      appearance,\n      autoDismiss: false,\n      onDismiss: () => {\n        dispatch(hideTransaction(transaction.id));\n      },\n    });\n  };\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { format, compareDesc } from 'date-fns';\n\nimport { selectPaymentTransactions } from '../../store';\nimport { currency } from '../../common';\nimport { useShowTransaction } from '../Transaction';\n\nconst parseAmount = ({ amount, tipAmount, payment }) =>\n  currency(payment ? payment.amount + payment.tipAmount : amount + tipAmount);\n\nconst parseTimestamp = ({ timestamp }) => (timestamp ? format(timestamp, 'M/d h:mm a') : '??');\n\nexport default () => {\n  const transactions = useSelector(selectPaymentTransactions);\n  const showTransaction = useShowTransaction();\n\n  const sortedTransactions = useMemo(() => transactions.sort((a, b) => compareDesc(a.timestamp, b.timestamp)), [\n    transactions,\n  ]);\n\n  return (\n    <div className=\"History\">\n      <table className=\"table table-sm table-hover table-secondary table-striped\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Type</th>\n            <th className=\"text-right\">Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedTransactions.map(transaction => (\n            <tr key={transaction.id} role=\"button\" onClick={() => showTransaction(transaction)}>\n              <td>{parseTimestamp(transaction)}</td>\n              <td>{transaction.type}</td>\n              <td className=\"text-right\">{parseAmount(transaction)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Logo } from '../SVG';\nimport { MODE } from './constants';\nimport { selectVisible } from './selectors';\nimport Screen from './Screen';\nimport Keys from './Keys';\nimport Menu from './Menu';\nimport History from './History';\nimport './styles.scss';\n\nexport default () => {\n  const visible = useSelector(selectVisible);\n\n  const [mode, setMode] = useState(MODE.TRANSACTION);\n\n  if (!visible) return null;\n\n  return (\n    <div className=\"Keypad card\">\n      <div className=\"card-header\">\n        <Logo />\n        <h3>Virtual Keypad</h3>\n        <Menu mode={mode} setMode={setMode} />\n      </div>\n      <div className=\"card-body\">\n        {mode === MODE.TRANSACTION && <Screen />}\n        {mode === MODE.TRANSACTION && <Keys />}\n        {mode === MODE.HISTORY && <History />}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nexport default ({ error }) => {\n  const { message, stack } = error;\n  const [expanded, setExpanded] = useState(false);\n\n  const expand = () => {\n    document.querySelector('.react-toast-notifications__container').classList.add('expanded');\n    setExpanded(true);\n  };\n\n  useEffect(() => {\n    return () => {\n      const remaining = document.querySelectorAll('.Error.expanded').length - (expanded ? 1 : 0);\n      if (!remaining) {\n        document.querySelector('.react-toast-notifications__container').classList.remove('expanded');\n      }\n    };\n  }, [expanded]);\n\n  return (\n    <div className={classNames('Error', { expanded })}>\n      <h5>{message}</h5>\n      {!!stack && !expanded && (\n        <button className=\"btn btn-link btn-sm\" onClick={expand}>\n          Show details...\n        </button>\n      )}\n      {!!stack && expanded && (\n        <pre className=\"mb-0\">\n          <code>{stack}</code>\n        </pre>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Configuration from '../Configuration';\nimport Devices from '../Devices/Devices';\nimport Keypad from '../Keypad';\nimport { useError } from '../Error';\nimport { useTransactions } from '../Transaction';\nimport usePreventDoubleTapZoom from './usePreventDoubleTapZoom';\nimport './styles.scss';\n\nexport default () => {\n  usePreventDoubleTapZoom();\n  useError();\n  useTransactions();\n\n  return (\n    <div className={classNames('App container maxwidth')}>\n      <Configuration />\n      <Devices />\n      <Keypad />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport default ({ ms = 500 } = {}) =>\n  useEffect(() => {\n    let expires = 0;\n    const handler = event => {\n      if (event.touches.length === 1) {\n        const now = Date.now();\n        if (event.touches.length === 1 && now > expires) {\n          event.preventDefault();\n          // Trigger a fake click for the tap we just prevented\n          event.target.click();\n        }\n        expires = now + ms;\n      }\n    };\n\n    document.body.addEventListener('touchstart', handler, { passive: false });\n\n    return () => document.body.removeEventListener('touchstart', handler, { passive: false });\n  }, [ms]);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { selectError, setError } from '../../store';\nimport Error from './Error';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    if (error.message) {\n      addToast(<Error error={error} />, {\n        appearance: 'error',\n        autoDismiss: true,\n        onDismiss: () => {\n          dispatch(setError());\n        },\n      });\n    }\n  }, [addToast, dispatch, error]);\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectVisiblePaymentTransactions } from '../../store';\nimport useShowTransaction from './useShowTransaction';\n\nexport default () => {\n  const transactions = useSelector(selectVisiblePaymentTransactions);\n  const showTransaction = useShowTransaction();\n\n  useEffect(() => {\n    transactions.forEach(showTransaction);\n  }, [transactions, showTransaction]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { ToastProvider } from 'react-toast-notifications';\n\nimport store from './store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <ToastProvider placement=\"bottom-right\">\n        <App />\n      </ToastProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}