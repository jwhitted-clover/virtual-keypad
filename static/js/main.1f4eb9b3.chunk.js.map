{"version":3,"sources":["store/store.js","common/constants.js","store/actions/initialState.js","store/configuration/initialState.js","store/connection/initialState.js","store/devices/initialState.js","store/error/initialState.js","store/payment/initialState.js","store/signature/initialState.js","store/transaction/initialState.js","common/api.js","common/fetchDevices.js","common/format.js","store/transactions/initialState.js","store/rootReducer.js","store/actions/reducer.js","store/actions/constants.js","store/buffer/reducer.js","store/buffer/initialState.js","store/buffer/constants.js","store/configuration/reducer.js","store/configuration/constants.js","store/connection/reducer.js","store/connection/constants.js","store/devices/reducer.js","store/devices/constants.js","store/error/reducer.js","store/error/constants.js","store/payment/reducer.js","store/payment/constants.js","store/signature/reducer.js","store/signature/constants.js","store/status/reducer.js","store/status/initialState.js","store/status/constants.js","store/transaction/reducer.js","store/transaction/constants.js","store/transactions/reducer.js","store/transactions/constants.js","store/configuration/selectors.js","store/error/actions.js","store/actions/actions.js","store/connection/selectors.js","store/status/actions.js","store/signature/actions.js","common/persist.js","store/configuration/actions.js","store/devices/actions.js","store/thunks/configure.js","store/devices/selectors.js","store/connection/actions.js","store/thunks/connect.js","store/transaction/actions.js","store/thunks/disconnect.js","store/error/selectors.js","store/buffer/selectors.js","store/buffer/actions.js","store/transactions/actions.js","store/transactions/selectors.js","store/thunks/transaction.js","store/payment/selectors.js","store/thunks/voidPayment.js","store/createStore.js","store/actions/selectors.js","store/signature/selectors.js","store/status/selectors.js","store/transaction/selectors.js","components/Configuration/selectors.js","components/SVG/Logo.js","components/SVG/Power.js","components/Configuration/Configuration.js","components/Devices/selectors.js","components/Devices/Device.js","components/Devices/Devices.js","components/Keypad/selectors.js","components/Keypad/Signature.js","components/Keypad/Screen.js","components/Keypad/Key.js","components/Keypad/constants.js","store/thunks/acceptPayment.js","store/thunks/acceptSignature.js","store/thunks/identify.js","store/thunks/invokeInputOption.js","store/thunks/rejectPayment.js","store/thunks/rejectSignature.js","store/thunks/reset.js","store/thunks/showWelcome.js","components/Keypad/Keys.js","components/Keypad/Keypad.js","components/Error/Error.js","components/Transaction/parseAmounts.js","components/Transaction/Transaction.js","components/App/App.js","components/App/usePreventDoubleTapZoom.js","components/Error/useError.js","components/Transaction/useTransactions.js","serviceWorker.js","index.js"],"names":["initialState","ACTION","APP","APP_NAME","APP_BY_NAME","Object","fromEntries","entries","map","arr","reverse","TRANSACTION","cloverDomain","merchantId","accessToken","friendlyId","autoConnect","connector","connected","list","selected","message","stack","id","externalId","orderId","amount","tipAmount","card","type","first6","last4","name","width","height","strokes","deviceApps","deviceId","fetch","URL","toString","method","headers","accept","then","r","json","devices","appsReducer","o","a","app","appName","api","elements","Promise","all","apps","device","i","applications","reduce","currency","value","n","isNaN","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","rootReducer","combineReducers","actions","state","payload","found","some","description","inputOptions","io","buffer","replace","slice","length","configuration","loading","connection","dispose","e","request","Clover","remotepay","RetrieveDeviceStatusRequest","setSendLastMessage","retrieveDeviceStatus","error","payment","externalPaymentId","order","cardTransaction","cardType","cardholderName","success","signature","status","challenges","transaction","transactions","visible","newState","cur","selectConfiguration","selectFriendlyId","createSelector","selectAutoConnect","selectConfigurationLoading","setError","setActions","selectConnection","selectConnector","setStatus","text","setSignature","localStorage","setItem","JSON","stringify","initialDevices","setConfigurationLoading","setConfiguration","setDevices","setDeviceId","dispatch","getState","persist","fetchDevices","Error","selectRawDevices","selectDeviceId","selectDevices","sort","b","setConnector","resolve","setTimeout","find","d","factory","CloverConnectorFactoryBuilder","createICloverConnectorFactory","FACTORY_VERSION","VERSION_12","createICloverConnector","WebSocketCloudCloverDeviceConfigurationBuilder","setCloverServer","setFriendlyId","build","Listener","keys","getPrototypeOf","forEach","ICloverConnectorListener","listener","addCloverConnectorListener","initializeConnection","setTransactionAmount","setTransactionType","selectError","selectBuffer","appendBuffer","updateTransaction","selectTransactions","values","selectPaymentTransactions","filter","t","selectVisiblePaymentTransactions","action","CloverID","getNewId","SaleRequest","setAmount","setExternalId","setCardEntryMethods","CardEntryMethods","DEFAULT","CARD_ENTRY_METHOD_MANUAL","sale","selectPayment","repeat","join","trim","VoidPaymentRequest","setPaymentId","setOrderId","setVoidReason","VoidReason","USER_CANCEL","voidPayment","parse","getItem","console","warn","store","middleware","applyMiddleware","thunk","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","enhancer","f","createStore","compose","config","configure","selectActions","selectTransactionAction","selectNonTransactionActions","selectSignature","selectSignatureBounds","bounds","points","flat","point","x","X","y","Y","Math","min","max","Infinity","selectSignatureLines","selectStatus","selectTransaction","selectTransactionAmount","selectTransactionType","selectVisible","size","className","xmlns","viewBox","aria-labelledby","role","data-name","transform","fill","style","useDispatch","useSelector","qs","QS","location","search","hash","useState","setCloverDomain","merchant_id","setMerchantId","access_token","setAccessToken","setAutoConnect","submitting","setSubmitting","disabled","useMemo","submit","useCallback","event","preventDefault","reset","onSubmit","onReset","Logo","onChange","target","checked","htmlFor","active","onClick","cloud","cloudStatus","key","classNames","productName","serial","aria-label","title","setDisabled","select","connect","Device","other","lines","stroke","tranType","tranAmount","sentenceCase","Signature","forwardRef","ref","color","keyCodes","moreActions","onMoreClick","children","show","setShow","useEffect","hide","document","addEventListener","removeEventListener","keydown","includes","code","ACTION_CREATOR","acceptPayment","VerifySignatureRequest","setPayment","acceptSignature","disconnect","showMessage","InputOption","setDescription","setKeyPress","keyPress","invokeInputOption","rejectPayment","rejectSignature","resetDevice","showWelcomeScreen","transactionAction","actionClicked","setActionClicked","keysDisabled","onAction","actionHandler","keyRef","useRef","keyHeight","setKeyHeight","current","offsetWidth","action1","action2","Key","click","Power","Screen","Keys","expanded","setExpanded","querySelectorAll","querySelector","classList","remove","add","start","final","partial","remaining","removeToast","useToasts","amounts","parseAmounts","onRemaining","doTransaction","onVoid","ms","expires","handler","touches","now","Date","body","passive","usePreventDoubleTapZoom","addToast","appearance","autoDismiss","onDismiss","useError","Transaction","useTransactions","Configuration","Devices","Keypad","Boolean","hostname","match","ReactDOM","render","StrictMode","placement","App","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1f4eb9b3.chunk.js","sourcesContent":["import { STORAGE } from '../common/constants';\nimport createStore from './createStore';\nimport { selectAutoConnect, selectConfiguration } from './configuration/selectors';\nimport { configure } from './thunks';\n\nlet initialState;\ntry {\n  initialState = JSON.parse(localStorage.getItem(STORAGE));\n} catch (e) {\n  console.warn('Failed to initialize state from storage', e);\n} finally {\n  initialState = initialState || undefined;\n}\n\nconst store = createStore(initialState);\n\nconst state = store.getState();\nif (selectAutoConnect(state)) {\n  const config = selectConfiguration(state);\n  store.dispatch(configure(config));\n}\n\nexport default store;\n","export const ACTION = {\n  ACCEPT_PAYMENT: 'ACCEPT_PAYMENT',\n  ACCEPT_SIGNATURE: 'ACCEPT_SIGNATURE',\n  DISCONNECT: 'DISCONNECT',\n  IDENTIFY: 'IDENTIFY',\n  INVOKE_INPUT_OPTION: 'INVOKE_INPUT_OPTION',\n  REJECT_PAYMENT: 'REJECT_PAYMENT',\n  REJECT_SIGNATURE: 'REJECT_SIGNATURE',\n  RESET: 'RESET',\n  SHOW_WELCOME: 'SHOW_WELCOME',\n  TRANSACTION: 'TRANSACTION',\n  VOID_PAYMENT: 'VOID_PAYMENT',\n};\n\nexport const APP = {\n  CLOUD_PAY_DISPLAY: 'CLOUD_PAY_DISPLAY',\n};\n\nexport const APP_NAME = {\n  [APP.CLOUD_PAY_DISPLAY]: 'Cloud Pay Display',\n};\n\nexport const APP_BY_NAME = Object.fromEntries(Object.entries(APP_NAME).map(arr => arr.reverse()));\n\nexport const REMOTE_APPLICATION_ID = 'virtual-keypad';\n\nexport const STORAGE = 'clover/virtual-keypad';\n\nexport const TRANSACTION = {\n  SALE: 'SALE',\n  REFUND: 'REFUND',\n  VOID: 'VOID',\n};\n","export default [];\n","export default {\n  cloverDomain: '',\n  merchantId: '',\n  accessToken: '',\n  friendlyId: '',\n  autoConnect: false,\n};\n","export default {\n  connector: null,\n  connected: false,\n};\n","export default {\n  list: [],\n  selected: '',\n};\n","export default {\n  message: null,\n  stack: null,\n};\n","export default {\n  id: '',\n  externalId: '',\n  orderId: '',\n  amount: 0,\n  tipAmount: 0,\n  card: {\n    type: '',\n    first6: '',\n    last4: '',\n    name: '',\n  },\n};\n","export default {\n  width: 0,\n  height: 0,\n  strokes: [],\n};\n","export default {\n  amount: 0,\n  type: '',\n};\n","export const deviceApps = ({ cloverDomain, merchantId, deviceId, accessToken }) =>\n  fetch(\n    new URL(\n      `/v2/merchant/${merchantId}/device/${deviceId}/current_apps?access_token=${accessToken}`,\n      cloverDomain\n    ).toString(),\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n    }\n  ).then(r => r.json());\n\nexport const devices = ({ cloverDomain, merchantId, accessToken }) =>\n  fetch(new URL(`/v3/merchants/${merchantId}/devices?access_token=${accessToken}`, cloverDomain).toString(), {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    },\n  }).then(r => r.json());\n","import { APP_BY_NAME } from './constants';\nimport * as api from './api';\n\nconst appsReducer = (o, a) => {\n  const app = APP_BY_NAME[a.appName];\n  return app ? { ...o, [app]: true } : o;\n};\n\nexport default async ({ cloverDomain, merchantId, accessToken }) => {\n  const { elements: devices } = await api.devices({ cloverDomain, merchantId, accessToken });\n  const apps = await Promise.all(\n    devices.map(({ id: deviceId }) =>\n      api.deviceApps({\n        cloverDomain,\n        merchantId,\n        accessToken,\n        deviceId,\n      })\n    )\n  );\n  return devices.map((device, i) => ({\n    ...device,\n    apps: apps[i].applications.reduce(appsReducer, {}),\n  }));\n};\n","export const currency = value => {\n  const n = +value;\n  if (!isNaN(n) && n >= 0) {\n    return (n / 100).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  return '';\n};\n\nexport const card = ({ first6, last4 }) => [first6, '*'.repeat(6), last4].join('').replace(/.{4}/g, ' $&').trim();\n","export default {};\n","import { combineReducers } from 'redux';\nimport actions from './actions/reducer';\nimport buffer from './buffer/reducer';\nimport configuration from './configuration/reducer';\nimport connection from './connection/reducer';\nimport devices from './devices/reducer';\nimport error from './error/reducer';\nimport payment from './payment/reducer';\nimport signature from './signature/reducer';\nimport status from './status/reducer';\nimport transaction from './transaction/reducer';\nimport transactions from './transactions/reducer';\n\nconst rootReducer = combineReducers({\n  actions,\n  buffer,\n  configuration,\n  connection,\n  devices,\n  error,\n  payment,\n  signature,\n  status,\n  transaction,\n  transactions,\n});\n\nexport default rootReducer;\n","import { ACTION } from '../../common/constants';\nimport * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ACTIONS_APPEND: {\n      const found = state.some(a => a.type === payload.type && a.payload?.description === payload.payload?.description);\n      return found ? state : [...state, payload];\n    }\n    case CONST.ACTIONS_SET:\n      return payload || [];\n    case '@@connector/onDeviceReady':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onResetDeviceResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onDeviceActivityStart':\n      return payload.inputOptions.map(io => ({ type: ACTION.INVOKE_INPUT_OPTION, payload: io }));\n    case '@@connector/onSaleResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onVoidPaymentResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onConfirmPaymentRequest':\n      return [\n        { type: ACTION.ACCEPT_PAYMENT, payload: { description: 'Accept', ...payload } },\n        { type: ACTION.REJECT_PAYMENT, payload: { description: 'Reject', ...payload } },\n      ];\n    case '@@connector/onVerifySignatureRequest':\n      return [\n        { type: ACTION.ACCEPT_SIGNATURE, payload: { description: 'Accept', ...payload } },\n        { type: ACTION.REJECT_SIGNATURE, payload: { description: 'Reject', ...payload } },\n      ];\n    default:\n      return state;\n  }\n};\n","export const ACTIONS_SET = 'ACTIONS_SET';\nexport const ACTIONS_APPEND = 'ACTIONS_APPEND';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.BUFFER_RESET:\n      return initialState;\n    case CONST.BUFFER_APPEND:\n      return (state + payload).replace(/^0+/, '').slice(0, 7);\n    case CONST.BUFFER_SET:\n      return payload;\n    case CONST.BUFFER_UNDO:\n      return state.length ? state.slice(0, state.length - 1) : '';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const BUFFER_APPEND = 'BUFFER_APPEND';\nexport const BUFFER_RESET = 'BUFFER_RESET';\nexport const BUFFER_SET = 'BUFFER_SET';\nexport const BUFFER_UNDO = 'BUFFER_UNDO';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONFIGURATION_LOADING:\n      return {\n        ...state,\n        loading: payload || undefined,\n      };\n    case CONST.CONFIGURATION_SET:\n      return {\n        ...state,\n        cloverDomain: payload.cloverDomain || '',\n        merchantId: payload.merchantId || '',\n        accessToken: payload.accessToken || '',\n        friendlyId: payload.friendlyId || '',\n        autoConnect: payload.autoConnect || false,\n      };\n    default:\n      return state;\n  }\n};\n","export const CONFIGURATION_LOADING = 'CONFIGURATION_LOADING';\nexport const CONFIGURATION_SET = 'CONFIGURATION_SET';\n","import Clover from 'remote-pay-cloud';\n\nimport * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONNECTION_SET_CONNECTOR:\n      try {\n        if (state?.connector) {\n          state.connector.dispose();\n        }\n      } catch (e) {\n        // Do nothing\n      }\n\n      return {\n        ...state,\n        connector: payload,\n        connected: false,\n      };\n    case '@@connector/onDeviceDisconnected':\n      return { ...state, connected: false };\n    case '@@connector/onDeviceReady': {\n      const request = new Clover.remotepay.RetrieveDeviceStatusRequest();\n      request.setSendLastMessage(true);\n      state.connector.retrieveDeviceStatus(request);\n\n      return { ...state, connected: true };\n    }\n    default:\n      return state;\n  }\n};\n","export const CONNECTION_SET_CONNECTOR = 'CONNECTION_SET_CONNECTOR';\nexport const CONNECTION_SET_CONNECTED = 'CONNECTION_SET_CONNECTED';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.DEVICES_SET_SELECTED:\n      return {\n        ...state,\n        selected: payload || '',\n      };\n    case CONST.DEVICES_SET_LIST:\n      return {\n        ...state,\n        list: payload || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const DEVICES_SET_LIST = 'DEVICES_SET_LIST';\nexport const DEVICES_SET_SELECTED = 'DEVICES_SET_SELECTED';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ERROR_SET:\n      return {\n        ...state,\n        message: payload.message,\n        stack: payload.stack,\n      };\n    case '@@connector/onDeviceError':\n      return {\n        ...state,\n        message: `Device Error ${payload.message}`,\n        stack: null,\n      };\n    default:\n      return state;\n  }\n};\n","export const ERROR_SET = 'ERROR_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.PAYMENT_SET:\n      return {\n        id: payload?.id || '',\n        externalId: payload?.externalPaymentId || '',\n        orderId: payload?.order?.id || '',\n        amount: payload?.amount || 0,\n        tipAmount: payload?.tipAmount || 0,\n        card: {\n          type: payload?.cardTransaction?.cardType || '',\n          first6: payload?.cardTransaction?.first6 || '',\n          last4: payload?.cardTransaction?.last4 || '',\n          name: payload?.cardTransaction?.cardholderName || '',\n        },\n      };\n    case '@@connector/onSaleResponse':\n      if (payload.success) {\n        return {\n          id: payload?.payment?.id || '',\n          externalId: payload?.payment?.externalPaymentId || '',\n          orderId: payload?.payment?.order?.id || '',\n          amount: payload?.payment?.amount || 0,\n          tipAmount: payload?.payment?.tipAmount || 0,\n          card: {\n            type: payload?.payment?.cardTransaction?.cardType || '',\n            first6: payload?.payment?.cardTransaction?.first6 || '',\n            last4: payload?.payment?.cardTransaction?.last4 || '',\n            name: payload?.payment?.cardTransaction?.cardholderName || '',\n          },\n        };\n      }\n      return initialState;\n    case '@@connector/onResetDeviceResponse':\n      return initialState;\n    default:\n      return state;\n  }\n};\n","export const PAYMENT_SET = 'PAYMENT_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.SIGNATURE_SET:\n      return {\n        width: payload?.width || 0,\n        height: payload?.height || 0,\n        strokes: payload?.strokes || [],\n      };\n    case '@@connector/onVerifySignatureRequest':\n      return {\n        width: payload.signature?.width || 0,\n        height: payload.signature?.height || 0,\n        strokes: payload.signature?.strokes || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const SIGNATURE_SET = 'SIGNATURE_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.STATUS_SET:\n      return payload || '';\n    case '@@connector/onDeviceReady':\n      return 'Ready';\n    case '@@connector/onResetDeviceResponse':\n      return 'Ready';\n    case '@@connector/onDeviceActivityStart':\n      return payload.message;\n    case '@@connector/onSaleResponse':\n      return 'Ready';\n    case '@@connector/onVoidPaymentResponse':\n      return 'Ready';\n    case '@@connector/onConfirmPaymentRequest':\n      return payload.challenges[0].message;\n    case '@@connector/onVerifySignatureRequest':\n      return 'Verify Signature';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const STATUS_SET = 'STATUS_SET';\n","import * as CONST from './constants';\nimport initialState from './initialState';\nimport { ACTION } from '../../common';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.TRANSACTION_ADD_AMOUNT:\n      return {\n        ...state,\n        amount: state.amount + payload,\n      };\n    case CONST.TRANSACTION_SET_AMOUNT:\n      return {\n        ...state,\n        amount: payload,\n      };\n    case CONST.TRANSACTION_SET_TYPE:\n      return {\n        ...state,\n        type: payload,\n      };\n    case CONST.TRANSACTION_RESET:\n      return initialState;\n    case '@@connector/onTipAdded':\n      return {\n        ...state,\n        amount: state.amount + payload.tipAmount,\n      };\n    case '@@connector/onSaleResponse':\n      return initialState;\n    case '@@connector/onVoidPaymentResponse':\n      return initialState;\n    case '@@connector/onResetDeviceResponse':\n      return initialState;\n    case `@@action/${ACTION.TRANSACTION}`:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","export const TRANSACTION_RESET = 'TRANSACTION_RESET';\nexport const TRANSACTION_SET_AMOUNT = 'TRANSACTION_SET_AMOUNT';\nexport const TRANSACTION_ADD_AMOUNT = 'TRANSACTION_ADD_AMOUNT';\nexport const TRANSACTION_SET_TYPE = 'TRANSACTION_SET_TYPE';\n","import * as CONST from './constants';\nimport initialState from './initialState';\nimport { TRANSACTION } from '../../common';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.TRANSACTIONS_HIDE:\n      return {\n        ...state,\n        [payload]: {\n          ...state[payload],\n          visible: false,\n        },\n      };\n    case CONST.TRANSACTIONS_SHOW:\n      return {\n        ...state,\n        [payload]: {\n          ...state[payload],\n          visible: true,\n        },\n      };\n    case CONST.TRANSACTIONS_REMOVE: {\n      const newState = { ...state };\n      delete newState[payload];\n      return newState;\n    }\n    case CONST.TRANSACTIONS_UPDATE: {\n      const cur = state[payload.id] || {};\n\n      return {\n        ...state,\n        [payload.id]: {\n          ...cur,\n          id: payload.id,\n          visible: payload.visible || cur.visible || false,\n          amount: payload.amount || cur.amount || 0,\n          tipAmount: payload.tipAmount || cur.tipAmount || 0,\n          type: payload.type || cur.type || '',\n          payment: payload.payment || cur.payment || null,\n        },\n      };\n    }\n    case '@@connector/onSaleResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          [payload.payment.externalPaymentId]: {\n            ...state[payload.payment.externalPaymentId],\n            id: payload.payment.externalPaymentId,\n            visible: true,\n            type: TRANSACTION.SALE,\n            payment: payload.payment,\n          },\n        };\n      }\n      return state;\n    }\n    case '@@connector/onVoidPaymentResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          [payload.payment.externalPaymentId]: {\n            ...state[payload.payment.externalPaymentId],\n            id: payload.payment.externalPaymentId,\n            visible: true,\n            type: TRANSACTION.VOID,\n            payment: payload.payment,\n          },\n        };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n","export const TRANSACTIONS_REMOVE = 'TRANSACTIONS_REMOVE';\nexport const TRANSACTIONS_UPDATE = 'TRANSACTIONS_UPDATE';\nexport const TRANSACTIONS_SHOW = 'TRANSACTIONS_SHOW';\nexport const TRANSACTIONS_HIDE = 'TRANSACTIONS_HIDE';\n","import { createSelector } from 'reselect';\n\nexport const selectConfiguration = state => state.configuration;\n\nexport const selectFriendlyId = createSelector(selectConfiguration, ({ friendlyId }) => friendlyId || 'Virtual Keypad');\n\nexport const selectAutoConnect = createSelector(selectConfiguration, ({ autoConnect }) => autoConnect || false);\n\nexport const selectConfigurationLoading = createSelector(selectConfiguration, ({ loading }) => loading || false);\n","import * as CONST from './constants';\n\nexport const setError = ({ message, stack } = {}) => ({\n  type: CONST.ERROR_SET,\n  payload: { message, stack },\n});\n","import * as CONST from './constants';\n\nexport const setActions = actions => ({\n  type: CONST.ACTIONS_SET,\n  payload: actions,\n});\n\nexport const appendAction = action => ({\n  type: CONST.ACTIONS_APPEND,\n  payload: action,\n});\n","import { createSelector } from 'reselect';\n\nexport const selectConnection = state => state.connection;\n\nexport const selectConnector = createSelector(selectConnection, ({ connector }) => connector);\n\nexport const selectConnected = createSelector(selectConnection, ({ connected }) => connected);\n","import * as CONST from './constants';\n\nexport const setStatus = text => ({\n  type: CONST.STATUS_SET,\n  payload: text,\n});\n","import * as CONST from './constants';\n\nexport const setSignature = signature => ({\n  type: CONST.SIGNATURE_SET,\n  payload: signature,\n});\n","import { STORAGE } from './constants';\nimport initialDevices from '../store/devices/initialState';\n\nexport default ({ configuration, devices }) =>\n  localStorage.setItem(\n    STORAGE,\n    JSON.stringify({\n      configuration: {\n        ...configuration,\n        loading: undefined,\n      },\n      devices: {\n        ...initialDevices,\n        selected: devices.selected,\n      },\n    })\n  );\n","import * as CONST from './constants';\n\nexport const setConfigurationLoading = loading => ({\n  type: CONST.CONFIGURATION_LOADING,\n  payload: loading,\n});\n\nexport const setConfiguration = ({ cloverDomain, merchantId, accessToken, friendlyId, autoConnect }) => ({\n  type: CONST.CONFIGURATION_SET,\n  payload: { cloverDomain, merchantId, accessToken, friendlyId, autoConnect },\n});\n","import * as CONST from './constants';\n\nexport const setDevices = devices => ({\n  type: CONST.DEVICES_SET_LIST,\n  payload: devices,\n});\n\nexport const setDeviceId = deviceId => ({\n  type: CONST.DEVICES_SET_SELECTED,\n  payload: deviceId,\n});\n","import { APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport fetchDevices from '../../common/fetchDevices';\nimport { setConfiguration, setConfigurationLoading } from '../configuration/actions';\nimport { setDevices } from '../devices/actions';\nimport { setError } from '../error/actions';\n\nexport default ({ cloverDomain, merchantId, accessToken, friendlyId, autoConnect }) => async (dispatch, getState) => {\n  try {\n    await dispatch(setConfigurationLoading(true));\n\n    await dispatch(setConfiguration({ cloverDomain, merchantId, accessToken, friendlyId, autoConnect }));\n    persist(getState());\n\n    const devices = await fetchDevices({ cloverDomain, merchantId, accessToken });\n    await dispatch(setDevices(devices));\n\n    if (!devices.length) {\n      throw new Error('Merchant has no devices.');\n    }\n\n    if (!devices.some(a => a.apps[APP.CLOUD_PAY_DISPLAY])) {\n      throw new Error('Merchant has no devices with Cloud Pay Display installed.');\n    }\n  } catch (e) {\n    await dispatch(setError(e));\n  } finally {\n    await dispatch(setConfigurationLoading(false));\n  }\n};\n","import { createSelector } from 'reselect';\n\nexport const selectRawDevices = state => state.devices;\n\nexport const selectDeviceId = createSelector(selectRawDevices, ({ selected }) => selected);\n\nexport const selectDevices = createSelector(selectRawDevices, selectDeviceId, ({ list }, deviceId) =>\n  [...list].sort((a, b) => (a.id === deviceId ? -1 : b.id === deviceId ? 1 : 0))\n);\n","import * as CONST from './constants';\n\nexport const setConnector = connector => ({\n  type: CONST.CONNECTION_SET_CONNECTOR,\n  payload: connector,\n});\n","import Clover from 'remote-pay-cloud';\n\nimport { REMOTE_APPLICATION_ID, APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport { selectConfiguration } from '../configuration/selectors';\nimport { selectDevices } from '../devices/selectors';\nimport { setConnector } from '../connection/actions';\nimport { setDeviceId } from '../devices/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default deviceId => async (dispatch, getState) => {\n  try {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    await dispatch(setDeviceId(deviceId));\n\n    const state = getState();\n    persist(state);\n\n    const { cloverDomain, merchantId, accessToken, friendlyId } = selectConfiguration(state);\n    const device = selectDevices(state).find(d => d.id === deviceId);\n\n    if (!device) throw new Error(`Device not found.`);\n    if (!device.apps[APP.CLOUD_PAY_DISPLAY]) throw new Error('Device does not have Cloud Pay Display installed.');\n\n    const factory = Clover.CloverConnectorFactoryBuilder.createICloverConnectorFactory({\n      [Clover.CloverConnectorFactoryBuilder.FACTORY_VERSION]: Clover.CloverConnectorFactoryBuilder.VERSION_12,\n    });\n\n    const connector = factory.createICloverConnector(\n      new Clover.WebSocketCloudCloverDeviceConfigurationBuilder(\n        REMOTE_APPLICATION_ID,\n        deviceId,\n        merchantId,\n        accessToken\n      )\n        .setCloverServer(cloverDomain)\n        .setFriendlyId(friendlyId)\n        .build()\n    );\n\n    class Listener extends Clover.remotepay.ICloverConnectorListener {\n      constructor() {\n        super();\n        Object.keys(Object.getPrototypeOf(Object.getPrototypeOf(this))).forEach(type => {\n          this[type] = payload => dispatch({ type: `@@connector/${type}`, payload });\n        });\n      }\n    }\n    const listener = new Listener();\n    connector.addCloverConnectorListener(listener);\n\n    dispatch(setConnector(connector));\n    dispatch(setStatus('Connecting...'));\n\n    connector.initializeConnection();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const resetTransaction = () => ({ type: CONST.TRANSACTION_RESET });\n\nexport const setTransactionAmount = amount => ({\n  type: CONST.TRANSACTION_SET_AMOUNT,\n  payload: amount,\n});\n\nexport const addTransactionAmount = amount => ({\n  type: CONST.TRANSACTION_ADD_AMOUNT,\n  payload: amount,\n});\n\nexport const setTransactionType = type => ({\n  type: CONST.TRANSACTION_SET_TYPE,\n  payload: type,\n});\n","import { setConnector } from '../connection/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setError } from '../error/actions';\nimport { setDevices } from '../devices/actions';\nimport { resetTransaction } from '../transaction/actions';\n\nexport default () => async (dispatch, getState) => {\n  try {\n    const connector = selectConnector(getState());\n    connector.dispose();\n\n    dispatch(setConnector());\n    dispatch(setDevices());\n    dispatch(resetTransaction());\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","export const selectError = state => state.error;\n","export const selectBuffer = state => state.buffer;\n","import * as CONST from './constants';\n\nexport const resetBuffer = () => ({ type: CONST.BUFFER_RESET });\n\nexport const setBuffer = value => ({\n  type: CONST.BUFFER_SET,\n  payload: value || '',\n});\n\nexport const appendBuffer = value => ({\n  type: CONST.BUFFER_APPEND,\n  payload: value,\n});\n\nexport const undoBuffer = () => ({ type: CONST.BUFFER_UNDO });\n","import * as CONST from './constants';\n\nexport const removeTransaction = id => ({\n  type: CONST.TRANSACTIONS_REMOVE,\n  payload: id,\n});\n\nexport const showTransaction = id => ({\n  type: CONST.TRANSACTIONS_SHOW,\n  payload: id,\n});\n\nexport const hideTransaction = id => ({\n  type: CONST.TRANSACTIONS_HIDE,\n  payload: id,\n});\n\nexport const updateTransaction = ({ id, type, amount, tipAmount, payment }) => ({\n  type: CONST.TRANSACTIONS_UPDATE,\n  payload: { id, type, amount, tipAmount, payment },\n});\n","import { createSelector } from 'reselect';\n\nexport const selectRawTransactions = state => state.transactions;\n\nexport const selectTransactions = createSelector(selectRawTransactions, transactions => Object.values(transactions));\n\nexport const selectPaymentTransactions = createSelector(selectTransactions, transactions =>\n  transactions.filter(t => t.payment)\n);\n\nexport const selectVisiblePaymentTransactions = createSelector(selectPaymentTransactions, transactions =>\n  transactions.filter(t => t.visible)\n);\n","import Clover from 'remote-pay-cloud';\n\nimport { TRANSACTION, ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { selectBuffer } from '../buffer/selectors';\nimport { setTransactionType, setTransactionAmount } from '../transaction/actions';\nimport { setActions } from '../actions/actions';\nimport { setStatus } from '../status/actions';\nimport { resetBuffer } from '../buffer/actions';\nimport { updateTransaction } from '../transactions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.TRANSACTION}` });\n\n    const state = getState();\n    const buffer = selectBuffer(state);\n    const connector = selectConnector(state);\n\n    dispatch(setActions());\n    dispatch(setStatus('Processing...'));\n    dispatch(resetBuffer());\n\n    const amount = +buffer;\n    if (!amount) throw new Error('Amount is required');\n    if (isNaN(amount)) throw new Error('Amount is invalid');\n    if (amount <= 0 || amount > 99_999_99) throw new Error('Amount must between 0.01 and 99,999.99');\n\n    dispatch(setTransactionType(TRANSACTION.SALE));\n    dispatch(setTransactionAmount(amount));\n\n    const id = Clover.CloverID.getNewId();\n\n    const request = new Clover.remotepay.SaleRequest();\n    request.setAmount(amount);\n    request.setExternalId(id);\n    // TODO: Remove CARD_ENTRY_METHOD_MANUAL\n    // Partial Sale: 6011 3610 0000 6668\n    request.setCardEntryMethods(Clover.CardEntryMethods.DEFAULT | Clover.CardEntryMethods.CARD_ENTRY_METHOD_MANUAL);\n    // request.setCardEntryMethods(Clover.CardEntryMethods.DEFAULT);\n\n    dispatch(updateTransaction({ id, type: TRANSACTION.SALE, amount }));\n\n    connector.sale(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import { createSelector } from 'reselect';\n\nexport const selectPayment = state => state.payment;\n\nexport const selectHasPayment = createSelector(selectPayment, ({ id }) => !!id);\n\nexport const selectCardNumber = createSelector(selectPayment, ({ card: { first6, last4 } }) => {\n  if (first6 && last4) {\n    return [first6, '*'.repeat(6), last4].join('').replace(/.{4}/g, ' $&').trim();\n  }\n  return '';\n});\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION, TRANSACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setTransactionType, setTransactionAmount } from '../transaction/actions';\nimport { setActions } from '../actions/actions';\nimport { setStatus } from '../status/actions';\nimport { selectPayment } from '../payment/selectors';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.VOID_PAYMENT}` });\n\n    const state = getState();\n    const { id, orderId, amount, tipAmount } = selectPayment(state);\n    const connector = selectConnector(state);\n\n    dispatch(setActions());\n    dispatch(setStatus('Processing...'));\n    if (!id) throw new Error('No payment was specified');\n\n    dispatch(setTransactionType(TRANSACTION.VOID));\n    dispatch(setTransactionAmount((amount || 0) + (tipAmount || 0)));\n\n    const request = new Clover.remotepay.VoidPaymentRequest();\n    request.setPaymentId(id);\n    request.setOrderId(orderId);\n    request.setVoidReason(Clover.order.VoidReason.USER_CANCEL);\n    connector.voidPayment(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nexport default initialState => {\n  const middleware = applyMiddleware(thunk);\n\n  // eslint-disable-next-line no-underscore-dangle\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n  const enhancer = devTools ? devTools() : f => f;\n\n  return createStore(rootReducer, initialState, compose(middleware, enhancer));\n};\n","import { createSelector } from 'reselect';\n\nimport { ACTION } from '../../common/constants';\n\nexport const selectActions = state => state.actions;\n\nexport const selectTransactionAction = createSelector(selectActions, actions =>\n  actions.find(a => a.type === ACTION.TRANSACTION)\n);\n\nexport const selectNonTransactionActions = createSelector(selectActions, actions => {\n  const arr = actions.filter(a => a.type !== ACTION.TRANSACTION);\n  if (arr.length === 2) {\n    const [a, b] = arr;\n    if (a.payload?.description === 'No' && b.payload?.description === 'Yes') {\n      return [b, a];\n    }\n  }\n  return arr;\n});\n","import { createSelector } from 'reselect';\n\nexport const selectSignature = state => state.signature;\n\nexport const selectSignatureBounds = createSelector(selectSignature, ({ strokes }) => {\n  const bounds = strokes\n    .map(({ points }) => points)\n    .flat()\n    .reduce(\n      ({ x, X, y, Y }, point) => ({\n        x: Math.min(x, point.x),\n        X: Math.max(X, point.x),\n        y: Math.min(y, point.y),\n        Y: Math.max(Y, point.y),\n      }),\n      { x: Infinity, X: -Infinity, y: Infinity, Y: -Infinity }\n    );\n  return [bounds.x, bounds.y, bounds.X - bounds.x, bounds.Y - bounds.y].join(' ');\n});\n\nexport const selectSignatureLines = createSelector(selectSignature, ({ strokes }) =>\n  strokes.map(({ points }) => points.map(({ x, y }) => `${x},${y}`).join(' '))\n);\n","export const selectStatus = state => state.status;\n","import { createSelector } from 'reselect';\n\nexport const selectTransaction = state => state.transaction;\n\nexport const selectTransactionAmount = createSelector(selectTransaction, ({ amount }) => amount || 0);\n\nexport const selectTransactionType = createSelector(selectTransaction, ({ type }) => type);\n","import { createSelector } from 'reselect';\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !devices.length\n);\n","import React from 'react';\n\nexport default ({ size = 28 }) => {\n  return (\n    <svg\n      className=\"Logo\"\n      id=\"clover-logo-svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 33.15 33.15\"\n      aria-labelledby=\"svg-logo-title\"\n      role=\"image\"\n    >\n      <title id=\"svg-logo-title\">Clover</title>\n      <g id=\"clover-symbol-2\" data-name=\"clover-symbol\">\n        <path d=\"M191.45,85.64A7.5,7.5,0,1,0,184,93.09h7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,85.64a7.5,7.5,0,1,1,7.49,7.45h-7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,102.7a7.5,7.5,0,1,0,7.49-7.45h-7.49v7.45Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path\n          d=\"M191.46,102.7A7.5,7.5,0,1,1,184,95.25h7.49v7.45Zm-7.5,5.35a5.38,5.38,0,0,0,5.4-5.35V97.36H184a5.35,5.35,0,1,0,0,10.7h0Z\"\n          transform=\"translate(-176.46 -77.01)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\n\nexport default ({ fill, size = 20 }) => {\n  return (\n    <svg className=\"Power\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 501.672 501.672\">\n      <path\n        d=\"M476.836,275.667c0,124.608-101.381,226.005-225.995,226.005c-124.617,0-226.005-101.396-226.005-226.005\n\t\t\tc0-92.843,58.241-177.615,144.907-210.942c14.446-5.538,30.657,1.646,36.212,16.093c5.551,14.443-1.655,30.653-16.093,36.208\n\t\t\tC124.665,142.094,80.87,205.851,80.87,275.674c0,93.717,76.245,169.959,169.971,169.959c93.724,0,169.962-76.242,169.962-169.959\n\t\t\tc0-68.086-40.482-129.433-103.095-156.268c-14.227-6.09-20.824-22.559-14.718-36.781c6.084-14.22,22.543-20.814,36.771-14.718\n\t\t\tC423.024,103.576,476.836,185.128,476.836,275.667z M253.445,254.935c15.475,0,28.017-12.54,28.017-28.017V28.016\n\t\t\tC281.462,12.542,268.92,0,253.445,0c-15.468,0-28.016,12.542-28.016,28.016v198.902\n      C225.429,242.396,237.982,254.935,253.445,254.935z\"\n        style={{ fill }}\n      />\n    </svg>\n  );\n};\n","import React, { useCallback, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport QS from 'query-string';\n\nimport { configure, selectConfiguration, selectConfigurationLoading } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const configuration = useSelector(selectConfiguration);\n  const loading = useSelector(selectConfigurationLoading);\n  const visible = useSelector(selectVisible);\n\n  const qs = QS.parse(window.location.search);\n  const hash = QS.parse(window.location.hash);\n\n  const [cloverDomain, setCloverDomain] = useState(configuration.cloverDomain || 'https://www.clover.com');\n  const [merchantId, setMerchantId] = useState(qs.merchant_id || configuration.merchantId);\n  const [accessToken, setAccessToken] = useState(hash.access_token || configuration.accessToken);\n  const [friendlyId, setFriendlyId] = useState(configuration.friendlyId || 'Virtual Keypad');\n  const [autoConnect, setAutoConnect] = useState(configuration.autoConnect || false);\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const disabled = useMemo(() => loading || submitting, [loading, submitting]);\n\n  const submit = useCallback(\n    async event => {\n      try {\n        event.preventDefault();\n        setSubmitting(true);\n        await dispatch(configure({ cloverDomain, merchantId, accessToken, friendlyId, autoConnect }));\n      } finally {\n        setSubmitting(false);\n      }\n    },\n    [dispatch, cloverDomain, merchantId, accessToken, friendlyId, autoConnect]\n  );\n\n  const reset = useCallback(\n    event => {\n      event.preventDefault();\n      setCloverDomain(configuration.cloverDomain);\n      setMerchantId(configuration.merchantId);\n      setAccessToken(configuration.accessToken);\n      setFriendlyId(configuration.friendlyId);\n      setAutoConnect(configuration.autoConnect);\n    },\n    [configuration, setCloverDomain, setMerchantId, setAccessToken, setFriendlyId, setAutoConnect]\n  );\n\n  if (!visible) return null;\n\n  return (\n    <form onSubmit={submit} onReset={reset}>\n      <div className=\"Configuration card\">\n        <div className=\"card-header\">\n          <Logo />\n          <h3>Virtual Keypad</h3>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"form-group\">\n            <label>Clover Domain:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={cloverDomain}\n              onChange={event => setCloverDomain(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Merchant ID:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={merchantId}\n              onChange={event => setMerchantId(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Access Token:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={accessToken}\n              onChange={event => setAccessToken(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Friendly ID:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={friendlyId}\n              onChange={event => setFriendlyId(event.target.value)}\n              disabled={disabled}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"custom-control custom-switch\">\n              <input\n                id=\"chkAutoConnect\"\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                disabled={disabled}\n                checked={autoConnect}\n                onChange={() => setAutoConnect(!autoConnect)}\n              />\n              <label className=\"custom-control-label font-weight-normal\" htmlFor=\"chkAutoConnect\">\n                Auto-connect\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer\">\n          <button type=\"submit\" className=\"btn btn-success\" disabled={disabled}>\n            Submit\n          </button>\n          <button type=\"reset\" className=\"btn btn-secondary ml-2\" disabled={disabled}>\n            Reset\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { createSelector } from 'reselect';\n\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !!devices.length\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { APP } from '../../common/constants';\n\nexport default ({ device, active, disabled, onClick }) => {\n  const cloud = device.apps[APP.CLOUD_PAY_DISPLAY];\n  const cloudStatus = cloud ? 'Cloud Pay Display is installed' : 'Cloud Pay Display is NOT installed';\n\n  return (\n    <button\n      key={device.id}\n      type=\"button\"\n      className={classNames(\n        'list-group-item d-flex justify-content-between align-items-center list-group-item-action p-1',\n        {\n          disabled,\n          'list-group-item-primary': !disabled && active,\n        }\n      )}\n      onClick={onClick}\n    >\n      <div className=\"p-1\">\n        {device.name && <div className=\"font-weight-bold\">{device.name}</div>}\n        {device.productName} {device.serial}\n      </div>\n      <span\n        className={classNames('badge p-1', {\n          'badge-secondary': disabled,\n          'badge-success': !disabled && cloud,\n          'badge-warning': !disabled && !cloud,\n        })}\n        role=\"img\"\n        aria-label={cloudStatus}\n        title={cloudStatus}\n      >\n        ☁️\n      </span>\n    </button>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectDevices, selectDeviceId, connect, setDevices } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\nimport Device from './Device';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const devices = useSelector(selectDevices);\n  const deviceId = useSelector(selectDeviceId);\n  const visible = useSelector(selectVisible);\n  const [disabled, setDisabled] = useState();\n\n  const select = useCallback(\n    id => async event => {\n      try {\n        event.preventDefault();\n        setDisabled(true);\n        await dispatch(connect(id));\n      } finally {\n        setDisabled(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const cancel = () => dispatch(setDevices());\n\n  if (!visible) return null;\n\n  return (\n    <div className=\"Devices card\">\n      <div className=\"card-header\">\n        <Logo />\n        <h3>Virtual Keypad</h3>\n        <button className=\"close\" title=\"Cancel\" onClick={cancel} disabled={disabled}>\n          &times;\n        </button>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"form-group\">\n          <label>Select Device:</label>\n          <div className=\"list-group\">\n            {devices.map(device => (\n              <Device\n                key={device.id}\n                device={device}\n                disabled={disabled}\n                active={device.id === deviceId}\n                onClick={select(device.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createSelector } from 'reselect';\nimport { selectConnector } from '../../store';\n\nexport const selectVisible = createSelector(selectConnector, connector => !!connector);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectSignatureBounds, selectSignatureLines } from '../../store';\n\nexport default ({ width = 250, ...other }) => {\n  const bounds = useSelector(selectSignatureBounds);\n  const lines = useSelector(selectSignatureLines);\n\n  if (!lines.length) return null;\n\n  return (\n    <div className=\"Signature\">\n      <svg viewBox={bounds} width={width} {...other}>\n        {lines.map((points, i) => (\n          <polyline key={i} points={points} fill=\"none\" stroke=\"black\" />\n        ))}\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { sentenceCase } from 'change-case';\n\nimport { currency } from '../../common';\nimport { selectStatus, selectBuffer, selectTransactionType, selectTransactionAmount } from '../../store';\nimport Signature from './Signature';\n\nexport default () => {\n  const status = useSelector(selectStatus);\n  const buffer = useSelector(selectBuffer);\n  const tranType = useSelector(selectTransactionType);\n  const tranAmount = useSelector(selectTransactionAmount);\n\n  return (\n    <div className=\"Screen alert alert-secondary\">\n      {!!tranAmount && (\n        <div className=\"Transaction d-flex justify-content-between bg-white rounded-top border-bottom border-secondary\">\n          <div className=\"font-italic\">{sentenceCase(tranType)}</div>\n          <div className=\"font-weight-bold\">{currency(tranAmount)}</div>\n        </div>\n      )}\n      {!buffer && <div>{status}</div>}\n      <Signature />\n      {buffer && <div className=\"text-muted\">{buffer}</div>}\n      {buffer && <h3 className=\"text-right\">{currency(buffer)}</h3>}\n    </div>\n  );\n};\n","import React, { forwardRef, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { sentenceCase } from 'change-case';\n\nexport default forwardRef(\n  ({ action, height, color, keyCodes, disabled, onClick, moreActions, onMoreClick, children, ...other }, ref) => {\n    const [show, setShow] = useState(false);\n    useEffect(() => {\n      if (show) {\n        const hide = () => setShow(false);\n        document.addEventListener('click', hide);\n        document.addEventListener('touch', hide);\n        document.addEventListener('keydown', hide);\n        return () => {\n          document.removeEventListener('click', hide);\n          document.removeEventListener('touch', hide);\n          document.removeEventListener('keydown', hide);\n        };\n      }\n      return undefined;\n    }, [show]);\n\n    useEffect(() => {\n      if (!disabled) {\n        const keydown = event => {\n          if (keyCodes.includes(event.code)) {\n            event.preventDefault();\n            onClick();\n            return false;\n          }\n          return true;\n        };\n        document.addEventListener('keydown', keydown);\n\n        return () => document.removeEventListener('keydown', keydown);\n      }\n      return undefined;\n    }, [disabled, keyCodes, onClick]);\n\n    const value = action ? sentenceCase(action.payload?.description || action?.type || '') : children;\n\n    if (moreActions?.length) {\n      return (\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-dark action rounded-left\"\n            onClick={onClick}\n            disabled={disabled}\n            {...other}\n            title={`Shortcut keys: ${keyCodes.join(', ')}`}\n          >\n            {value || <span>&nbsp;</span>}\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-dark action dropdown-toggle\"\n            onClick={() => setShow(!show)}\n            disabled={disabled}\n          ></button>\n          <div className={classNames('dropdown-menu bg-dark', { show })}>\n            {moreActions.map((a, i) => (\n              <button key={i} className=\"dropdown-item bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                {a.payload?.description || a.type}\n              </button>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        style={{ height }}\n        className={classNames('btn', `text-${color || 'light'}`, {\n          action,\n          'btn-dark': action,\n          'btn-outline-dark': !action,\n        })}\n        disabled={disabled}\n        onClick={onClick}\n        title={`Shortcut keys: ${keyCodes.join(', ')}`}\n        {...other}\n      >\n        {value}\n      </button>\n    );\n  }\n);\n","import { ACTION } from '../../common/constants';\nimport {\n  acceptPayment,\n  acceptSignature,\n  disconnect,\n  identify,\n  invokeInputOption,\n  rejectPayment,\n  rejectSignature,\n  reset,\n  showWelcome,\n  transaction,\n} from '../../store';\n\nexport const ACTION_CREATOR = {\n  [ACTION.ACCEPT_PAYMENT]: acceptPayment,\n  [ACTION.ACCEPT_SIGNATURE]: acceptSignature,\n  [ACTION.DISCONNECT]: disconnect,\n  [ACTION.IDENTIFY]: identify,\n  [ACTION.INVOKE_INPUT_OPTION]: invokeInputOption,\n  [ACTION.REJECT_PAYMENT]: rejectPayment,\n  [ACTION.REJECT_SIGNATURE]: rejectSignature,\n  [ACTION.RESET]: reset,\n  [ACTION.SHOW_WELCOME]: showWelcome,\n  [ACTION.TRANSACTION]: transaction,\n};\n","import { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.ACCEPT_PAYMENT}` });\n    dispatch(setStatus('Accepting payment...'));\n    dispatch(setActions());\n\n    const connector = selectConnector(getState());\n    connector.acceptPayment(action.payload.payment);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { setSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.ACCEPT_SIGNATURE}` });\n    dispatch(setStatus('Accepting signature...'));\n    dispatch(setActions());\n    dispatch(setSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.acceptSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { selectFriendlyId } from '../configuration/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.IDENTIFY}` });\n    dispatch(setStatus('Identifying...'));\n    dispatch(\n      setActions([\n        { type: ACTION.SHOW_WELCOME, payload: { description: 'OK' } },\n        { type: ACTION.DISCONNECT, payload: { description: 'Cancel' } },\n      ])\n    );\n\n    const state = getState();\n    const connector = selectConnector(state);\n    const friendlyId = selectFriendlyId(state);\n\n    connector.showMessage(`${friendlyId} connected`);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.INVOKE_INPUT_OPTION}` });\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.InputOption();\n    request.setDescription(action.payload.description);\n    request.setKeyPress(action.payload.keyPress);\n    connector.invokeInputOption(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.REJECT_PAYMENT}` });\n    dispatch(setStatus('Rejecting payment...'));\n    dispatch(setActions());\n\n    const connector = selectConnector(getState());\n    connector.rejectPayment(action.payload.payment, action.payload.challenges[0]);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { ACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { setSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.REJECT_SIGNATURE}` });\n    dispatch(setStatus('Rejecting signature...'));\n    dispatch(setActions());\n    dispatch(setSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.rejectSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.RESET}` });\n    dispatch(setStatus('Resetting...'));\n    dispatch(setActions());\n\n    const connector = selectConnector(getState());\n    connector.resetDevice();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { setError } from '../error';\nimport { ACTION } from '../../common/constants';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: `@@action/${ACTION.SHOW_WELCOME}` });\n    dispatch(setStatus('Ready'));\n    dispatch(setActions([{ type: ACTION.IDENTIFY }, { type: ACTION.RESET }, { type: ACTION.TRANSACTION }]));\n\n    const connector = selectConnector(getState());\n    connector.showWelcomeScreen();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import React, { useMemo, useCallback, useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  selectTransactionAction,\n  selectNonTransactionActions,\n  appendBuffer,\n  resetBuffer,\n  undoBuffer,\n  transaction,\n} from '../../store';\nimport Key from './Key';\nimport { ACTION_CREATOR } from './constants';\nimport { ACTION } from '../../common';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const actions = useSelector(selectNonTransactionActions);\n  const transactionAction = useSelector(selectTransactionAction);\n\n  const [actionClicked, setActionClicked] = useState(false);\n  const keysDisabled = useMemo(() => !transactionAction || actionClicked, [transactionAction, actionClicked]);\n\n  const onAction = useCallback(\n    async action => {\n      setActionClicked(true);\n      if (action.type === ACTION.INVOKE_INPUT_OPTION) setTimeout(() => setActionClicked(false), 250);\n      await dispatch(ACTION_CREATOR[action.type](action));\n    },\n    [dispatch, setActionClicked]\n  );\n\n  const actionHandler = action => async () => onAction(action);\n\n  useEffect(() => {\n    if (actions.length) setActionClicked(false);\n  }, [setActionClicked, actions]);\n\n  const keyRef = useRef();\n  const [keyHeight, setKeyHeight] = useState();\n  useEffect(() => {\n    if (keyRef.current) {\n      setKeyHeight(keyRef.current.offsetWidth);\n    }\n  }, [keyRef, setKeyHeight]);\n\n  const [action1, action2, ...moreActions] = actions;\n\n  return (\n    <div className=\"Keys\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action1 || {}}\n            disabled={!action1 || actionClicked}\n            keyCodes={['F1', 'NumpadDivide']}\n            onClick={actionHandler(action1)}\n          />\n        </div>\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action2 || {}}\n            disabled={!action2 || actionClicked}\n            keyCodes={['F2', 'NumpadMultiply']}\n            onClick={actionHandler(action2)}\n            moreActions={moreActions}\n            onMoreClick={action => onAction(action)}\n          />\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            ref={keyRef}\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad7', 'Digit7']}\n            onClick={() => dispatch(appendBuffer('7'))}\n          >\n            7\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad8', 'Digit8']} onClick={() => dispatch(appendBuffer('8'))}>\n            8\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad9', 'Digit9']} onClick={() => dispatch(appendBuffer('9'))}>\n            9\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"danger\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadSubtract', 'Escape']}\n            onClick={() => dispatch(resetBuffer())}\n          >\n            X\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad4', 'Digit4']}\n            onClick={() => dispatch(appendBuffer('4'))}\n          >\n            4\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad5', 'Digit5']} onClick={() => dispatch(appendBuffer('5'))}>\n            5\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad6', 'Digit6']} onClick={() => dispatch(appendBuffer('6'))}>\n            6\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"warning\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadAdd', 'Backspace', 'Delete']}\n            onClick={() => dispatch(undoBuffer())}\n          >\n            &lt;\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-9\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-4 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad1', 'Digit1']}\n                onClick={() => dispatch(appendBuffer('1'))}\n              >\n                1\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad2', 'Digit2']} onClick={() => dispatch(appendBuffer('2'))}>\n                2\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad3', 'Digit3']} onClick={() => dispatch(appendBuffer('3'))}>\n                3\n              </Key>\n            </div>\n          </div>\n          <div className=\"row no-gutters\">\n            <div className=\"col-8 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad0', 'Digit0']}\n                onClick={() => dispatch(appendBuffer('0'))}\n              >\n                0\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key\n                disabled={keysDisabled}\n                keyCodes={['NumpadDecimal', 'Period']}\n                onClick={() => dispatch(appendBuffer('00'))}\n              >\n                00\n              </Key>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"success\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadEnter', 'Enter']}\n            onClick={() => dispatch(transaction())}\n          >\n            O\n          </Key>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { disconnect } from '../../store';\nimport { Logo, Power } from '../SVG';\nimport { selectVisible } from './selectors';\nimport Screen from './Screen';\nimport Keys from './Keys';\nimport './styles.scss';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const visible = useSelector(selectVisible);\n\n  const click = useCallback(() => dispatch(disconnect()), [dispatch]);\n\n  if (!visible) return null;\n\n  return (\n    <div className=\"Keypad card\">\n      <div className=\"card-header\">\n        <Logo />\n        <h3>Virtual Keypad</h3>\n        <button className=\"btn btn-sm btn-outline-dark\" onClick={click} title=\"Disconnect\">\n          <Power />\n        </button>\n      </div>\n      <div className=\"card-body\">\n        <Screen />\n        <Keys />\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nexport default ({ error }) => {\n  const { message, stack } = error;\n  const [expanded, setExpanded] = useState(false);\n\n  const expand = () => {\n    document.querySelector('.react-toast-notifications__container').classList.add('expanded');\n    setExpanded(true);\n  };\n\n  useEffect(() => {\n    return () => {\n      const remaining = document.querySelectorAll('.Error.expanded').length - (expanded ? 1 : 0);\n      if (!remaining) {\n        document.querySelector('.react-toast-notifications__container').classList.remove('expanded');\n      }\n    };\n  }, [expanded]);\n\n  return (\n    <div className={classNames('Error', { expanded })}>\n      <h5>{message}</h5>\n      {!!stack && !expanded && (\n        <button className=\"btn btn-link btn-sm\" onClick={expand}>\n          Show details...\n        </button>\n      )}\n      {!!stack && expanded && (\n        <pre className=\"mb-0\">\n          <code>{stack}</code>\n        </pre>\n      )}\n    </div>\n  );\n};\n","export default ({ amount, tipAmount, payment }) => {\n  const start = (amount || 0) + (tipAmount || 0);\n  const final = (payment?.amount || 0) + (payment?.tipAmount || 0);\n  const partial = start > final;\n  const remaining = start - final;\n  return { start, final, partial, remaining };\n};\n","import React from 'react';\nimport { sentenceCase } from 'change-case';\nimport { useDispatch } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { currency, card, TRANSACTION } from '../../common';\nimport { voidPayment, setError, setBuffer, transaction as doTransaction } from '../../store';\nimport parseAmounts from './parseAmounts';\n\nexport default ({ transaction }) => {\n  const { type, payment } = transaction || {};\n  const dispatch = useDispatch();\n  const { removeToast } = useToasts();\n\n  const amounts = parseAmounts(transaction);\n\n  const onRemaining = async () => {\n    try {\n      await dispatch(setBuffer(amounts.remaining));\n      await dispatch(doTransaction());\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  };\n\n  const onVoid = async () => {\n    try {\n      removeToast(transaction.id);\n      await dispatch(voidPayment(payment));\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  };\n\n  return (\n    <div className=\"Transaction\">\n      {transaction.type !== TRANSACTION.VOID && amounts.partial && (\n        <div className=\"alert alert-warning\">\n          <h6 className=\"alert-heading\">Partial Payment</h6>\n          <div>Remaining: {currency(amounts.remaining)}</div>\n        </div>\n      )}\n      <h5>{sentenceCase(type || 'Transaction')} Details</h5>\n      <table className=\"table table-sm small mb-0\">\n        <tbody>\n          <tr>\n            <th>Payment ID:</th>\n            <td>{payment.id}</td>\n          </tr>\n          <tr>\n            <th>External ID:</th>\n            <td>{payment.externalPaymentId}</td>\n          </tr>\n          <tr>\n            <th>Order ID:</th>\n            <td>{payment.order.id}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>Total:</th>\n              <td>{currency(payment.amount + payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>Amount:</th>\n            <td>{currency(payment.amount)}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>Tip:</th>\n              <td>{currency(payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>Card:</th>\n            <td>\n              <div>{payment.cardType}</div>\n              <div>{card(payment.cardTransaction)}</div>\n              {payment.cardTransaction.cardholderName && <div>{payment.cardTransaction.cardholderName}</div>}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      {transaction.type === TRANSACTION.SALE && (\n        <div>\n          {amounts.partial && (\n            <button className=\"btn btn-primary btn-sm mr-1\" onClick={onRemaining}>\n              Process {currency(amounts.remaining)}\n            </button>\n          )}\n          <button key=\"void\" className=\"btn btn-danger btn-sm\" onClick={onVoid}>\n            Void\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Configuration from '../Configuration';\nimport Devices from '../Devices/Devices';\nimport Keypad from '../Keypad';\nimport { useError } from '../Error';\nimport { useTransactions } from '../Transaction';\nimport usePreventDoubleTapZoom from './usePreventDoubleTapZoom';\nimport './styles.scss';\n\nexport default () => {\n  usePreventDoubleTapZoom();\n  useError();\n  useTransactions();\n\n  return (\n    <div className={classNames('App container maxwidth')}>\n      <Configuration />\n      <Devices />\n      <Keypad />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport default ({ ms = 500 } = {}) =>\n  useEffect(() => {\n    let expires = 0;\n    const handler = event => {\n      if (event.touches.length === 1) {\n        const now = Date.now();\n        if (event.touches.length === 1 && now > expires) {\n          event.preventDefault();\n          // Trigger a fake click for the tap we just prevented\n          event.target.click();\n        }\n        expires = now + ms;\n      }\n    };\n\n    document.body.addEventListener('touchstart', handler, { passive: false });\n\n    return () => document.body.removeEventListener('touchstart', handler, { passive: false });\n  }, [ms]);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { selectError, setError } from '../../store';\nimport Error from './Error';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    if (error.message) {\n      addToast(<Error error={error} />, {\n        appearance: 'error',\n        autoDismiss: true,\n        onDismiss: () => {\n          dispatch(setError());\n        },\n      });\n    }\n  }, [addToast, dispatch, error]);\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { selectVisiblePaymentTransactions, hideTransaction } from '../../store';\nimport { TRANSACTION } from '../../common';\nimport parseAmounts from './parseAmounts';\nimport Transaction from './Transaction';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectVisiblePaymentTransactions);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    transactions.forEach(transaction => {\n      const amounts = parseAmounts(transaction);\n\n      let appearance;\n      if (transaction.type === TRANSACTION.VOID) appearance = 'info';\n      else if (amounts.final >= amounts.start) appearance = 'success';\n      else if (amounts.final < amounts.start) appearance = 'warning';\n      else appearance = 'info';\n\n      addToast(<Transaction transaction={transaction} />, {\n        id: transaction.id,\n        appearance,\n        autoDismiss: false,\n        onDismiss: () => {\n          dispatch(hideTransaction(transaction.id));\n        },\n      });\n    });\n  }, [addToast, dispatch, transactions]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { ToastProvider } from 'react-toast-notifications';\n\nimport store from './store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <ToastProvider placement=\"bottom-right\">\n        <App />\n      </ToastProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}