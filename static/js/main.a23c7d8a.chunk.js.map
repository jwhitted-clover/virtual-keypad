{"version":3,"sources":["store/store.js","common/constants.js","store/actions/initialState.js","store/configuration/initialState.js","store/connection/initialState.js","store/connection/reducer.js","store/devices/initialState.js","store/error/initialState.js","store/signature/initialState.js","common/retryFetch.js","common/api.js","common/fetchDevices.js","common/format.js","store/transactions/initialState.js","store/rootReducer.js","store/actions/reducer.js","store/actions/constants.js","store/connection/constants.js","store/buffer/reducer.js","store/buffer/initialState.js","store/buffer/constants.js","store/configuration/reducer.js","store/configuration/constants.js","store/devices/reducer.js","store/devices/constants.js","store/error/reducer.js","store/error/constants.js","store/signature/reducer.js","store/signature/constants.js","store/status/reducer.js","store/status/initialState.js","store/status/constants.js","store/transactions/reducer.js","store/transactions/constants.js","store/configuration/selectors.js","store/error/actions.js","store/actions/actions.js","store/connection/selectors.js","store/status/actions.js","common/persist.js","store/configuration/actions.js","store/devices/actions.js","store/thunks/configure.js","store/devices/selectors.js","store/connection/actions.js","store/thunks/connect.js","store/transactions/actions.js","store/thunks/disconnect.js","locales/index.js","i18n.js","store/thunks/reset.js","store/error/selectors.js","store/thunks/showWelcome.js","store/buffer/actions.js","store/buffer/selectors.js","store/transactions/selectors.js","store/thunks/transaction.js","store/thunks/voidPayment.js","store/createStore.js","store/actions/selectors.js","store/signature/selectors.js","store/status/selectors.js","components/Configuration/selectors.js","components/Fields/TextField.js","components/Fields/CheckboxField.js","components/SVG/Logo.js","components/Configuration/Configuration.js","components/Devices/selectors.js","components/Devices/Device.js","components/Devices/Devices.js","components/Keypad/constants.js","store/thunks/acceptPayment.js","store/thunks/acceptSignature.js","store/signature/actions.js","store/thunks/identify.js","store/thunks/invokeInputOption.js","store/thunks/rejectPayment.js","store/thunks/rejectSignature.js","components/Keypad/selectors.js","components/Keypad/Signature.js","components/Keypad/Screen.js","components/Keypad/Key.js","components/Keypad/Keys.js","components/Keypad/Menu.js","components/Transaction/parseAmounts.js","components/Transaction/Transaction.js","components/Transaction/useShowTransaction.js","components/Keypad/History.js","components/Keypad/Keypad.js","components/Error/Error.js","components/App/App.js","components/Error/useError.js","components/App/useMouse.js","components/App/usePreventDoubleTapZoom.js","components/Transaction/useTransactions.js","serviceWorker.js","index.js"],"names":["initialState","ACTION","APP","APP_NAME","APP_BY_NAME","Object","fromEntries","entries","map","arr","reverse","DOMAIN","REG_PRODUCTS","STORAGE","TRANSACTION","qs","QS","parse","window","location","search","hash","storage","JSON","atob","localStorage","getItem","cloverDomain","configuration","document","referrer","URL","origin","includes","toString","getCloverDomain","merchantId","merchant_id","accessToken","access_token","friendlyId","loading","undefined","connector","connected","fixCreditPayIntent","doTxStart","device","payIntent","order","requestInfo","externalReferenceId","externalPaymentId","call","tryDispose","dispose","e","list","selected","message","stack","width","height","strokes","retryFetch","url","retries","options","fetch","catch","deviceApps","deviceId","method","headers","accept","then","r","json","devices","appsReducer","o","a","app","appName","createPartition","array","size","reduce","last","length","push","api","elements","filter","d","test","productName","partitions","i","Promise","all","id","apps","flat","applications","currency","value","n","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","active","mode","data","rootReducer","combineReducers","actions","state","type","payload","found","some","description","inputOptions","io","buffer","replace","slice","connection","request","Clover","remotepay","RetrieveDeviceStatusRequest","setSendLastMessage","retrieveDeviceStatus","error","signature","status","challenges","transactions","cur","timestamp","Date","now","amount","tipAmount","visible","newState","payment","success","credit","selectConfiguration","selectFriendlyId","createSelector","selectProduction","selectCardEntryMethods","production","CardEntryMethods","DEFAULT","CARD_ENTRY_METHOD_MANUAL","selectConfigurationLoading","setError","setActions","selectConnection","selectConnector","setStatus","text","setItem","btoa","stringify","initialDevices","setConfiguration","setDeviceId","setDevices","dispatch","getState","persist","fetchDevices","Error","selectRawDevices","selectDeviceId","selectDevices","sort","b","setConnector","find","factory","CloverConnectorFactoryBuilder","createICloverConnectorFactory","FACTORY_VERSION","VERSION_12","createICloverConnector","WebSocketCloudCloverDeviceConfigurationBuilder","setCloverServer","setFriendlyId","build","Listener","keys","getPrototypeOf","forEach","ICloverConnectorListener","listener","addCloverConnectorListener","initializeConnection","setActiveTransaction","hideTransaction","updateTransaction","showWelcomeScreen","resolve","setTimeout","en","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","keySeparator","nsSeparator","interpolation","escapeValue","resources","action","resetDevice","selectError","appendBuffer","selectBuffer","selectRawTransactions","selectTransactions","values","selectActiveTransaction","selectActiveTransactionType","selectActiveTransactionAmount","selectPaymentTransactions","t","selectVisiblePaymentTransactions","selectTransactionMode","cardEntryMethods","CloverID","getNewId","SaleRequest","setAmount","setExternalId","setCardEntryMethods","sale","ManualRefundRequest","manualRefund","orderId","VoidPaymentRequest","setPaymentId","setOrderId","setVoidReason","VoidReason","USER_CANCEL","voidPayment","console","warn","store","middleware","applyMiddleware","thunk","devTools","__REDUX_DEVTOOLS_EXTENSION__","enhancer","f","createStore","compose","config","configure","selectActions","selectTransactionAction","selectNonTransactionActions","selectSignature","selectSignatureBounds","bounds","points","point","x","X","y","Y","Math","min","max","Infinity","join","selectSignatureLines","selectStatus","selectVisible","label","disabled","onChange","other","className","htmlFor","event","target","checked","isSwitch","switch","mb0","classNames","useTranslation","xmlns","viewBox","aria-labelledby","role","data-name","transform","useDispatch","useSelector","useState","setCloverDomain","setMerchantId","setAccessToken","submitting","setSubmitting","useMemo","submit","useCallback","preventDefault","reset","onSubmit","onReset","Card","CardHeader","Logo","CardBody","TextField","autoCorrect","autoComplete","autoCapitalize","spellCheck","pattern","CardFooter","Button","color","onClick","cloud","cloudStatus","key","name","serial","aria-label","title","setDisabled","select","connect","Device","ACTION_CREATOR","acceptPayment","VerifySignatureRequest","setPayment","acceptSignature","disconnect","showMessage","InputOption","setDescription","setKeyPress","keyPress","invokeInputOption","rejectPayment","rejectSignature","showWelcome","transaction","MODE","HISTORY","lines","fill","stroke","tranType","tranAmount","translatedStatus","partial","match","Trans","i18nKey","cardEnding","last4","Signature","forwardRef","ref","keyCodes","moreActions","moreText","onMoreClick","children","show","setShow","toggle","useEffect","keydown","code","addEventListener","removeEventListener","k","ButtonDropdown","isOpen","DropdownToggle","caret","DropdownMenu","right","DropdownItem","outline","innerRef","style","transactionAction","transactionMode","actionClicked","setActionClicked","keysDisabled","onAction","actionHandler","keyRef","useRef","keyHeight","setKeyHeight","current","offsetWidth","action1","action2","Key","setMode","onShowWelcome","onDisconnect","m","CheckboxField","readOnly","divider","start","final","remaining","removeToast","useToasts","amounts","parseAmounts","onRemaining","doTransaction","onVoid","Table","orderRef","cardTransaction","cardType","first6","repeat","trim","card","cardholderName","addToast","appearance","Transaction","autoDismiss","onDismiss","showTransaction","useShowTransaction","sortedTransactions","compareDesc","hover","striped","format","parseTimestamp","parseAmount","Menu","Screen","Keys","History","expanded","setExpanded","querySelectorAll","querySelector","classList","remove","add","useError","mouse","setMouse","onHover","useMouse","ms","expires","handler","touches","click","body","passive","usePreventDoubleTapZoom","useTransactions","Configuration","Devices","Keypad","Boolean","hostname","ReactDOM","render","StrictMode","placement","App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kzJAKIA,E,wDCLSC,EACK,iBADLA,EAEO,mBAFPA,EAGC,aAHDA,EAID,WAJCA,EAKU,sBALVA,EAMK,iBANLA,EAOO,mBAPPA,EAQJ,QARIA,EASG,eATHA,EAUE,cAVFA,EAWO,mBAIPC,EACQ,oBAGRC,EAAQ,eAClBD,EAAwB,qBAGdE,EAAcC,OAAOC,YAAYD,OAAOE,QAAQJ,GAAUK,KAAI,SAAAC,GAAG,OAAIA,EAAIC,cAEzEC,EAAS,yBAETC,EAAe,uBAIfC,EAAU,wBAEVC,EACL,OADKA,EAEH,SAFGA,EAGL,O,yBCpCO,K,yBCITC,EAAKC,IAAGC,MAAMC,OAAOC,SAASC,QAC9BC,EAAOL,IAAGC,MAAMC,OAAOC,SAASE,MAChCC,EAAUC,KAAKN,MAAMO,KAAKC,aAAaC,QAAQb,IAAY,aAelD,GACbc,aAdsB,WAAO,IAAD,EACc,EAA1C,UAAIL,QAAJ,IAAIA,GAAJ,UAAIA,EAASM,qBAAb,aAAI,EAAwBD,aAC1B,cAAOL,QAAP,IAAOA,GAAP,UAAOA,EAASM,qBAAhB,aAAO,EAAwBD,aAEjC,GAAIE,SAASC,SAAU,CACrB,IAAMA,EAAW,IAAIC,IAAIF,SAASC,UAClC,GAAIA,EAASE,OAAOC,SAAS,cAC3B,OAAOH,EAASI,WAGpB,OAAOvB,EAIOwB,GACdC,WAAYrB,EAAGsB,cAAH,OAAkBf,QAAlB,IAAkBA,GAAlB,UAAkBA,EAASM,qBAA3B,aAAkB,EAAwBQ,aAAc,GACpEE,YAAajB,EAAKkB,eAAL,OAAqBjB,QAArB,IAAqBA,GAArB,UAAqBA,EAASM,qBAA9B,aAAqB,EAAwBU,cAAe,GACzEE,WAAY,iBACZC,aAASC,G,iBC1BI,GACbC,UAAW,KACXC,WAAW,GCGPC,EAAqB,SAAAF,GAAa,IAG9BG,EAAcH,EAAUI,OAAxBD,UAERH,EAAUI,OAAOD,UAAY,SAACE,EAAWC,EAAOC,GAK9C,MAJoB,WAAhBA,IAEFF,EAAUG,oBAAsBH,EAAUI,mBAErCN,EAAUO,KAAKV,EAAUI,OAAQC,EAAWC,EAAOC,KAIxDI,EAAa,SAAAX,GACjB,IAEW,OAATA,QAAS,IAATA,KAAWY,UACX,MAAOC,MCvBI,GACbC,KAAM,GACNC,SAAU,ICFG,GACbC,QAAS,KACTC,MAAO,MCFM,GACbC,MAAO,EACPC,OAAQ,EACRC,QAAS,I,iCCGIC,GANI,SAAbA,EAAcC,EAAD,WAAQC,eAAR,MAAkB,EAAlB,EAAwBC,EAAxB,mCACjBC,MAAMH,EAAKE,GAASE,OAAM,SAAAb,GACxB,GAAIU,EAAU,EAAG,OAAOF,EAAWC,EAAD,aAAQC,QAASA,EAAU,GAAMC,IACnE,MAAMX,MCDGc,GAAa,SAAC,GAAD,IAAG3C,EAAH,EAAGA,aAAcS,EAAjB,EAAiBA,WAAYmC,EAA7B,EAA6BA,SAAUjC,EAAvC,EAAuCA,YAAvC,OACxB0B,GACE,IAAIjC,IAAJ,uBACkBK,EADlB,mBACuCmC,EADvC,sCAC6EjC,GAC3EX,GACAO,WACF,CACEsC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGpBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,WAEHC,GAAU,SAAC,GAAD,IAAGnD,EAAH,EAAGA,aAAcS,EAAjB,EAAiBA,WAAYE,EAA7B,EAA6BA,YAA7B,OACrB0B,GAAW,IAAIjC,IAAJ,wBAAyBK,EAAzB,iCAA4DE,GAAeX,GAAcO,WAAY,CAC9GsC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAEjBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,WCrBXE,GAAc,SAACC,EAAGC,GACtB,IAAMC,EAAM9E,EAAY6E,EAAEE,SAC1B,OAAOD,EAAG,2BAAQF,GAAR,kBAAYE,GAAM,IAASF,GAGjCI,GAAkB,SAACC,EAAOC,GAAR,OACtBD,EAAME,QACJ,SAACN,EAAGD,GACF,IAAMQ,EAAOP,EAAEA,EAAEQ,OAAS,GAM1B,OALID,EAAKC,SAAWH,EAClBL,EAAES,KAAK,CAACV,IAERQ,EAAKE,KAAKV,GAELC,IAET,CAAC,MAGL,2CAAe,6CAAAA,EAAA,6DAAStD,EAAT,EAASA,aAAcS,EAAvB,EAAuBA,WAAYE,EAAnC,EAAmCA,YAAnC,SACcqD,GAAY,CAAEhE,eAAcS,aAAYE,gBADtD,gBACLsD,EADK,EACLA,SACFd,EAAUc,EAASC,QAAO,SAAAC,GAAC,OAAIlF,EAAamF,KAAKD,EAAEE,gBAGnDC,EAAab,GAAgBN,EAAS,GACnCoB,EAAI,EANA,YAMGA,EAAID,EAAWR,QANlB,kCAQWU,QAAQC,IAC5BH,EAAWC,GAAG1F,KAAI,gBAAO+D,EAAP,EAAG8B,GAAH,OAAsBV,GAAe,CAAEhE,eAAcS,aAAYE,cAAaiC,iBATvF,QAQX0B,EAAWC,GARA,eAM0BA,IAN1B,8BAYPI,EAAOL,EAAWM,OAZX,kBAcNzB,EAAQtE,KAAI,SAACuC,EAAQmD,GAAT,mBAAC,eACfnD,GADc,IAEjBuD,KAAMA,EAAKJ,GAAGM,aAAajB,OAAOR,GAAa,UAhBpC,4CAAf,sDCtBa0B,GAAW,SAAAC,GACtB,IAAMC,GAAKD,EACX,OAAKE,MAAMD,IAAMA,GAAK,GACZA,EAAI,KAAKE,oBAAenE,EAAW,CAAEoE,sBAAuB,EAAGC,sBAAuB,IAEzF,ICHM,IACbC,OAAQ,KACRC,KAAMnG,EACNoG,KAAM,ICkBOC,GAZKC,YAAgB,CAClCC,QCPa,WAA8C,IAA7CC,EAA4C,uDAApCtH,EAAoC,yCAApBuH,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,ICNyB,eDOvB,OAAOvH,EACT,ICT0B,gBDUxB,IAAMyH,EAAQH,EAAMI,MAAK,SAAAzC,GAAC,eAAIA,EAAEsC,OAASC,EAAQD,OAAQ,UAAAtC,EAAEuC,eAAF,eAAWG,gBAAX,UAA2BH,EAAQA,eAAnC,aAA2B,EAAiBG,gBACrG,OAAOF,EAAQH,EAAH,sBAAeA,GAAf,CAAsBE,IAEpC,ICXuB,aDYrB,OAAOA,GAAW,GACpB,IEd0B,eFexB,MAAO,CAAC,CAAED,KAAMtH,EAAmBuH,QAAS,CAAEG,YAAa,YAC7D,IAAK,4BAEL,IAAK,oCACH,MAAO,CAAC,CAAEJ,KAAMtH,GAAmB,CAAEsH,KAAMtH,IAC7C,IAAK,oCACH,OAAOuH,EAAQI,aAAapH,KAAI,SAAAqH,GAAE,MAAK,CAAEN,KAAMtH,EAA4BuH,QAASK,MACtF,IAAK,6BACL,IAAK,oCACL,IAAK,qCACH,MAAO,CAAC,CAAEN,KAAMtH,GAAmB,CAAEsH,KAAMtH,IAC7C,IAAK,sCACH,MAAO,CACL,CAAEsH,KAAMtH,EAAuBuH,WAC/B,CAAED,KAAMtH,EAAuBuH,YAEnC,IAAK,uCACH,MAAO,CACL,CAAED,KAAMtH,EAAyBuH,WACjC,CAAED,KAAMtH,EAAyBuH,YAErC,QACE,OAAOF,IDzBXQ,OIVa,WAA8C,IAA7CR,EAA4C,uDCH7C,GDG6C,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,IEJwB,cFKtB,MCNS,GDOX,IEPyB,eFQvB,OAAQD,EAAQE,GAASO,QAAQ,MAAO,IAAIC,MAAM,EAAG,GACvD,IEPsB,YFQpB,OAAOR,EACT,IERuB,aFSrB,OAAOF,EAAM7B,OAAS6B,EAAMU,MAAM,EAAGV,EAAM7B,OAAS,GAAK,GAC3D,QACE,OAAO6B,IJAX1F,cOXa,WAA8C,IAA7C0F,EAA4C,uDAApCtH,EAAoC,yCAApBuH,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,ICLiC,0BDM/B,OAAO,2BACFD,GADL,IAEE7E,SAAS,IAEb,ICTqC,6BDUnC,OAAO,2BACF6E,GADL,IAEE7E,aAASC,IAEb,ICb6B,mBDc3B,OAAO,2BACF4E,GADL,IAEE3F,aAAc6F,EAAQ7F,cAAgB,GACtCS,WAAYoF,EAAQpF,YAAc,GAClCE,YAAakF,EAAQlF,aAAe,GACpCE,WAAYgF,EAAQhF,YAAc,KAEtC,QACE,OAAO8E,IPTXW,WTaa,WAA8C,IAA7CX,EAA4C,uDAApCtH,EAAoC,yCAApBuH,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,IY9B4B,iBZgC1B,OADAjE,EAAWgE,EAAM3E,WACV3C,EACT,IYhC0B,eZkCxB,OADAsD,EAAWgE,EAAM3E,WACV,2BACF2E,GADL,IAEE3E,UAAW6E,EACX5E,WAAW,IAEf,IAAK,mCACH,OAAO,2BAAK0E,GAAZ,IAAmB1E,WAAW,IAChC,IAAK,4BACHC,EAAmByE,EAAM3E,WACzB,IAAMuF,EAAU,IAAIC,IAAOC,UAAUC,4BAIrC,OAHAH,EAAQI,oBAAmB,GAC3BhB,EAAM3E,UAAU4F,qBAAqBL,GAE9B,2BAAKZ,GAAZ,IAAmB1E,WAAW,IAEhC,QACE,OAAO0E,ISnCXxC,QSba,WAA8C,IAA7CwC,EAA4C,uDAApCtH,EAAoC,yCAApBuH,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,ICL8B,eDM5B,OAAO,2BACFD,GADL,IAEE7D,KAAM,KAEV,ICTkC,gBDUhC,OAAO,2BACF6D,GADL,IAEE5D,SAAU,KAEd,ICZgC,cDa9B,OAAO,2BACF4D,GADL,IAEE5D,SAAU8D,GAAW,KAEzB,IClB4B,aDmB1B,OAAO,2BACFF,GADL,IAEE7D,KAAM+D,GAAW,KAErB,QACE,OAAOF,ITTXkB,MWda,WAA8C,IAA7ClB,EAA4C,uDAApCtH,EAAoC,yCAApBuH,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,ICLuB,aDMrB,OAAOvH,EACT,ICNqB,WDOnB,OAAO,2BACFsH,GADL,IAEE3D,QAAS6D,EAAQ7D,QACjBC,MAAO4D,EAAQ5D,QAEnB,IAAK,4BACH,OAAO,2BACF0D,GADL,IAEE3D,QAAQ,gBAAD,OAAkB6D,EAAQ7D,SACjCC,MAAO,OAEX,QACE,OAAO0D,IXFXmB,Uafa,WAA8C,IAAD,MAA5CnB,EAA4C,uDAApCtH,EAAoC,yCAApBuH,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,ICL2B,iBDMzB,OAAOvH,EACT,ICNyB,eDOvB,MAAO,CACL6D,OAAc,OAAP2D,QAAO,IAAPA,OAAA,EAAAA,EAAS3D,QAAS,EACzBC,QAAe,OAAP0D,QAAO,IAAPA,OAAA,EAAAA,EAAS1D,SAAU,EAC3BC,SAAgB,OAAPyD,QAAO,IAAPA,OAAA,EAAAA,EAASzD,UAAW,IAEjC,IAAK,uCACH,MAAO,CACLF,OAAO,UAAA2D,EAAQiB,iBAAR,eAAmB5E,QAAS,EACnCC,QAAQ,UAAA0D,EAAQiB,iBAAR,eAAmB3E,SAAU,EACrCC,SAAS,UAAAyD,EAAQiB,iBAAR,eAAmB1E,UAAW,IAE3C,QACE,OAAOuD,IbDXoB,OehBa,WAA8C,IAA7CpB,EAA4C,uDCH7C,GDG6C,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,IELwB,cFMtB,MAAO,GACT,IENsB,YFOpB,OAAOC,GAAW,GACpB,IAAK,4BAEL,IAAK,oCACH,MAAO,QACT,IAAK,oCACH,OAAOA,EAAQ7D,QACjB,IAAK,6BACL,IAAK,oCACL,IAAK,qCACH,MAAO,QACT,IAAK,sCACH,OAAO6D,EAAQmB,WAAW,GAAGhF,QAC/B,IAAK,uCACH,MAAO,mBACT,QACE,OAAO2D,IfJXsB,akBhBa,WAA8C,IAA7CtB,EAA4C,uDAApCtH,GAAoC,yCAApBuH,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,ICD6B,qBDE3B,OAAO,2BACFD,GADL,IAEEL,KAAMO,IAEV,ICX+B,uBDY7B,GAAIA,EAAQnB,GAAI,CACd,IAAMwC,EAAMvB,EAAMJ,KAAKM,EAAQnB,KAAO,GAEtC,OAAO,2BACFiB,GADL,IAEEN,OAAQQ,EAAQnB,GAChBa,KAAK,2BACAI,EAAMJ,MADP,kBAEDM,EAAQnB,GAFP,2BAGGiB,EAAMJ,KAAKM,EAAQnB,KAHtB,IAIAA,GAAImB,EAAQnB,GACZyC,UAAWC,KAAKC,MAChBzB,KAAMC,EAAQD,MAAQsB,EAAItB,KAC1B0B,OAAQzB,EAAQyB,QAAUJ,EAAII,QAAU,EACxCC,UAAW1B,EAAQ0B,WAAaL,EAAIK,WAAa,QAKzD,OAAO,2BACF5B,GADL,IAEEN,OAAQ,KAGZ,IChC6B,kBDiC3B,OAAO,2BACFM,GADL,IAEEJ,KAAK,2BACAI,EAAMJ,MADP,kBAEDM,EAFC,2BAGGF,EAAMJ,KAAKM,IAHd,IAIA2B,SAAS,QAIjB,IC5C6B,kBD6C3B,OAAO,2BACF7B,GADL,IAEEJ,KAAK,2BACAI,EAAMJ,MADP,kBAEDM,EAFC,2BAGGF,EAAMJ,KAAKM,IAHd,IAIA2B,SAAS,QAIjB,ICzD+B,oBD0D7B,IAAMC,EAAQ,2BACT9B,GADS,IAEZJ,KAAK,eAAMI,EAAMJ,QAGnB,cADOkC,EAASlC,KAAKM,GACd4B,EAET,IChE+B,oBDiE7B,IAAMP,EAAMvB,EAAMJ,KAAKM,EAAQnB,KAAO,GAEtC,OAAO,2BACFiB,GADL,IAEEJ,KAAK,2BACAI,EAAMJ,MADP,kBAEDM,EAAQnB,GAFP,2BAGGwC,GAHH,IAIAxC,GAAImB,EAAQnB,GACZyC,UAAWC,KAAKC,MAChBG,QAAS3B,EAAQ2B,SAAWN,EAAIM,UAAW,EAC3CF,OAAQzB,EAAQyB,QAAUJ,EAAII,QAAU,EACxCC,UAAW1B,EAAQ0B,WAAaL,EAAIK,WAAa,EACjD3B,KAAMC,EAAQD,MAAQsB,EAAItB,MAAQ,GAClC8B,QAAS7B,EAAQ6B,SAAWR,EAAIQ,SAAW,WAKnD,IAAK,6BACH,OAAI7B,EAAQ8B,QACH,2BACFhC,GADL,IAEEN,OAAQ,GACRE,KAAK,2BACAI,EAAMJ,MADP,kBAEDM,EAAQ6B,QAAQjG,kBAFf,2BAGGkE,EAAMJ,KAAKM,EAAQ6B,QAAQjG,oBAH9B,IAIAiD,GAAImB,EAAQ6B,QAAQjG,kBACpB0F,UAAWC,KAAKC,MAChBG,SAAS,EACT5B,KAAMzG,EACNuI,QAAS7B,EAAQ6B,cAKlB/B,EAET,IAAK,qCACH,OAAIE,EAAQ8B,QACH,2BACFhC,GADL,IAEEN,OAAQ,GACRE,KAAK,2BACAI,EAAMJ,MADP,kBAEDM,EAAQ+B,OAAOpG,oBAFd,2BAGGmE,EAAMJ,KAAKM,EAAQ+B,OAAOpG,sBAH7B,IAIAkD,GAAImB,EAAQ+B,OAAOpG,oBACnB2F,UAAWC,KAAKC,MAChBG,SAAS,EACT5B,KAAMzG,EACNuI,QAAS7B,EAAQ+B,aAKlBjC,EAET,IAAK,oCACH,OAAIE,EAAQ8B,QACH,2BACFhC,GADL,IAEEN,OAAQ,GACRE,KAAK,2BACAI,EAAMJ,MADP,kBAEDM,EAAQ6B,QAAQjG,kBAFf,2BAGGkE,EAAMJ,KAAKM,EAAQ6B,QAAQjG,oBAH9B,IAIAiD,GAAImB,EAAQ6B,QAAQjG,kBACpB0F,UAAWC,KAAKC,MAChBG,SAAS,EACT5B,KAAMzG,EACNuI,QAAS7B,EAAQ6B,cAKlB/B,EAGT,QACE,OAAOA,M,SE/IAkC,GAAsB,SAAAlC,GAAK,OAAIA,EAAM1F,eAErC6H,GAAmBC,aAAeF,IAAqB,qBAAGhH,YAA+B,oBAEzFmH,GAAmBD,aAAeF,IAAqB,qBAAG7H,eAAoChB,KAE9FiJ,GAAyBF,aAAeC,IAAkB,SAAAE,GAAU,OAC/EA,EACI1B,IAAO2B,iBAAiBC,QAExB5B,IAAO2B,iBAAiBC,QAAU5B,IAAO2B,iBAAiBE,4BAGnDC,GAA6BP,aAAeF,IAAqB,qBAAG/G,UAAyB,KCd7FyH,GAAW,wEAAsB,GAAnBvG,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAZ,MAA8B,CACpD2D,KTJuB,WSKvBC,QAAS,CAAE7D,UAASC,WCGTuG,GAAa,SAAA9C,GAAO,MAAK,CACpCE,KpBRyB,aoBSzBC,QAASH,ICTE+C,GAAmB,SAAA9C,GAAK,OAAIA,EAAMW,YAElCoC,GAAkBX,aAAeU,IAAkB,qBAAGzH,aCAtD2H,IDEkBZ,aAAeU,IAAkB,qBAAGxH,aCF1C,SAAA2H,GAAI,MAAK,CAChChD,KPJwB,YOKxBC,QAAS+C,KCHI,mBAAG3I,EAAH,EAAGA,cAAekD,EAAlB,EAAkBA,QAAlB,OACbrD,aAAa+I,QACX3J,EACA4J,KACElJ,KAAKmJ,UAAU,CACb9I,cAAc,2BACTA,GADQ,IAEXa,aAASC,IAEXoC,QAAQ,2BACH6F,GADE,IAELjH,SAAUoB,EAAQpB,gBCZfkH,GAAmB,SAAC,GAAD,MAA4D,CAC1FrD,KlBD+B,mBkBE/BC,QAAS,CAAE7F,aAFmB,EAAGA,aAERS,WAFK,EAAiBA,WAEVE,YAFP,EAA6BA,YAETE,WAFpB,EAA0CA,cCI7DqI,GAAc,SAAAtG,GAAQ,MAAK,CACtCgD,KjBJkC,ciBKlCC,QAASjD,IAGEuG,GAAa,SAAAhG,GAAO,MAAK,CACpCyC,KjBV8B,aiBW9BC,QAAS1C,ICNI,mBAAGnD,EAAH,EAAGA,aAAcS,EAAjB,EAAiBA,WAAYE,EAA7B,EAA6BA,YAAaE,EAA1C,EAA0CA,WAA1C,+CAA2D,WAAOuI,EAAUC,GAAjB,eAAA/F,EAAA,sEAEtE8F,EAAS,CACPxD,KAAM,YACNC,QAAS,CAAE7F,eAAcS,aAAYE,cAAaE,gBAJkB,SAOhEuI,EFPoC,CAAExD,KlBPX,4BoBOqC,uBAShEwD,EAASH,GAAiB,CAAEjJ,eAAcS,aAAYE,cAAaE,gBATH,cAUtEyI,GAAQD,KAV8D,SAYhDE,GAAa,CAAEvJ,eAAcS,aAAYE,gBAZO,cAYhEwC,EAZgE,iBAahEiG,EAASD,GAAWhG,IAb4C,WAejEA,EAAQW,OAfyD,uBAgB9D,IAAI0F,MAAM,2BAhBoD,WAmBjErG,EAAQ4C,MAAK,SAAAzC,GAAC,OAAIA,EAAEqB,KAAKpG,MAnBwC,uBAoB9D,IAAIiL,MAAM,4DApBoD,2EAuBhEJ,EAASb,GAAS,EAAD,KAvB+C,mCAyBhEa,EFvBuC,CAAExD,KlBRV,+BoBMiC,4FAA3D,yD,uCCLF6D,GAAmB,SAAA9D,GAAK,OAAIA,EAAMxC,SAElCuG,GAAiB3B,aAAe0B,IAAkB,qBAAG1H,YAErD4H,GAAgB5B,aAAe0B,GAAkBC,IAAgB,WAAW9G,GAAX,IAAGd,EAAH,EAAGA,KAAH,OAC5E,YAAIA,GAAM8H,MAAK,SAACtG,EAAGuG,GAAJ,OAAWvG,EAAEoB,KAAO9B,GAAY,EAAIiH,EAAEnF,KAAO9B,EAAW,EAAI,QCHhEkH,GAAe,SAAA9I,GAAS,MAAK,CACxC4E,K3BJ4B,e2BK5BC,QAAS7E,ICKI,YAAA4B,GAAQ,+CAAI,WAAOwG,EAAUC,GAAjB,mCAAA/F,EAAA,+EAEjB8F,EAAS,CAAExD,KAAM,UAAWC,QAASjD,IAFpB,uBAGjBwG,EAASF,GAAYtG,IAHJ,UAKjB+C,EAAQ0D,IACdC,GAAQ3D,GANe,EAQuCkC,GAAoBlC,GAA1E3F,EARe,EAQfA,aAAcS,EARC,EAQDA,WAAYE,EARX,EAQWA,YAAaE,EARxB,EAQwBA,WACzCO,EAASuI,GAAchE,GAAOoE,MAAK,SAAA5F,GAAC,OAAIA,EAAEO,KAAO9B,KAThC,uBAWJ,IAAI4G,MAAJ,oBAXI,WAYlBpI,EAAOuD,KAAKpG,GAZM,uBAYwB,IAAIiL,MAAM,oDAZlC,QAcjBQ,EAAUxD,IAAOyD,8BAA8BC,8BAArC,eACb1D,IAAOyD,8BAA8BE,gBAAkB3D,IAAOyD,8BAA8BG,aAGzFpJ,EAAYgJ,EAAQK,uBACxB,IAAI7D,IAAO8D,+C5CDoB,iB4CG7B1H,EACAnC,EACAE,GAEC4J,gBAAgBvK,GAChBwK,cAAc3J,GACd4J,SAGCC,EA9BiB,oDA+BrB,aAAe,IAAD,8BACZ,eACAhM,OAAOiM,KAAKjM,OAAOkM,eAAelM,OAAOkM,eAAPlM,OAAA,KAAAA,CAAA,MAA8BmM,SAAQ,SAAAjF,GACtE,EAAKA,GAAQ,SAAAC,GAAO,OAAIuD,EAAS,CAAExD,KAAK,eAAD,OAAiBA,GAAQC,gBAHtD,EA/BO,UA8BAW,IAAOC,UAAUqE,0BAQlCC,EAAW,IAAIL,EACrB1J,EAAUgK,2BAA2BD,GAErC3B,EAASU,GAAa9I,IACtBoI,EAAST,GAAU,qBAEnB3H,EAAUiK,uBA5Ca,kDA8CvB7B,EAASb,GAAS,EAAD,KA9CM,0DAAJ,yDCTV2C,GAAuB,wEAAmC,GAAhCxG,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAM0B,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,UAArB,MAA2C,CAC7E3B,KbHiC,uBaIjCC,QAAS,CAAEnB,KAAIkB,OAAM0B,SAAQC,eAalB4D,GAAkB,SAAAzG,GAAE,MAAK,CACpCkB,Kbd+B,kBae/BC,QAASnB,IAGE0G,GAAoB,SAAC,GAAD,MAA+C,CAC9ExF,KbrBiC,oBasBjCC,QAAS,CAAEnB,GAFoB,EAAGA,GAEnBkB,KAFgB,EAAOA,KAEjB0B,OAFU,EAAaA,OAEfC,UAFE,EAAqBA,UAEZG,QAFT,EAAgCA,WChBlD,6DAAM,WAAO0B,EAAUC,GAAjB,eAAA/F,EAAA,+EAEX8F,EAAS,CAAExD,KAAM,eAFN,cAIX5E,EAAY0H,GAAgBW,KAJjB,SAMfrI,EAAUqK,oBANK,SAOT,IAAI7G,SAAQ,SAAA8G,GAAO,OAAIC,WAAWD,EAAS,QAPlC,wEAYjBtK,EAAUY,UAZO,UAcXwH,EHlB2B,CAAExD,K3BFP,mB8BMX,yBAeXwD,ENjByB,CAAExD,KjBJH,iBuBMb,yBAgBXwD,EAAS8B,MAhBE,2EAkBX9B,EAASb,GAAS,EAAD,KAlBN,iEAAN,yD,6BCJA,IAAEiD,G,QCIFC,QACZC,IAAIC,MACJD,IAAIE,MACJC,KAAK,CACJC,YAAa,KACbC,OAAO,EACPC,aAAc,IACdC,aAAa,EACbC,cAAe,CAAEC,aAAa,GAC9BC,eCVW,YAAAC,GAAM,+CAAI,WAAOjD,EAAUC,GAAjB,SAAA/F,EAAA,sDACvB,IACE8F,EAAS,2BAAKiD,GAAN,IAAczG,KAAM,WAC5BwD,EAAST,GAAU,oBACnBS,EdF+B,CAAExD,KpBNR,iBkCUP8C,GAAgBW,KACxBiD,cACV,MAAOzK,GACPuH,EAASb,GAAS1G,IATG,2CAAJ,yDCLR0K,GAAc,SAAA5G,GAAK,OAAIA,EAAMkB,OCM3B,YAAAwF,GAAM,+CAAI,WAAOjD,EAAUC,GAAjB,SAAA/F,EAAA,sDACvB,IACE8F,EAAS,2BAAKiD,GAAN,IAAczG,KAAM,iBAC5BwD,EAAST,GAAU,UACnBS,EAASZ,GAAW,CAAC,CAAE5C,KAAMtH,GAAmB,CAAEsH,KAAMtH,MAEtCoK,GAAgBW,KACxBgC,oBACV,MAAOxJ,GACPuH,EAASb,GAAS1G,IATG,2CAAJ,yDCJR2K,GAAe,SAAAzH,GAAK,MAAK,CACpCa,KjCH2B,eiCI3BC,QAASd,ICJE0H,GAAe,SAAA9G,GAAK,OAAIA,EAAMQ,QCE9BuG,GAAwB,SAAA/G,GAAK,OAAIA,EAAMsB,cAEvC0F,GAAqB5E,aAAe2E,IAAuB,gBAAGnH,EAAH,EAAGA,KAAH,OAAc7G,OAAOkO,OAAOrH,MAEvFsH,GAA0B9E,aAAe2E,IAAuB,gBAAGrH,EAAH,EAAGA,OAAH,SAAWE,KAAgBF,MAE3FyH,GAA8B/E,aAAe8E,IAAyB,SAAAxH,GAAM,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQO,QAExFmH,GAAgChF,aAC3C8E,IACA,SAAAxH,GAAM,QAAW,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQiC,SAAU,KAAY,OAANjC,QAAM,IAANA,OAAA,EAAAA,EAAQkC,YAAa,MAG7CyF,GAA4BjF,aAAe4E,IAAoB,SAAA1F,GAAY,OACtFA,EAAa/C,QAAO,SAAA+I,GAAC,OAAIA,EAAEvF,cAGhBwF,GAAmCnF,aAAeiF,IAA2B,SAAA/F,GAAY,OACpGA,EAAa/C,QAAO,SAAA+I,GAAC,OAAIA,EAAEzF,cAGhB2F,GAAwBpF,aAAe2E,IAAuB,qBAAGpH,QCV/D,YAAA+G,GAAM,+CAAI,WAAOjD,EAAUC,GAAjB,iCAAA/F,EAAA,+EAELmI,GAFK,UAEfwB,EAFe,OAGrB7D,EAAS,2BAAKiD,GAAN,IAAczG,KAAM,iBAEtBD,EAAQ0D,IACRlD,EAASsG,GAAa9G,GACtB3E,EAAY0H,GAAgB/C,GAC5ByH,EAAmBnF,GAAuBtC,GAC1CC,EAAOuH,GAAsBxH,GAEnCyD,EpBjB+B,CAAExD,KpBNR,iBwCwBzBwD,EAAST,GAAU,kBACnBS,EHnB8B,CAAExD,KjCNR,gBoC2BlB0B,GAAUnB,EAfK,uBAgBF,IAAIqD,MAAM,sBAhBR,YAiBjBvE,MAAMqC,GAjBW,uBAiBI,IAAIkC,MAAM,qBAjBd,aAkBjBlC,GAAU,GAAKA,EAAS,SAlBP,uBAkBwB,IAAIkC,MAAM,qBAlBlC,QAoBjB9E,EAAK8B,IAAO6G,SAASC,WACrB1H,IAASzG,IAEXuF,EAAKA,EAAG2B,MAAM,EAAG,KAGnB+C,EAAS8B,GAAqB,CAAExG,KAAIkB,OAAM0B,YA1BrB,KA4Bb1B,EA5Ba,cA6BdzG,EA7Bc,UAyCdA,EAzCc,2BA+BToH,EAAU,IAAIC,IAAOC,UAAU8G,aAC7BC,UAAUlG,GAClBf,EAAQkH,cAAc/I,GACtB6B,EAAQmH,oBAAoBN,GAE5BhE,EAASgC,GAAkB,CAAE1G,KAAIkB,KAAMzG,EAAkBmI,YAEzDtG,EAAU2M,KAAKpH,GAtCA,oCA2CTA,EAAU,IAAIC,IAAOC,UAAUmH,qBAC7BJ,UAAUlG,GAClBf,EAAQkH,cAAc/I,GACtB6B,EAAQmH,oBAAoBN,GAE5BhE,EAASgC,GAAkB,CAAE1G,KAAIkB,KAAMzG,EAAoBmI,YAE3DtG,EAAU6M,aAAatH,GAlDR,mCAsDX,IAAIiD,MAAJ,UAAayD,EAAE,kCAAf,aAAqDrH,IAtD1C,0DAyDrBwD,EAASb,GAAS,EAAD,KACjBa,EAAS,CAAExD,KAAM,8BA1DI,0DAAJ,yDCJN,YAAA8B,GAAO,+CAAI,WAAO0B,EAAUC,GAAjB,2BAAA/F,EAAA,kEAEtB8F,EAAS,CAAExD,KAAM,cAAeC,QAAS6B,IAEjChD,EAAsDgD,EAAtDhD,GAAIjD,EAAkDiG,EAAlDjG,kBAAmBqM,EAA+BpG,EAA/BoG,QAASxG,EAAsBI,EAAtBJ,OAAQC,EAAcG,EAAdH,UAC1CvG,EAAY0H,GAAgBW,KAElCD,ErBT+B,CAAExD,KpBNR,iByCgBzBwD,EAAST,GAAU,qBACdjE,EATiB,sBASP,IAAI8E,MAAM,4BATH,OAYtBJ,EAAS8B,GAAqB,CAAExG,GAAIjD,EAAmBmE,KAD1CzG,EACgDmI,SAAQC,gBAE/DhB,EAAU,IAAIC,IAAOC,UAAUsH,oBAC7BC,aAAatJ,GACrB6B,EAAQ0H,WAAWH,GACnBvH,EAAQ2H,cAAc1H,IAAOlF,MAAM6M,WAAWC,aAC9CpN,EAAUqN,YAAY9H,GAlBA,kDAoBtB6C,EAASb,GAAS,EAAD,KACjBa,EAAS,CAAExD,KAAM,8BArBK,0DAAJ,yDzDHtB,IACEvH,EAAeuB,KAAKN,MAAMO,KAAKC,aAAaC,QAAQb,IAAY,mBAAgB6B,EAChF,MAAOc,IACPyM,QAAQC,KAAK,0CAA2C1M,IAH1D,QAKExD,EAAeA,QAAgB0C,EAGjC,IAAMyN,G0DTS,SAAAnQ,GACb,IAAMoQ,EAAaC,YAAgBC,KAG7BC,EAAWrP,OAAOsP,6BAClBC,EAAWF,EAAWA,IAAa,SAAAG,GAAC,OAAIA,GAE9C,OAAOC,YAAYxJ,GAAanH,EAAc4Q,YAAQR,EAAYK,I1DEtDE,CAAY3Q,GAEpB6Q,GAASrH,GAAoB2G,GAAMnF,YACzCmF,GAAMpF,SAAS+F,GAAUD,KAEVV,I,GAAAA,M,S2DfFY,GAAgB,SAAAzJ,GAAK,OAAIA,EAAMD,SAE/B2J,GAA0BtH,aAAeqH,IAAe,SAAA1J,GAAO,OAC1EA,EAAQqE,MAAK,SAAAzG,GAAC,OAAIA,EAAEsC,OAAStH,QAGlBgR,GAA8BvH,aAAeqH,IAAe,SAAA1J,GACvE,IAAM5G,EAAM4G,EAAQxB,QAAO,SAAAZ,GAAC,OAAIA,EAAEsC,OAAStH,KAC3C,GAAmB,IAAfQ,EAAIgF,OAAc,CAAC,IAAD,mBACLhF,EADK,GACbwE,EADa,KACVuG,EADU,KAEpB,GAA+B,QAA3B,UAAAvG,EAAEuC,eAAF,eAAWG,cAAmD,SAA3B,UAAA6D,EAAEhE,eAAF,eAAWG,aAChD,MAAO,CAAC6D,EAAGvG,GAGf,OAAOxE,KChBIyQ,GAAkB,SAAA5J,GAAK,OAAIA,EAAMmB,WAEjC0I,GAAwBzH,aAAewH,IAAiB,YAAkB,IAC/EE,EAD8E,EAAdrN,QAEnEvD,KAAI,qBAAG6Q,UACP9K,OACAhB,QACC,WAAiB+L,GAAjB,IAAGC,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGC,EAAT,EAASA,EAAGC,EAAZ,EAAYA,EAAZ,MAA4B,CAC1BH,EAAGI,KAAKC,IAAIL,EAAGD,EAAMC,GACrBC,EAAGG,KAAKE,IAAIL,EAAGF,EAAMC,GACrBE,EAAGE,KAAKC,IAAIH,EAAGH,EAAMG,GACrBC,EAAGC,KAAKE,IAAIH,EAAGJ,EAAMG,MAEvB,CAAEF,EAAGO,IAAUN,GAAIM,IAAUL,EAAGK,IAAUJ,GAAII,MAElD,MAAO,CAACV,EAAOG,EAAGH,EAAOK,EAAGL,EAAOI,EAAIJ,EAAOG,EAAGH,EAAOM,EAAIN,EAAOK,GAAGM,KAAK,QAGhEC,GAAuBtI,aAAewH,IAAiB,qBAAGnN,QAC7DvD,KAAI,qBAAG6Q,OAAoB7Q,KAAI,gBAAG+Q,EAAH,EAAGA,EAAGE,EAAN,EAAMA,EAAN,gBAAiBF,EAAjB,YAAsBE,MAAKM,KAAK,WCrB5DE,GAAe,SAAA3K,GAAK,OAAIA,EAAMoB,Q,gFCG9BwJ,GAAgBxI,aAC3BW,GACAiB,IACA,SAAC3I,EAAWmC,GAAZ,OAAyBnC,IAAcmC,EAAQW,UCJlC,eAAwE,IAArEY,EAAoE,EAApEA,GAAoE,IAAhEkB,YAAgE,MAAzD,OAAyD,EAAjD4K,EAAiD,EAAjDA,MAAOzL,EAA0C,EAA1CA,MAAO0L,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAaC,EAAY,oEACpF,OACE,yBAAKC,UAAU,cACb,2BAAOC,QAASnM,GAAK8L,EAArB,KACA,yCACE9L,GAAIA,EACJkB,KAAMA,EACNgL,UAAU,eACV7L,MAAOA,EACP2L,SAAU,SAAAI,GAAK,OAAIJ,EAASI,EAAMC,OAAOhM,QACzC0L,SAAUA,GACNE,MCVG,eAAkF,IAA/EjM,EAA8E,EAA9EA,GAAI8L,EAA0E,EAA1EA,MAAOQ,EAAmE,EAAnEA,QAASN,EAA0D,EAA1DA,SAAUD,EAAgD,EAAhDA,SAAkBQ,EAA8B,EAAtCC,OAAkBC,EAAoB,EAApBA,IAAQR,EAAY,8EAC9F,OACE,yBAAKC,UAAWQ,KAAW,aAAc,CAAE,OAAQD,KACjD,yBAAKP,UAAWQ,KAAW,iBAAkB,CAAE,gBAAiBH,EAAU,mBAAoBA,KAC5F,yCACEvM,GAAIA,EACJkB,KAAK,WACLgL,UAAU,uBACVI,QAASA,EACTN,SAAU,kBAAMA,GAAUM,IAC1BP,SAAUA,GACNE,IAEN,2BAAOC,UAAU,0CAA0CC,QAASnM,GACjE8L,MCdI,eAAoB,IAAD,IAAhB7M,YAAgB,MAAT,GAAS,EACxBsJ,EAAMoE,eAANpE,EACR,OACE,yBACE2D,UAAU,OACVlM,GAAG,kBACH4M,MAAM,6BACNpP,MAAOyB,EACPxB,OAAQwB,EACR4N,QAAQ,kBACRC,kBAAgB,iBAChBC,KAAK,SAEL,2BAAO/M,GAAG,kBAAkBuI,EAAE,WAC9B,uBAAGvI,GAAG,kBAAkBgN,YAAU,iBAChC,0BAAMvN,EAAE,oDAAoDwN,UAAU,8BACtE,0BAAMxN,EAAE,qDAAqDwN,UAAU,8BACvE,0BAAMxN,EAAE,oDAAoDwN,UAAU,8BACtE,0BACExN,EAAE,0HACFwN,UAAU,iCCbL,cAAO,IACZ1E,EAAMoE,eAANpE,EACF7D,EAAWwI,cACX3R,EAAgB4R,YAAYhK,IAC5B/G,EAAU+Q,YAAYvJ,IACtBd,EAAUqK,YAAYtB,IALT,EAOqBuB,mBAAS7R,EAAcD,cAP5C,oBAOZA,EAPY,KAOE+R,EAPF,OAQiBD,mBAAS7R,EAAcQ,YARxC,oBAQZA,EARY,KAQAuR,EARA,OASmBF,mBAAS7R,EAAcU,aAT1C,oBASZA,EATY,KASCsR,EATD,OAUiBH,mBAAS7R,EAAcY,YAVxC,oBAUZA,EAVY,KAUA2J,EAVA,OAYiBsH,oBAAS,GAZ1B,oBAYZI,EAZY,KAYAC,EAZA,KAcb1B,EAAW2B,mBAAQ,kBAAMtR,GAAWoR,IAAY,CAACpR,EAASoR,IAE1DG,EAASC,sBAAW,wCACxB,WAAMxB,GAAN,SAAAxN,EAAA,sEAEIwN,EAAMyB,iBACNJ,GAAc,GAHlB,SAIU/I,EAAS+F,GAAU,CAAEnP,eAAcS,aAAYE,cAAaE,gBAJtE,uBAMIsR,GAAc,GANlB,uEADwB,sDAUxB,CAAC/I,EAAUpJ,EAAcS,EAAYE,EAAaE,IAG9C2R,EAAQF,uBACZ,SAAAxB,GACEA,EAAMyB,iBACNR,EAAgB9R,EAAcD,cAC9BgS,EAAc/R,EAAcQ,YAC5BwR,EAAehS,EAAcU,aAC7B6J,EAAcvK,EAAcY,cAE9B,CAACZ,EAAe8R,EAAiBC,EAAeC,EAAgBzH,IAGlE,OAAKhD,EAGH,0BAAMiL,SAAUJ,EAAQK,QAASF,GAC/B,kBAACG,GAAA,EAAD,CAAM/B,UAAU,iBACd,kBAACgC,GAAA,EAAD,KACE,kBAACC,GAAD,MACA,4BAAK5F,EAAE,oBAERnM,GACC,kBAACgS,GAAA,EAAD,KACE,2CAGFhS,GACA,oCACE,kBAACgS,GAAA,EAAD,KACE,kBAACC,GAAD,CACErO,GAAG,eACHkB,KAAK,MACL4K,MAAOvD,EAAE,iBACT+F,YAAY,MACZC,aAAa,MACbC,eAAe,MACfC,WAAW,QACXpO,MAAO/E,EACP0Q,SAAUqB,EACVtB,SAAUA,IAEZ,kBAACsC,GAAD,CACErO,GAAG,aACH8L,MAAOvD,EAAE,eACTmG,QAAQ,oBACRJ,YAAY,MACZC,aAAa,MACbC,eAAe,MACfC,WAAW,QACXpO,MAAOtE,EACPiQ,SAAUsB,EACVvB,SAAUA,IAEZ,kBAACsC,GAAD,CACErO,GAAG,cACH8L,MAAOvD,EAAE,gBACTmG,QAAQ,yDACRJ,YAAY,MACZC,aAAa,MACbC,eAAe,MACfC,WAAW,QACXpO,MAAOpE,EACP+P,SAAUuB,EACVxB,SAAUA,IAEZ,kBAACsC,GAAD,CACErO,GAAG,aACH8L,MAAOvD,EAAE,eACTlI,MAAOlE,EACP6P,SAAUlG,EACViG,SAAUA,KAGd,kBAAC4C,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQ1N,KAAK,SAAS2N,MAAM,UAAU9C,SAAUA,GAC7CxD,EAAE,WAEL,kBAACqG,GAAA,EAAD,CAAQ1N,KAAK,QAAQ2N,MAAM,YAAY3C,UAAU,OAAOH,SAAUA,GAC/DxD,EAAE,cAlEI,MC9CVsD,GAAgBxI,aAC3BW,GACAiB,IACA,SAAC3I,EAAWmC,GAAZ,OAAyBnC,KAAemC,EAAQW,UCDnC,eAA4C,IAAzC1C,EAAwC,EAAxCA,OAAQiE,EAAgC,EAAhCA,OAAQoL,EAAwB,EAAxBA,SAAU+C,EAAc,EAAdA,QAClCvG,EAAMoE,eAANpE,EAEFwG,EAAQrS,EAAOuD,KAAKpG,GACpBmV,EAAsBzG,EAARwG,EAAU,iCAAsC,sCAEpE,OACE,4BACEE,IAAKvS,EAAOsD,GACZkB,KAAK,SACLgL,UAAWQ,KACT,+FACA,CACEX,WACA,2BAA4BA,GAAYpL,IAG5CmO,QAASA,GAET,yBAAK5C,UAAU,OACZxP,EAAOwS,MAAQ,yBAAKhD,UAAU,oBAAoBxP,EAAOwS,MACzDxS,EAAOiD,YAFV,IAEwBjD,EAAOyS,QAE/B,0BACEjD,UAAWQ,KAAW,YAAa,CACjC,kBAAmBX,EACnB,iBAAkBA,GAAYgD,EAC9B,iBAAkBhD,IAAagD,IAEjChC,KAAK,MACLqC,aAAYJ,EACZK,MAAOL,GART,kBCnBS,cAAO,IACZzG,EAAMoE,eAANpE,EACF7D,EAAWwI,cACXzO,EAAU0O,YAAYlI,IACtB/G,EAAWiP,YAAYnI,IACvBlC,EAAUqK,YAAYtB,IALT,EAMauB,qBANb,oBAMZrB,EANY,KAMFuD,EANE,KAQbC,EAAS3B,uBACb,SAAA5N,GAAE,+CAAI,WAAMoM,GAAN,SAAAxN,EAAA,sEAEFwN,EAAMyB,iBACNyB,GAAY,GAHV,SAII5K,EAAS8K,GAAQxP,IAJrB,uBAMFsP,GAAY,GANV,uEAAJ,wDASF,CAAC5K,IAKH,OAAK5B,EAGH,kBAACmL,GAAA,EAAD,CAAM/B,UAAU,WACd,kBAACgC,GAAA,EAAD,KACE,kBAACC,GAAD,MACA,4BAAK5F,EAAE,mBACP,4BAAQ2D,UAAU,mBAAmBmD,MAAO9G,EAAE,UAAWuG,QAThD,kBAAMpK,E5B3BY,CAAExD,KjBJH,kB6CwCgD6K,SAAUA,GAApF,SAIF,kBAACqC,GAAA,EAAD,KACE,yBAAKlC,UAAU,cACb,+BAAQ3D,EAAE,kBAAV,KACA,yBAAK2D,UAAU,cACZzN,EAAQtE,KAAI,SAAAuC,GAAM,OACjB,kBAAC+S,GAAD,CACER,IAAKvS,EAAOsD,GACZtD,OAAQA,EACRqP,SAAUA,EACVpL,OAAQjE,EAAOsD,KAAO9B,EACtB4Q,QAASS,EAAO7S,EAAOsD,aArBhB,MClBV0P,IAAc,qBACxB9V,GCXY,SAAA+N,GAAM,+CAAI,WAAOjD,EAAUC,GAAjB,SAAA/F,EAAA,sDACvB,IACE8F,EAAS,2BAAKiD,GAAN,IAAczG,KAAM,mBAC5BwD,EAAST,GAAU,4BACnBS,EnCF+B,CAAExD,KpBNR,iBuDUP8C,GAAgBW,KACxBgL,cAAchI,EAAOxG,QAAQ6B,SACvC,MAAO7F,IACPuH,EAASb,GAAS1G,KATG,2CAAJ,2DDUM,eAExBvD,GETY,SAAA+N,GAAM,+CAAI,WAAOjD,EAAUC,GAAjB,iBAAA/F,EAAA,sDACvB,IACE8F,EAAS,2BAAKiD,GAAN,IAAczG,KAAM,qBAC5BwD,EAAST,GAAU,8BACnBS,EpCL+B,CAAExD,KpBNR,iBwDYzBwD,ECXiC,CAAExD,K7CFR,mB4CerB5E,EAAY0H,GAAgBW,MAC5B9C,EAAU,IAAIC,IAAOC,UAAU6N,wBAC7BC,WAAWlI,EAAOxG,QAAQ6B,SAClC1G,EAAUwT,gBAAgBjO,GAC1B,MAAO1E,IACPuH,EAASb,GAAS1G,KAZG,2CAAJ,2DFOM,eAGxBvD,EAAoBmW,IAHI,eAIxBnW,GIXY,SAAA+N,GAAM,+CAAI,WAAOjD,EAAUC,GAAjB,qBAAA/F,EAAA,+EAELmI,GAFK,OAEfwB,EAFe,OAGrB7D,EAAS,2BAAKiD,GAAN,IAAczG,KAAM,cAC5BwD,EAAST,GAAU,sBACnBS,EACEZ,GAAW,CACT,CAAE5C,KAAMtH,EAAqBuH,QAAS,CAAEG,YAAa,OACrD,CAAEJ,KAAMtH,EAAmBuH,QAAS,CAAEG,YAAa,cAIjDL,EAAQ0D,IACRrI,EAAY0H,GAAgB/C,GAC5B9E,EAAaiH,GAAiBnC,GAEpC3E,EAAU0T,YAAV,UAAyB7T,EAAzB,YAAuCoM,EAAE,eAhBpB,kDAkBrB7D,EAASb,GAAS,EAAD,KAlBI,0DAAJ,2DJOM,eAKxBjK,GKfY,SAAA+N,GAAM,+CAAI,WAAOjD,EAAUC,GAAjB,iBAAA/F,EAAA,sDACvB,IACE8F,EAAS,2BAAKiD,GAAN,IAAczG,KAAM,uBAEtB5E,EAAY0H,GAAgBW,MAC5B9C,EAAU,IAAIC,IAAOC,UAAUkO,aAC7BC,eAAevI,EAAOxG,QAAQG,aACtCO,EAAQsO,YAAYxI,EAAOxG,QAAQiP,UACnC9T,EAAU+T,kBAAkBxO,GAC5B,MAAO1E,IACPuH,EAASb,GAAS1G,KAVG,2CAAJ,2DLUM,eAMxBvD,GMhBY,SAAA+N,GAAM,+CAAI,WAAOjD,EAAUC,GAAjB,SAAA/F,EAAA,sDACvB,IACE8F,EAAS,2BAAKiD,GAAN,IAAczG,KAAM,mBAC5BwD,EAAST,GAAU,4BACnBS,ExCF+B,CAAExD,KpBNR,iB4DUP8C,GAAgBW,KACxB2L,cAAc3I,EAAOxG,QAAQ6B,QAAS2E,EAAOxG,QAAQmB,WAAW,IAC1E,MAAOnF,IACPuH,EAASb,GAAS1G,KATG,2CAAJ,2DNUM,eAOxBvD,GOdY,SAAA+N,GAAM,+CAAI,WAAOjD,EAAUC,GAAjB,iBAAA/F,EAAA,sDACvB,IACE8F,EAAS,2BAAKiD,GAAN,IAAczG,KAAM,qBAC5BwD,EAAST,GAAU,8BACnBS,EzCL+B,CAAExD,KpBNR,iB6DYzBwD,EJXiC,CAAExD,K7CFR,mBiDerB5E,EAAY0H,GAAgBW,MAC5B9C,EAAU,IAAIC,IAAOC,UAAU6N,wBAC7BC,WAAWlI,EAAOxG,QAAQ6B,SAClC1G,EAAUiU,gBAAgB1O,GAC1B,MAAO1E,IACPuH,EAASb,GAAS1G,KAZG,2CAAJ,2DPOM,eAQxBvD,EAAekU,IARS,eASxBlU,EAAsB4W,IATE,eAUxB5W,EAAqB6W,IAVG,eAWxB7W,GAA0B,gBAAGuH,EAAH,EAAGA,QAAH,MxBCoB,CAC/CD,KbvB+B,qBawB/BC,QwBH+DA,ExBC5BP,SwBZV,IAcd8P,GAAO,CAClBjW,YAAa,cACbkW,QAAS,WQ5BE9E,GAAgBxI,aAAeW,IAAiB,SAAA1H,GAAS,QAAMA,K,UCC7D,eAAgC,IAAD,IAA5BkB,aAA4B,MAApB,IAAoB,EAAZyO,EAAY,0BACtClB,EAASoC,YAAYrC,IACrB8F,EAAQzD,YAAYxB,IAE1B,OAAKiF,EAAMxR,OAGT,yBAAK8M,UAAU,aACb,uCAAKW,QAAS9B,EAAQvN,MAAOA,GAAWyO,GACrC2E,EAAMzW,KAAI,SAAC6Q,EAAQnL,GAAT,OACT,8BAAUoP,IAAKpP,EAAGmL,OAAQA,EAAQ6F,KAAK,OAAOC,OAAO,eANnC,MCAb,cAAO,IACZvI,EAAMoE,eAANpE,EACFlG,EAAS8K,YAAYvB,IACrBnK,EAAS0L,YAAYpF,IACrBgJ,EAAW5D,YAAY/E,IACvB4I,EAAa7D,YAAY9E,IAEzB4I,EAAmBvD,mBAAQ,WAC/B,IAAMwD,EAAU7O,EAAO8O,MAAM,iEAC7B,GAAID,EAAS,CAAC,IACHtO,EADE,aACQsO,EADR,MAEX,OACE,kBAACE,GAAA,EAAD,CAAOC,QAAQ,+BAA+BzO,OAAQA,GAAtD,6BAC6B,CAAEA,UAD/B,8BAMJ,IAAM0O,EAAajP,EAAO8O,MAAM,2CAChC,GAAIG,EAAY,CAAC,IACNC,EADK,aACID,EADJ,MAEd,OACE,kBAACF,GAAA,EAAD,CAAOC,QAAQ,gCAAgCE,MAAOA,GAAtD,6BAC6B,CAAEA,SAD/B,UAKJ,OAAOhJ,EAAE,CAAC,UAAD,OAAWlG,GAAUA,MAC7B,CAACA,EAAQkG,IAEZ,OACE,yBAAK2D,UAAU,kCACV8E,GACD,yBAAK9E,UAAU,kGACb,yBAAKA,UAAU,eAAe3D,EAAE,CAAC,eAAD,OAAgBwI,GAAYA,KAC5D,yBAAK7E,UAAU,oBAAoB9L,GAAS4Q,MAG9CvP,GAAU,6BAAMwP,GAClB,kBAACO,GAAD,MACC/P,GAAU,yBAAKyK,UAAU,cAAczK,GACvCA,GAAU,wBAAIyK,UAAU,cAAc9L,GAASqB,M,kDC5CvCgQ,yBACb,WAEEC,GACI,IAFF/J,EAEC,EAFDA,OAAQlK,EAEP,EAFOA,OAAQoR,EAEf,EAFeA,MAAO8C,EAEtB,EAFsBA,SAAU5F,EAEhC,EAFgCA,SAAU+C,EAE1C,EAF0CA,QAAS8C,EAEnD,EAFmDA,YAAaC,EAEhE,EAFgEA,SAAUC,EAE1E,EAF0EA,YAAaC,EAEvF,EAFuFA,SAAa9F,EAEpG,8HACK1D,EAAMoE,eAANpE,EADL,EAEqB6E,oBAAS,GAF9B,oBAEI4E,EAFJ,KAEUC,EAFV,KAIGC,EAAStE,uBAAY,kBAAMqE,GAAQ,SAAAzP,GAAG,OAAKA,OAAM,CAACyP,IAExDE,qBAAU,WACR,IAAKpG,EAAU,CACb,IAAMqG,EAAU,SAAAhG,GACd,OAAIuF,EAAS/V,SAASwQ,EAAMiG,QAC1BjG,EAAMyB,iBACNiB,KACO,IAKX,OADAtT,SAAS8W,iBAAiB,UAAWF,GAC9B,kBAAM5W,SAAS+W,oBAAoB,UAAWH,OAGtD,CAACrG,EAAU4F,EAAU7C,IAExB,IAAMzO,EAAQqN,mBAAQ,WAAO,IAAD,EACpBuB,GAAY,OAANtH,QAAM,IAANA,GAAA,UAAAA,EAAQxG,eAAR,eAAiBG,eAAjB,OAAgCqG,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAQzG,MACpD,OAAO+N,EAAM1G,EAAE,CAAC,UAAD,OAAW0G,GAAOA,IAAQ8C,IACxC,CAACpK,EAAQoK,EAAUxJ,IAEhB8G,EAAQ3B,mBACZ,iBAAM,CAACnF,EAAE,iBAAkBoJ,EAASxX,KAAI,SAAAqY,GAAC,OAAIjK,EAAE,CAAC,YAAD,OAAaiK,GAAKA,OAAK9G,KAAK,OAAOA,KAAK,QACvF,CAACiG,EAAUpJ,IAGb,OAAIZ,IAAM,OAAIiK,QAAJ,IAAIA,OAAJ,EAAIA,EAAaxS,QAEvB,kBAACqT,GAAA,EAAD,CAAgBC,OAAQV,EAAME,OAAQA,GACpC,kBAACtD,GAAA,EAAD,eACEC,MAAM,OACN3C,UAAU,sBACV4C,QAASA,EACT/C,SAAUA,EACVsD,MAAOA,GACHpD,GAEH5L,GAAS,uCAEZ,kBAACsS,GAAA,EAAD,CAAgBC,OAAK,EAAC/D,MAAM,OAAO3C,UAAU,SAASH,SAAUA,IAChE,kBAAC8G,GAAA,EAAD,CAAc3G,UAAU,UAAU4G,OAAK,GACpClB,EAAYzX,KAAI,SAACyE,EAAGiB,GAAJ,eACf,kBAACkT,GAAA,EAAD,CAAc9D,IAAKpP,EAAGqM,UAAU,qBAAqB4C,QAAS,kBAAMgD,EAAYlT,KAC7E2J,EAAE,CAAC,UAAD,QAAW,UAAA3J,EAAEuC,eAAF,eAAWG,cAAe1C,EAAEsC,OAAQ,UAAAtC,EAAEuC,eAAF,eAAWG,cAAe1C,EAAEsC,cAQ1F,OAAI0Q,QAAJ,IAAIA,OAAJ,EAAIA,EAAaxS,QAEb,yBAAK8M,UAAU,yCACb,kBAACuG,GAAA,EAAD,CAAgBC,OAAQV,EAAME,OAAQA,GACpC,kBAACS,GAAA,EAAD,CAAgBC,OAAK,EAAC/D,MAAM,OAAOmE,SAAO,EAAC/T,KAAK,KAAKiN,UAAU,cAC5D2F,GAEH,kBAACgB,GAAA,EAAD,CAAcC,OAAK,EAAC5G,UAAU,WAC3B0F,EAAYzX,KAAI,SAACyE,EAAGiB,GAAJ,eACf,kBAACkT,GAAA,EAAD,CAAc9D,IAAKpP,EAAGqM,UAAU,qBAAqB4C,QAAS,kBAAMgD,EAAYlT,KAC7E2J,EAAE,CAAC,UAAD,QAAW,UAAA3J,EAAEuC,eAAF,eAAWG,cAAe1C,EAAEsC,OAAQ,UAAAtC,EAAEuC,eAAF,eAAWG,cAAe1C,EAAEsC,aAKtF,kBAAC0N,GAAA,EAAD,eACEoE,SAAO,EACPnE,MAAM,OACN3C,UAAWQ,KAAW,QAAD,eAAkBmC,GAAS,UAChDC,QAASA,EACT/C,SAAUA,EACVsD,MAAOA,GACHpD,GAEH5L,GAAS,wCAOhB,kBAACuO,GAAA,EAAD,eACEqE,SAAUvB,EACVwB,MAAO,CAAEzV,UACTuV,SAAUrL,EACVkH,MAAM,OACN3C,UAAWQ,KAAW,QAAD,OAASmC,GAAS,SAAW,CAAElH,WACpDoE,SAAUA,EACV+C,QAASA,EACTO,MAAOA,GACHpD,GAEH5L,MC3FM,cAAO,IACZkI,EAAMoE,eAANpE,EACF7D,EAAWwI,cACXlM,EAAUmM,YAAYvC,IACtBuI,EAAoBhG,YAAYxC,IAChCyI,EAAkBjG,YAAY1E,IALjB,EAOuB2E,oBAAS,GAPhC,oBAOZiG,EAPY,KAOGC,EAPH,KAQbC,EAAe7F,mBAAQ,kBAAOyF,GAAqBE,IAAe,CAACF,EAAmBE,IAEtFG,EAAW5F,sBAAW,wCAC1B,WAAMjG,GAAN,SAAA/I,EAAA,6DACE0U,GAAiB,GACb3L,EAAOzG,OAAStH,GAA8B+N,EAAOzG,OAAStH,GAChEiN,YAAW,kBAAMyM,GAAiB,KAAQ,KAH9C,SAKQ5O,EAASgL,GAAe/H,EAAOzG,MAAMyG,IAL7C,2CAD0B,sDAQ1B,CAACjD,EAAU4O,IAGPG,EAAgB,SAAA9L,GAAM,8BAAI,sBAAA/I,EAAA,+EAAY4U,EAAS7L,IAArB,4CAEhCwK,qBAAU,WACJnR,EAAQ5B,QAAQkU,GAAiB,KACpC,CAACA,EAAkBtS,IAEtB,IAAM0S,EAASC,mBA3BI,EA4BevG,qBA5Bf,oBA4BZwG,EA5BY,KA4BDC,EA5BC,KA6BnB1B,qBAAU,WACJuB,EAAOI,SACTD,EAAaH,EAAOI,QAAQC,eAE7B,CAACL,EAAQG,IAjCO,mBAmCwB7S,GAApCgT,EAnCY,KAmCHC,EAnCG,KAmCSrC,EAnCT,WAqCnB,OACE,yBAAK1F,UAAU,QACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAACgI,GAAD,CACEvM,OAAQqM,GAAW,GACnBjI,UAAWiI,GAAWX,EACtB1B,SAAU,CAAC,KAAM,gBACjB7C,QAAS2E,EAAcO,MAG3B,yBAAK9H,UAAU,aACb,kBAACgI,GAAD,CACEvM,OAAQsM,GAAW,GACnBlI,UAAWkI,GAAWZ,EACtB1B,SAAU,CAAC,KAAM,kBACjB7C,QAAS2E,EAAcQ,GACvBrC,YAAaA,EACbE,YAAa,SAAAnK,GAAM,OAAI6L,EAAS7L,QAItC,yBAAKuE,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAACgI,GAAD,CACExC,IAAKgC,EACLjW,OAAQmW,EACR7H,SAAUwH,EACV5B,SAAU,CAAC,UAAW,UACtB7C,QAAS,kBAAMpK,EAASoD,GAAa,QAEpCS,EAAE,WAGP,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CAAKnI,SAAUwH,EAAc5B,SAAU,CAAC,UAAW,UAAW7C,QAAS,kBAAMpK,EAASoD,GAAa,QAChGS,EAAE,WAGP,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CAAKnI,SAAUwH,EAAc5B,SAAU,CAAC,UAAW,UAAW7C,QAAS,kBAAMpK,EAASoD,GAAa,QAChGS,EAAE,WAGP,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CACErF,MAAM,SACN9C,SAAUwH,EACV5B,SAAU,CAAC,iBAAkB,UAC7B7C,QAAS,kBAAMpK,E7BhGO,CAAExD,KjCNR,kB8DwGfqH,EAAE,YAIT,yBAAK2D,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAACgI,GAAD,CACEzW,OAAQmW,EACR7H,SAAUwH,EACV5B,SAAU,CAAC,UAAW,UACtB7C,QAAS,kBAAMpK,EAASoD,GAAa,QAEpCS,EAAE,WAGP,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CAAKnI,SAAUwH,EAAc5B,SAAU,CAAC,UAAW,UAAW7C,QAAS,kBAAMpK,EAASoD,GAAa,QAChGS,EAAE,WAGP,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CAAKnI,SAAUwH,EAAc5B,SAAU,CAAC,UAAW,UAAW7C,QAAS,kBAAMpK,EAASoD,GAAa,QAChGS,EAAE,WAGP,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CACErF,MAAM,UACN9C,SAAUwH,EACV5B,SAAU,CAAC,YAAa,YAAa,UACrC7C,QAAS,kBAAMpK,E7BzHM,CAAExD,KjCXR,iB8DsIdqH,EAAE,YAIT,yBAAK2D,UAAU,kBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAACgI,GAAD,CACEzW,OAAQmW,EACR7H,SAAUwH,EACV5B,SAAU,CAAC,UAAW,UACtB7C,QAAS,kBAAMpK,EAASoD,GAAa,QAEpCS,EAAE,WAGP,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CAAKnI,SAAUwH,EAAc5B,SAAU,CAAC,UAAW,UAAW7C,QAAS,kBAAMpK,EAASoD,GAAa,QAChGS,EAAE,WAGP,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CAAKnI,SAAUwH,EAAc5B,SAAU,CAAC,UAAW,UAAW7C,QAAS,kBAAMpK,EAASoD,GAAa,QAChGS,EAAE,YAIT,yBAAK2D,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAACgI,GAAD,CACEzW,OAAQmW,EACR7H,SAAUwH,EACV5B,SAAU,CAAC,UAAW,UACtB7C,QAAS,kBAAMpK,EAASoD,GAAa,QAEpCS,EAAE,WAGP,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CACEnI,SAAUwH,EACV5B,SAAU,CAAC,gBAAiB,UAC5B7C,QAAS,kBAAMpK,EAASoD,GAAa,SAEpCS,EAAE,cAKX,yBAAK2D,UAAU,aACb,kBAACgI,GAAD,CACErF,MAAM,UACN9C,SAAUwH,EACV5B,SAAU,CAAC,cAAe,SAC1B7C,QAAS,kBAAMpK,EAAS+L,OACxBoB,SAAUtJ,EAAE,CAAC,eAAD,OAAgB6K,GAAmBA,IAC/CxB,YAAa,CACX,CACE1Q,KAAMtH,EACNuH,QAAS,CAAEG,YAAa,mBAAoBV,KAAMnG,IAEpD,CACEyG,KAAMtH,EACNuH,QAAS,CAAEG,YAAa,qBAAsBV,KAAMnG,KAGxDqX,YAAa,SAAAnK,GAAM,OAAI6L,EAAS7L,KAE/BY,EAAE,cCrMA,eAAwB,IAArB3H,EAAoB,EAApBA,KAAMuT,EAAc,EAAdA,QACd5L,EAAMoE,eAANpE,EACF7D,EAAWwI,cAFmB,EAGZE,oBAAS,GAHG,oBAG7B4E,EAH6B,KAGvBC,EAHuB,KAI9BC,EAAStE,uBAAY,kBAAMqE,GAASD,KAAO,CAACA,EAAMC,IAClDmC,EAAgBxG,uBAAY,kBAAMlJ,EAAS8L,QAAgB,CAAC9L,IAC5DsJ,EAAUJ,uBAAY,kBAAMlJ,EAASoJ,QAAU,CAACpJ,IAChD2P,EAAezG,uBAAY,kBAAMlJ,EAASqL,QAAe,CAACrL,IAEhE,OACE,kBAAC+N,GAAA,EAAD,CAAgBC,OAAQV,EAAME,OAAQA,GACpC,kBAACS,GAAA,EAAD,CAAgB1T,KAAK,KAAK+T,SAAO,EAACnE,MAAM,OAAO3C,UAAU,aAAa4C,QAASoD,EAAQ7C,MAAO9G,EAAE,SAAhG,UAGA,kBAACsK,GAAA,EAAD,CAAcC,OAAK,GAChB9Y,OAAOkO,OAAOwI,IAAMvW,KAAI,SAAAma,GAAC,OACxB,kBAACvB,GAAA,EAAD,CAAc9D,IAAKqF,EAAGxF,QAAS,kBAAMqF,EAAQG,KAC3C,kBAACC,GAAD,CAAevU,GAAE,eAAUsU,GAAKxI,MAAOvD,EAAE,CAAC,QAAD,OAAS+L,GAAKA,IAAKhI,QAASgI,IAAM1T,EAAM4T,UAAQ,EAAC/H,KAAG,QAGjG,kBAACsG,GAAA,EAAD,CAAc0B,SAAO,IACrB,kBAAC1B,GAAA,EAAD,CAAcjE,QAASsF,GAAgB7L,EAAE,iBACzC,kBAACwK,GAAA,EAAD,CAAcjE,QAASd,GAAUzF,EAAE,iBACnC,kBAACwK,GAAA,EAAD,CAAcjE,QAASuF,GAAe9L,EAAE,kB,8BChCjC,eAAqC,IAAlC3F,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAWG,EAAc,EAAdA,QAC7B0R,GAAS9R,GAAU,IAAMC,GAAa,GACtC8R,IAAgB,OAAP3R,QAAO,IAAPA,OAAA,EAAAA,EAASJ,SAAU,KAAa,OAAPI,QAAO,IAAPA,OAAA,EAAAA,EAASH,YAAa,GAG9D,MAAO,CAAE6R,QAAOC,QAAOzD,QAFPwD,EAAQC,EAEQC,UADdF,EAAQC,ICMb,eAAsB,IAAD,IAAlBlE,EAAkB,EAAlBA,YAAkB,EACRA,GAAe,GAAjCvP,EAD0B,EAC1BA,KAAM8B,EADoB,EACpBA,QACNuF,EAAMoE,eAANpE,EACF7D,EAAWwI,cACT2H,EAAgBC,sBAAhBD,YAEFE,EAAUC,GAAavE,GAEvBwE,EAAW,wCAAG,sBAAArW,EAAA,+EAEV8F,EhCXuB,CACjCxD,KjCRwB,YiCSxBC,QgCS6B4T,EAAQH,WhCTnB,KgCOE,uBAGVlQ,EAASwQ,MAHC,wEAKVxQ,EAASb,GAAS,EAAD,KALP,yDAAH,qDASXsR,EAAM,wCAAG,sBAAAvW,EAAA,sEAEXiW,EAAYpE,EAAYzQ,IAFb,SAGL0E,EAAS+B,GAAgBgK,EAAYzQ,KAHhC,uBAIL0E,EAASiF,GAAY3G,IAJhB,wEAML0B,EAASb,GAAS,EAAD,KANZ,yDAAH,qDAUZ,OACE,yBAAKqI,UAAU,eACZuE,EAAYvP,OAASzG,GAAoBsa,EAAQ7D,SAChD,yBAAKhF,UAAU,uBACb,wBAAIA,UAAU,iBAAiB3D,EAAE,oBACjC,6BACGA,EAAE,aADL,KACqBnI,GAAS2U,EAAQH,aAI1C,4BACGrM,EAAE,CAAC,eAAD,OAAgBrH,GAAQA,IAD7B,IACsCqH,EAAE,YAExC,kBAAC6M,GAAA,EAAD,CAAOnW,KAAK,KAAKiN,UAAU,cACzB,+BACE,4BACE,4BAAK3D,EAAE,cAAP,KACA,4BAAKvF,EAAQhD,KAEdgD,EAAQjG,mBACP,4BACE,4BAAKwL,EAAE,eAAP,KACA,4BAAKvF,EAAQjG,oBAGhBiG,EAAQlG,qBACP,4BACE,4BAAKyL,EAAE,gBAAP,KACA,4BAAKvF,EAAQlG,sBAGjB,4BACE,4BAAKyL,EAAE,YAAP,KACA,6BAAK,UAAAvF,EAAQpG,aAAR,eAAeoD,MAAf,UAAqBgD,EAAQqS,gBAA7B,aAAqB,EAAkBrV,QAE3CgD,EAAQH,WACT,4BACE,4BAAK0F,EAAE,SAAP,KACA,4BAAKnI,GAAS4C,EAAQJ,OAASI,EAAQH,aAG3C,4BACE,4BAAK0F,EAAE,UAAP,KACA,4BAAKnI,GAAS4C,EAAQJ,YAErBI,EAAQH,WACT,4BACE,4BAAK0F,EAAE,OAAP,KACA,4BAAKnI,GAAS4C,EAAQH,aAG1B,4BACE,4BAAK0F,EAAE,QAAP,KACA,4BACE,6BAAMA,EAAE,CAAC,QAAD,OAASvF,EAAQsS,gBAAgBC,UAAYvS,EAAQsS,gBAAgBC,YAC7E,6BzEpFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQjE,EAAX,EAAWA,MAAX,MAAuB,CAACiE,EAAQ,IAAIC,OAAO,GAAIlE,GAAO7F,KAAK,IAAIhK,QAAQ,QAAS,OAAOgU,OyEoFvFC,CAAK3S,EAAQsS,kBAClBtS,EAAQsS,gBAAgBM,gBACvB,6BACGrN,EAAE,CAAC,mBAAD,OACkBvF,EAAQsS,gBAAgBM,gBAC3C5S,EAAQsS,gBAAgBM,sBAQrCnF,EAAYvP,OAASzG,GACpB,6BACGsa,EAAQ7D,SACP,kBAACtC,GAAA,EAAD,CAAQC,MAAM,UAAU5P,KAAK,KAAKiN,UAAU,OAAO4C,QAASmG,GACzD1M,EAAE,WADL,IACkBnI,GAAS2U,EAAQH,YAGrC,kBAAChG,GAAA,EAAD,CAAQC,MAAM,SAAS5P,KAAK,KAAK6P,QAASqG,GACvC5M,EAAE,YCxGA,cACb,IAAM7D,EAAWwI,cACT2I,EAAaf,sBAAbe,SAER,OAAO,SAAApF,GACL,IAEIqF,EAFEf,EAAUC,GAAavE,GAGcqF,EAAvCrF,EAAYvP,OAASzG,EAA+B,OAC/Csa,EAAQJ,OAASI,EAAQL,MAAoB,UAC7CK,EAAQJ,MAAQI,EAAQL,MAAoB,UACnC,OAElBmB,EAAS,kBAACE,GAAD,CAAatF,YAAaA,IAAiB,CAClDzQ,GAAIyQ,EAAYzQ,GAChB8V,aACAE,aAAa,EACbC,UAAW,WACTvR,EAAS+B,GAAgBgK,EAAYzQ,UCZ9B,cAAO,IACZuI,EAAMoE,eAANpE,EACFhG,EAAe4K,YAAY7E,IAC3B4N,EAAkBC,KAElBC,EAAqB1I,mBAAQ,kBAAMnL,EAAa2C,MAAK,SAACtG,EAAGuG,GAAJ,OAAUkR,aAAYzX,EAAE6D,UAAW0C,EAAE1C,gBAAa,CAC3GF,IAGF,OACE,yBAAK2J,UAAU,WACb,kBAACkJ,GAAA,EAAD,CAAOnW,KAAK,KAAKqX,OAAK,EAACpK,UAAU,kBAAkBqK,SAAO,GACxD,+BACE,4BACE,4BAAKhO,EAAE,SACP,4BAAKA,EAAE,SACP,wBAAI2D,UAAU,cAAc3D,EAAE,aAGlC,+BACG6N,EAAmBjc,KAAI,SAAAsW,GAAW,OACjC,wBAAIxB,IAAKwB,EAAYzQ,GAAI+M,KAAK,SAAS+B,QAAS,kBAAMoH,EAAgBzF,KACpE,4BAxBS,SAAC,GAAD,IAAGhO,EAAH,EAAGA,UAAH,OAAoBA,EAAY+T,aAAO/T,EAAW,cAAgB,KAwBtEgU,CAAehG,IACpB,4BAAKA,EAAYvP,MACjB,wBAAIgL,UAAU,cA7BR,SAAC,GAAD,IAAGtJ,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWG,EAAtB,EAAsBA,QAAtB,OAClB5C,GAAS4C,GAAWA,EAAQJ,QAAU,IAAMI,EAAQH,WAAa,IAAMD,GAAU,IAAMC,GAAa,IA4B5D6T,CAAYjG,YCzBvC,I,OAAA,WAAO,IACZlI,EAAMoE,eAANpE,EACFzF,EAAUqK,YAAYtB,IAFT,EAIKuB,mBAASsD,GAAKjW,aAJnB,oBAIZmG,EAJY,KAINuT,EAJM,KAMnB,OAAKrR,EAGH,kBAACmL,GAAA,EAAD,CAAM/B,UAAU,UACd,kBAACgC,GAAA,EAAD,KACE,kBAACC,GAAD,MACA,4BAAK5F,EAAE,mBACP,kBAACoO,GAAD,CAAM/V,KAAMA,EAAMuT,QAASA,KAE7B,kBAAC/F,GAAA,EAAD,KACGxN,IAAS8P,GAAKjW,aAAe,kBAACmc,GAAD,MAC7BhW,IAAS8P,GAAKjW,aAAe,kBAACoc,GAAD,MAC7BjW,IAAS8P,GAAKC,SAAW,kBAACmG,GAAD,QAZX,OCfR,eAAgB,IAAb3U,EAAY,EAAZA,MACR7E,EAAmB6E,EAAnB7E,QAASC,EAAU4E,EAAV5E,MACTgL,EAAMoE,eAANpE,EAFoB,EAGI6E,oBAAS,GAHb,oBAGrB2J,EAHqB,KAGXC,EAHW,KAmB5B,OATA7E,qBAAU,WACR,OAAO,WACa3W,SAASyb,iBAAiB,mBAAmB7X,QAAU2X,EAAW,EAAI,IAEtFvb,SAAS0b,cAAc,yCAAyCC,UAAUC,OAAO,eAGpF,CAACL,IAGF,yBAAK7K,UAAWQ,KAAW,QAAS,CAAEqK,cACpC,4BAAKxO,EAAE,CAAC,SAAD,OAAUjL,GAAWA,OACzBC,IAAUwZ,GACX,kBAACnI,GAAA,EAAD,CAAQC,MAAM,OAAO5P,KAAK,QAAQ6P,QAlBzB,WACbtT,SAAS0b,cAAc,yCAAyCC,UAAUE,IAAI,YAC9EL,GAAY,KAiBLzO,EAAE,mBAGJhL,GAASwZ,GACV,yBAAK7K,UAAU,QACb,8BAAO3O,MCtBF,I,OAAA,WAMb,OCXa,SAAAyY,GACb,IAAMtR,EAAWwI,cACX/K,EAAQgL,YAAYtF,IAClBgO,EAAaf,sBAAbe,SAER1D,qBAAU,WACJhQ,EAAM7E,SACRuY,EAAS,kBAAC,GAAD,CAAO1T,MAAOA,IAAW,CAChCnC,GAAI,QACJ8V,WAAY,QACZE,cACAC,UAAW,WACTvR,ExDjBuB,CAAExD,KTFR,oBiEuBtB,CAAC2U,EAAUnR,EAAUvC,EAAO6T,IDT/BsB,CEZa,WAAO,IAAD,EACOlK,oBAAS,GADhB,oBACZmK,EADY,KACLC,EADK,KAYnB,OATArF,qBAAU,WACR,IAAKoF,EAAO,CACV,IAAME,EAAU,kBAAMD,GAAS,IAE/B,OADAhc,SAAS8W,iBAAiB,YAAamF,GAChC,kBAAMjc,SAAS+W,oBAAoB,YAAakF,OAGxD,CAACF,EAAOC,IAEJD,EFDOG,IGXD,wEAAgB,GAAhB,IAAGC,UAAH,MAAQ,IAAR,EACbxF,qBAAU,WACR,IAAIyF,EAAU,EACRC,EAAU,SAAAzL,GACd,GAA6B,IAAzBA,EAAM0L,QAAQ1Y,OAAc,CAC9B,IAAMuD,EAAMD,KAAKC,MACY,IAAzByJ,EAAM0L,QAAQ1Y,QAAgBuD,EAAMiV,IACtCxL,EAAMyB,iBAENzB,EAAMC,OAAO0L,SAEfH,EAAUjV,EAAMgV,IAMpB,OAFAnc,SAASwc,KAAK1F,iBAAiB,aAAcuF,EAAS,CAAEI,SAAS,IAE1D,kBAAMzc,SAASwc,KAAKzF,oBAAoB,aAAcsF,EAAS,CAAEI,SAAS,OAChF,CAACN,IHLJO,GITa,WACb,IAAM3V,EAAe4K,YAAY3E,IAC3B0N,EAAkBC,KAExBhE,qBAAU,WACR5P,EAAa4D,QAAQ+P,KACpB,CAAC3T,EAAc2T,IJIlBiC,GAGE,yBAAKjM,UAAWQ,KAAW,2BACzB,kBAAC0L,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,SKVcC,QACW,cAA7B1d,OAAOC,SAAS0d,UAEe,UAA7B3d,OAAOC,SAAS0d,UAEhB3d,OAAOC,SAAS0d,SAASrH,MACvB,2DCRNsH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAe7O,MAAOA,IACpB,kBAAC,gBAAD,CAAe8O,UAAU,iBACvB,kBAACC,GAAD,SAINrd,SAASsd,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3a,MAAK,SAAA4a,GACJA,EAAaC,gBAEdnb,OAAM,SAAAmE,GACLyH,QAAQzH,MAAMA,EAAM7E,c","file":"static/js/main.a23c7d8a.chunk.js","sourcesContent":["import { STORAGE } from '../common/constants';\nimport createStore from './createStore';\nimport { selectConfiguration } from './configuration/selectors';\nimport { configure } from './thunks';\n\nlet initialState;\ntry {\n  initialState = JSON.parse(atob(localStorage.getItem(STORAGE) || 'bnVsbA==')) || undefined;\n} catch (e) {\n  console.warn('Failed to initialize state from storage', e);\n} finally {\n  initialState = initialState || undefined;\n}\n\nconst store = createStore(initialState);\n\nconst config = selectConfiguration(store.getState());\nstore.dispatch(configure(config));\n\nexport default store;\n","export const ACTION = {\n  ACCEPT_PAYMENT: 'ACCEPT_PAYMENT',\n  ACCEPT_SIGNATURE: 'ACCEPT_SIGNATURE',\n  DISCONNECT: 'DISCONNECT',\n  IDENTIFY: 'IDENTIFY',\n  INVOKE_INPUT_OPTION: 'INVOKE_INPUT_OPTION',\n  REJECT_PAYMENT: 'REJECT_PAYMENT',\n  REJECT_SIGNATURE: 'REJECT_SIGNATURE',\n  RESET: 'RESET',\n  SHOW_WELCOME: 'SHOW_WELCOME',\n  TRANSACTION: 'TRANSACTION',\n  TRANSACTION_MODE: 'TRANSACTION_MODE',\n  VOID_PAYMENT: 'VOID_PAYMENT',\n};\n\nexport const APP = {\n  CLOUD_PAY_DISPLAY: 'CLOUD_PAY_DISPLAY',\n};\n\nexport const APP_NAME = {\n  [APP.CLOUD_PAY_DISPLAY]: 'Cloud Pay Display',\n};\n\nexport const APP_BY_NAME = Object.fromEntries(Object.entries(APP_NAME).map(arr => arr.reverse()));\n\nexport const DOMAIN = 'https://www.clover.com';\n\nexport const REG_PRODUCTS = /^(Flex|Mini|Mobile)/i;\n\nexport const REMOTE_APPLICATION_ID = 'virtual-keypad';\n\nexport const STORAGE = 'clover/virtual-keypad';\n\nexport const TRANSACTION = {\n  SALE: 'SALE',\n  CREDIT: 'CREDIT',\n  VOID: 'VOID',\n};\n","export default [];\n","import QS from 'query-string';\n\nimport { DOMAIN, STORAGE } from '../../common/constants';\n\nconst qs = QS.parse(window.location.search);\nconst hash = QS.parse(window.location.hash);\nconst storage = JSON.parse(atob(localStorage.getItem(STORAGE) || 'bnVsbA=='));\n\nconst getCloverDomain = () => {\n  if (storage?.configuration?.cloverDomain) {\n    return storage?.configuration?.cloverDomain;\n  }\n  if (document.referrer) {\n    const referrer = new URL(document.referrer);\n    if (referrer.origin.includes('clover.com')) {\n      return referrer.toString();\n    }\n  }\n  return DOMAIN;\n};\n\nexport default {\n  cloverDomain: getCloverDomain(),\n  merchantId: qs.merchant_id || storage?.configuration?.merchantId || '',\n  accessToken: hash.access_token || storage?.configuration?.accessToken || '',\n  friendlyId: 'Virtual Keypad',\n  loading: undefined,\n};\n","export default {\n  connector: null,\n  connected: false,\n};\n","import Clover from 'remote-pay-cloud';\n\nimport * as CONST from './constants';\nimport initialState from './initialState';\n\nconst fixCreditPayIntent = connector => {\n  // HACK: CREDIT transactions do not properly relay externalId nor externalReferenceId\n  // We are going to override connector.device.doTxStart and populate the externalReferenceId from the externalPaymentId\n  const { doTxStart } = connector.device;\n  // eslint-disable-next-line no-param-reassign\n  connector.device.doTxStart = (payIntent, order, requestInfo) => {\n    if (requestInfo === 'CREDIT') {\n      // eslint-disable-next-line no-param-reassign\n      payIntent.externalReferenceId = payIntent.externalPaymentId;\n    }\n    return doTxStart.call(connector.device, payIntent, order, requestInfo);\n  };\n};\n\nconst tryDispose = connector => {\n  try {\n    // eslint-disable-next-line no-unused-expressions\n    connector?.dispose();\n  } catch (e) {\n    // Do nothing\n  }\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONNECTION_CLEAR:\n      tryDispose(state.connector);\n      return initialState;\n    case CONST.CONNECTION_SET:\n      tryDispose(state.connector);\n      return {\n        ...state,\n        connector: payload,\n        connected: false,\n      };\n    case '@@connector/onDeviceDisconnected':\n      return { ...state, connected: false };\n    case '@@connector/onDeviceReady': {\n      fixCreditPayIntent(state.connector);\n      const request = new Clover.remotepay.RetrieveDeviceStatusRequest();\n      request.setSendLastMessage(true);\n      state.connector.retrieveDeviceStatus(request);\n\n      return { ...state, connected: true };\n    }\n    default:\n      return state;\n  }\n};\n","export default {\n  list: [],\n  selected: '',\n};\n","export default {\n  message: null,\n  stack: null,\n};\n","export default {\n  width: 0,\n  height: 0,\n  strokes: [],\n};\n","const retryFetch = (url, { retries = 3, ...options }) =>\n  fetch(url, options).catch(e => {\n    if (retries > 1) return retryFetch(url, { retries: retries - 1, ...options });\n    throw e;\n  });\n\nexport default retryFetch;\n","import retryFetch from './retryFetch';\n\nexport const deviceApps = ({ cloverDomain, merchantId, deviceId, accessToken }) =>\n  retryFetch(\n    new URL(\n      `/v2/merchant/${merchantId}/device/${deviceId}/current_apps?access_token=${accessToken}`,\n      cloverDomain\n    ).toString(),\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n    }\n  ).then(r => r.json());\n\nexport const devices = ({ cloverDomain, merchantId, accessToken }) =>\n  retryFetch(new URL(`/v3/merchants/${merchantId}/devices?access_token=${accessToken}`, cloverDomain).toString(), {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    },\n  }).then(r => r.json());\n","import { APP_BY_NAME, REG_PRODUCTS } from './constants';\nimport * as api from './api';\n\nconst appsReducer = (o, a) => {\n  const app = APP_BY_NAME[a.appName];\n  return app ? { ...o, [app]: true } : o;\n};\n\nconst createPartition = (array, size) =>\n  array.reduce(\n    (a, o) => {\n      const last = a[a.length - 1];\n      if (last.length === size) {\n        a.push([o]);\n      } else {\n        last.push(o);\n      }\n      return a;\n    },\n    [[]]\n  );\n\nexport default async ({ cloverDomain, merchantId, accessToken }) => {\n  const { elements } = await api.devices({ cloverDomain, merchantId, accessToken });\n  const devices = elements.filter(d => REG_PRODUCTS.test(d.productName));\n\n  // NOTE: We need to limit simultaneous API requests.\n  const partitions = createPartition(devices, 4);\n  for (let i = 0; i < partitions.length; i++) {\n    // eslint-disable-next-line no-await-in-loop\n    partitions[i] = await Promise.all(\n      partitions[i].map(({ id: deviceId }) => api.deviceApps({ cloverDomain, merchantId, accessToken, deviceId }))\n    );\n  }\n  const apps = partitions.flat();\n\n  return devices.map((device, i) => ({\n    ...device,\n    apps: apps[i].applications.reduce(appsReducer, {}),\n  }));\n};\n","export const currency = value => {\n  const n = +value;\n  if (!isNaN(n) && n >= 0) {\n    return (n / 100).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  return '';\n};\n\nexport const card = ({ first6, last4 }) => [first6, '*'.repeat(6), last4].join('').replace(/.{4}/g, ' $&').trim();\n","import { TRANSACTION } from '../../common';\n\nexport default {\n  active: null,\n  mode: TRANSACTION.SALE,\n  data: {},\n};\n","import { combineReducers } from 'redux';\nimport actions from './actions/reducer';\nimport buffer from './buffer/reducer';\nimport configuration from './configuration/reducer';\nimport connection from './connection/reducer';\nimport devices from './devices/reducer';\nimport error from './error/reducer';\nimport signature from './signature/reducer';\nimport status from './status/reducer';\nimport transactions from './transactions/reducer';\n\nconst rootReducer = combineReducers({\n  actions,\n  buffer,\n  configuration,\n  connection,\n  devices,\n  error,\n  signature,\n  status,\n  transactions,\n});\n\nexport default rootReducer;\n","import { ACTION } from '../../common/constants';\nimport * as CONST from './constants';\nimport { CONNECTION_SET } from '../connection/constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ACTIONS_CLEAR:\n      return initialState;\n    case CONST.ACTIONS_APPEND: {\n      const found = state.some(a => a.type === payload.type && a.payload?.description === payload.payload?.description);\n      return found ? state : [...state, payload];\n    }\n    case CONST.ACTIONS_SET:\n      return payload || [];\n    case CONNECTION_SET:\n      return [{ type: ACTION.DISCONNECT, payload: { description: 'Cancel' } }];\n    case '@@connector/onDeviceReady':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onResetDeviceResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onDeviceActivityStart':\n      return payload.inputOptions.map(io => ({ type: ACTION.INVOKE_INPUT_OPTION, payload: io }));\n    case '@@connector/onSaleResponse':\n    case '@@connector/onVoidPaymentResponse':\n    case '@@connector/onManualRefundResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onConfirmPaymentRequest':\n      return [\n        { type: ACTION.ACCEPT_PAYMENT, payload },\n        { type: ACTION.REJECT_PAYMENT, payload },\n      ];\n    case '@@connector/onVerifySignatureRequest':\n      return [\n        { type: ACTION.ACCEPT_SIGNATURE, payload },\n        { type: ACTION.REJECT_SIGNATURE, payload },\n      ];\n    default:\n      return state;\n  }\n};\n","export const ACTIONS_APPEND = 'appendActions';\nexport const ACTIONS_CLEAR = 'clearActions';\nexport const ACTIONS_SET = 'setActions';\n","export const CONNECTION_CLEAR = 'clearConnector';\nexport const CONNECTION_SET = 'setConnector';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.BUFFER_CLEAR:\n      return initialState;\n    case CONST.BUFFER_APPEND:\n      return (state + payload).replace(/^0+/, '').slice(0, 7);\n    case CONST.BUFFER_SET:\n      return payload;\n    case CONST.BUFFER_UNDO:\n      return state.length ? state.slice(0, state.length - 1) : '';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const BUFFER_APPEND = 'appendBuffer';\nexport const BUFFER_CLEAR = 'clearBuffer';\nexport const BUFFER_SET = 'setBuffer';\nexport const BUFFER_UNDO = 'undoBuffer';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONFIGURATION_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case CONST.CONFIGURATION_NOT_LOADING:\n      return {\n        ...state,\n        loading: undefined,\n      };\n    case CONST.CONFIGURATION_SET:\n      return {\n        ...state,\n        cloverDomain: payload.cloverDomain || '',\n        merchantId: payload.merchantId || '',\n        accessToken: payload.accessToken || '',\n        friendlyId: payload.friendlyId || '',\n      };\n    default:\n      return state;\n  }\n};\n","export const CONFIGURATION_LOADING = 'setConfigurationLoading';\nexport const CONFIGURATION_NOT_LOADING = 'setConfigurationNotLoading';\nexport const CONFIGURATION_SET = 'setConfiguration';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.DEVICES_CLEAR_LIST:\n      return {\n        ...state,\n        list: [],\n      };\n    case CONST.DEVICES_CLEAR_SELECTED:\n      return {\n        ...state,\n        selected: '',\n      };\n    case CONST.DEVICES_SET_SELECTED:\n      return {\n        ...state,\n        selected: payload || '',\n      };\n    case CONST.DEVICES_SET_LIST:\n      return {\n        ...state,\n        list: payload || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const DEVICES_CLEAR_LIST = 'clearDevices';\nexport const DEVICES_CLEAR_SELECTED = 'clearDeviceId';\nexport const DEVICES_SET_LIST = 'setDevices';\nexport const DEVICES_SET_SELECTED = 'setDeviceId';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ERROR_CLEAR:\n      return initialState;\n    case CONST.ERROR_SET:\n      return {\n        ...state,\n        message: payload.message,\n        stack: payload.stack,\n      };\n    case '@@connector/onDeviceError':\n      return {\n        ...state,\n        message: `Device Error ${payload.message}`,\n        stack: null,\n      };\n    default:\n      return state;\n  }\n};\n","export const ERROR_CLEAR = 'clearError';\nexport const ERROR_SET = 'setError';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.SIGNATURE_CLEAR:\n      return initialState;\n    case CONST.SIGNATURE_SET:\n      return {\n        width: payload?.width || 0,\n        height: payload?.height || 0,\n        strokes: payload?.strokes || [],\n      };\n    case '@@connector/onVerifySignatureRequest':\n      return {\n        width: payload.signature?.width || 0,\n        height: payload.signature?.height || 0,\n        strokes: payload.signature?.strokes || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const SIGNATURE_CLEAR = 'clearSignature';\nexport const SIGNATURE_SET = 'setSignature';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.STATUS_CLEAR:\n      return '';\n    case CONST.STATUS_SET:\n      return payload || '';\n    case '@@connector/onDeviceReady':\n      return 'Ready';\n    case '@@connector/onResetDeviceResponse':\n      return 'Ready';\n    case '@@connector/onDeviceActivityStart':\n      return payload.message;\n    case '@@connector/onSaleResponse':\n    case '@@connector/onVoidPaymentResponse':\n    case '@@connector/onManualRefundResponse':\n      return 'Ready';\n    case '@@connector/onConfirmPaymentRequest':\n      return payload.challenges[0].message;\n    case '@@connector/onVerifySignatureRequest':\n      return 'Verify Signature';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const STATUS_CLEAR = 'clearStatus';\nexport const STATUS_SET = 'setStatus';\n","import * as CONST from './constants';\nimport initialState from './initialState';\nimport { TRANSACTION } from '../../common';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.TRANSACTIONS_MODE:\n      return {\n        ...state,\n        mode: payload,\n      };\n    case CONST.TRANSACTIONS_ACTIVE: {\n      if (payload.id) {\n        const cur = state.data[payload.id] || {};\n\n        return {\n          ...state,\n          active: payload.id,\n          data: {\n            ...state.data,\n            [payload.id]: {\n              ...state.data[payload.id],\n              id: payload.id,\n              timestamp: Date.now(),\n              type: payload.type || cur.type,\n              amount: payload.amount || cur.amount || 0,\n              tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            },\n          },\n        };\n      }\n      return {\n        ...state,\n        active: '',\n      };\n    }\n    case CONST.TRANSACTIONS_HIDE:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: false,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_SHOW:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: true,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_REMOVE: {\n      const newState = {\n        ...state,\n        data: { ...state.data },\n      };\n      delete newState.data[payload];\n      return newState;\n    }\n    case CONST.TRANSACTIONS_UPDATE: {\n      const cur = state.data[payload.id] || {};\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload.id]: {\n            ...cur,\n            id: payload.id,\n            timestamp: Date.now(),\n            visible: payload.visible || cur.visible || false,\n            amount: payload.amount || cur.amount || 0,\n            tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            type: payload.type || cur.type || '',\n            payment: payload.payment || cur.payment || null,\n          },\n        },\n      };\n    }\n    case '@@connector/onSaleResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.SALE,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      return state;\n    }\n    case '@@connector/onManualRefundResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.credit.externalReferenceId]: {\n              ...state.data[payload.credit.externalReferenceId],\n              id: payload.credit.externalReferenceId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.CREDIT,\n              payment: payload.credit,\n            },\n          },\n        };\n      }\n      return state;\n    }\n    case '@@connector/onVoidPaymentResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.VOID,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    default:\n      return state;\n  }\n};\n","export const TRANSACTIONS_ACTIVE = 'setActiveTransaction';\nexport const TRANSACTIONS_REMOVE = 'removeTransaction';\nexport const TRANSACTIONS_UPDATE = 'updateTransaction';\nexport const TRANSACTIONS_SHOW = 'showTransaction';\nexport const TRANSACTIONS_HIDE = 'hideTransaction';\nexport const TRANSACTIONS_MODE = 'setTransactionMode';\n","import Clover from 'remote-pay-cloud';\nimport { createSelector } from 'reselect';\n\nimport { DOMAIN } from '../../common';\n\nexport const selectConfiguration = state => state.configuration;\n\nexport const selectFriendlyId = createSelector(selectConfiguration, ({ friendlyId }) => friendlyId || 'Virtual Keypad');\n\nexport const selectProduction = createSelector(selectConfiguration, ({ cloverDomain }) => cloverDomain === DOMAIN);\n\nexport const selectCardEntryMethods = createSelector(selectProduction, production =>\n  production\n    ? Clover.CardEntryMethods.DEFAULT\n    : // eslint-disable-next-line no-bitwise\n      Clover.CardEntryMethods.DEFAULT | Clover.CardEntryMethods.CARD_ENTRY_METHOD_MANUAL\n);\n\nexport const selectConfigurationLoading = createSelector(selectConfiguration, ({ loading }) => loading || false);\n","import * as CONST from './constants';\n\nexport const clearError = () => ({ type: CONST.ERROR_CLEAR });\n\nexport const setError = ({ message, stack } = {}) => ({\n  type: CONST.ERROR_SET,\n  payload: { message, stack },\n});\n","import * as CONST from './constants';\n\nexport const appendAction = action => ({\n  type: CONST.ACTIONS_APPEND,\n  payload: action,\n});\n\nexport const clearActions = () => ({ type: CONST.ACTIONS_CLEAR });\n\nexport const setActions = actions => ({\n  type: CONST.ACTIONS_SET,\n  payload: actions,\n});\n","import { createSelector } from 'reselect';\n\nexport const selectConnection = state => state.connection;\n\nexport const selectConnector = createSelector(selectConnection, ({ connector }) => connector);\n\nexport const selectConnected = createSelector(selectConnection, ({ connected }) => connected);\n","import * as CONST from './constants';\n\nexport const clearStatus = () => ({ type: CONST.STATUS_CLEAR });\n\nexport const setStatus = text => ({\n  type: CONST.STATUS_SET,\n  payload: text,\n});\n","import { STORAGE } from './constants';\nimport initialDevices from '../store/devices/initialState';\n\nexport default ({ configuration, devices }) =>\n  localStorage.setItem(\n    STORAGE,\n    btoa(\n      JSON.stringify({\n        configuration: {\n          ...configuration,\n          loading: undefined,\n        },\n        devices: {\n          ...initialDevices,\n          selected: devices.selected,\n        },\n      })\n    )\n  );\n","import * as CONST from './constants';\n\nexport const setConfiguration = ({ cloverDomain, merchantId, accessToken, friendlyId }) => ({\n  type: CONST.CONFIGURATION_SET,\n  payload: { cloverDomain, merchantId, accessToken, friendlyId },\n});\n\nexport const setConfigurationLoading = () => ({ type: CONST.CONFIGURATION_LOADING });\n\nexport const setConfigurationNotLoading = () => ({ type: CONST.CONFIGURATION_NOT_LOADING });\n","import * as CONST from './constants';\n\nexport const clearDeviceId = () => ({ type: CONST.DEVICES_CLEAR_SELECTED });\n\nexport const clearDevices = () => ({ type: CONST.DEVICES_CLEAR_LIST });\n\nexport const setDeviceId = deviceId => ({\n  type: CONST.DEVICES_SET_SELECTED,\n  payload: deviceId,\n});\n\nexport const setDevices = devices => ({\n  type: CONST.DEVICES_SET_LIST,\n  payload: devices,\n});\n","import { APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport fetchDevices from '../../common/fetchDevices';\nimport { setConfiguration, setConfigurationLoading, setConfigurationNotLoading } from '../configuration/actions';\nimport { setDevices } from '../devices/actions';\nimport { setError } from '../error/actions';\n\nexport default ({ cloverDomain, merchantId, accessToken, friendlyId }) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'configure',\n      payload: { cloverDomain, merchantId, accessToken, friendlyId },\n    });\n\n    await dispatch(setConfigurationLoading());\n\n    await dispatch(setConfiguration({ cloverDomain, merchantId, accessToken, friendlyId }));\n    persist(getState());\n\n    const devices = await fetchDevices({ cloverDomain, merchantId, accessToken });\n    await dispatch(setDevices(devices));\n\n    if (!devices.length) {\n      throw new Error('Merchant has no devices');\n    }\n\n    if (!devices.some(a => a.apps[APP.CLOUD_PAY_DISPLAY])) {\n      throw new Error('Merchant has no devices with Cloud Pay Display installed');\n    }\n  } catch (e) {\n    await dispatch(setError(e));\n  } finally {\n    await dispatch(setConfigurationNotLoading());\n  }\n};\n","import { createSelector } from 'reselect';\n\nexport const selectRawDevices = state => state.devices;\n\nexport const selectDeviceId = createSelector(selectRawDevices, ({ selected }) => selected);\n\nexport const selectDevices = createSelector(selectRawDevices, selectDeviceId, ({ list }, deviceId) =>\n  [...list].sort((a, b) => (a.id === deviceId ? -1 : b.id === deviceId ? 1 : 0))\n);\n","import * as CONST from './constants';\n\nexport const clearConnector = () => ({ type: CONST.CONNECTION_CLEAR });\n\nexport const setConnector = connector => ({\n  type: CONST.CONNECTION_SET,\n  payload: connector,\n});\n","import Clover from 'remote-pay-cloud';\n\nimport { REMOTE_APPLICATION_ID, APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport { selectConfiguration } from '../configuration/selectors';\nimport { selectDevices } from '../devices/selectors';\nimport { setConnector } from '../connection/actions';\nimport { setDeviceId } from '../devices/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default deviceId => async (dispatch, getState) => {\n  try {\n    await dispatch({ type: 'connect', payload: deviceId });\n    await dispatch(setDeviceId(deviceId));\n\n    const state = getState();\n    persist(state);\n\n    const { cloverDomain, merchantId, accessToken, friendlyId } = selectConfiguration(state);\n    const device = selectDevices(state).find(d => d.id === deviceId);\n\n    if (!device) throw new Error(`Device not found`);\n    if (!device.apps[APP.CLOUD_PAY_DISPLAY]) throw new Error('Device does not have Cloud Pay Display installed');\n\n    const factory = Clover.CloverConnectorFactoryBuilder.createICloverConnectorFactory({\n      [Clover.CloverConnectorFactoryBuilder.FACTORY_VERSION]: Clover.CloverConnectorFactoryBuilder.VERSION_12,\n    });\n\n    const connector = factory.createICloverConnector(\n      new Clover.WebSocketCloudCloverDeviceConfigurationBuilder(\n        REMOTE_APPLICATION_ID,\n        deviceId,\n        merchantId,\n        accessToken\n      )\n        .setCloverServer(cloverDomain)\n        .setFriendlyId(friendlyId)\n        .build()\n    );\n\n    class Listener extends Clover.remotepay.ICloverConnectorListener {\n      constructor() {\n        super();\n        Object.keys(Object.getPrototypeOf(Object.getPrototypeOf(this))).forEach(type => {\n          this[type] = payload => dispatch({ type: `@@connector/${type}`, payload });\n        });\n      }\n    }\n    const listener = new Listener();\n    connector.addCloverConnectorListener(listener);\n\n    dispatch(setConnector(connector));\n    dispatch(setStatus('Connecting…'));\n\n    connector.initializeConnection();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const setActiveTransaction = ({ id, type, amount, tipAmount } = {}) => ({\n  type: CONST.TRANSACTIONS_ACTIVE,\n  payload: { id, type, amount, tipAmount },\n});\n\nexport const removeTransaction = id => ({\n  type: CONST.TRANSACTIONS_REMOVE,\n  payload: id,\n});\n\nexport const showTransaction = id => ({\n  type: CONST.TRANSACTIONS_SHOW,\n  payload: id,\n});\n\nexport const hideTransaction = id => ({\n  type: CONST.TRANSACTIONS_HIDE,\n  payload: id,\n});\n\nexport const updateTransaction = ({ id, type, amount, tipAmount, payment }) => ({\n  type: CONST.TRANSACTIONS_UPDATE,\n  payload: { id, type, amount, tipAmount, payment },\n});\n\nexport const setTransactionMode = ({ mode }) => ({\n  type: CONST.TRANSACTIONS_MODE,\n  payload: mode,\n});\n","import { clearConnector } from '../connection/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setError } from '../error/actions';\nimport { clearDevices } from '../devices/actions';\nimport { setActiveTransaction } from '../transactions/actions';\n\nexport default () => async (dispatch, getState) => {\n  try {\n    await dispatch({ type: 'disconnect' });\n\n    const connector = selectConnector(getState());\n    try {\n      connector.showWelcomeScreen();\n      await new Promise(resolve => setTimeout(resolve, 500));\n    } catch (e2) {\n      // Do nothing\n    }\n\n    connector.dispose();\n\n    await dispatch(clearConnector());\n    await dispatch(clearDevices());\n    await dispatch(setActiveTransaction());\n  } catch (e) {\n    await dispatch(setError(e));\n  }\n};\n","import en from './en.json';\n\nexport default { en };\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport resources from './locales';\n\nexport default i18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'en',\n    debug: false,\n    keySeparator: '~',\n    nsSeparator: false,\n    interpolation: { escapeValue: false },\n    resources,\n  });\n","import { selectConnector } from '../connection/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'reset' });\n    dispatch(setStatus('Resetting…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.resetDevice();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","export const selectError = state => state.error;\n","import { setError } from '../error';\nimport { ACTION } from '../../common/constants';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'showWelcome' });\n    dispatch(setStatus('Ready'));\n    dispatch(setActions([{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }]));\n\n    const connector = selectConnector(getState());\n    connector.showWelcomeScreen();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const appendBuffer = value => ({\n  type: CONST.BUFFER_APPEND,\n  payload: value,\n});\n\nexport const clearBuffer = () => ({ type: CONST.BUFFER_CLEAR });\n\nexport const setBuffer = value => ({\n  type: CONST.BUFFER_SET,\n  payload: value || '',\n});\n\nexport const undoBuffer = () => ({ type: CONST.BUFFER_UNDO });\n","export const selectBuffer = state => state.buffer;\n","import { createSelector } from 'reselect';\n\nexport const selectRawTransactions = state => state.transactions;\n\nexport const selectTransactions = createSelector(selectRawTransactions, ({ data }) => Object.values(data));\n\nexport const selectActiveTransaction = createSelector(selectRawTransactions, ({ active, data }) => data[active]);\n\nexport const selectActiveTransactionType = createSelector(selectActiveTransaction, active => active?.type);\n\nexport const selectActiveTransactionAmount = createSelector(\n  selectActiveTransaction,\n  active => (active?.amount || 0) + (active?.tipAmount || 0)\n);\n\nexport const selectPaymentTransactions = createSelector(selectTransactions, transactions =>\n  transactions.filter(t => t.payment)\n);\n\nexport const selectVisiblePaymentTransactions = createSelector(selectPaymentTransactions, transactions =>\n  transactions.filter(t => t.visible)\n);\n\nexport const selectTransactionMode = createSelector(selectRawTransactions, ({ mode }) => mode);\n","import Clover from 'remote-pay-cloud';\nimport i18n from '../../i18n';\n\nimport { clearBuffer } from '../buffer/actions';\nimport { selectBuffer } from '../buffer/selectors';\nimport { selectConnector } from '../connection/selectors';\nimport { selectCardEntryMethods } from '../configuration/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\nimport { TRANSACTION } from '../../common/constants';\nimport { updateTransaction, setActiveTransaction, selectTransactionMode } from '../transactions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    const t = await i18n;\n    dispatch({ ...action, type: 'transaction' });\n\n    const state = getState();\n    const buffer = selectBuffer(state);\n    const connector = selectConnector(state);\n    const cardEntryMethods = selectCardEntryMethods(state);\n    const type = selectTransactionMode(state);\n\n    dispatch(clearActions());\n    dispatch(setStatus('Processing...'));\n    dispatch(clearBuffer());\n\n    const amount = +buffer;\n    if (!amount) throw new Error('Amount is required');\n    if (isNaN(amount)) throw new Error('Amount is invalid');\n    if (amount <= 0 || amount > 99_999_99) throw new Error('Amount is invalid');\n\n    let id = Clover.CloverID.getNewId();\n    if (type === TRANSACTION.CREDIT) {\n      // HACK: externalId is ignored.  We need to use the externalReferenceId field, which is limited to 12-chars.\n      id = id.slice(0, 12);\n    }\n\n    dispatch(setActiveTransaction({ id, type, amount }));\n\n    switch (type) {\n      case TRANSACTION.SALE:\n        {\n          const request = new Clover.remotepay.SaleRequest();\n          request.setAmount(amount);\n          request.setExternalId(id);\n          request.setCardEntryMethods(cardEntryMethods);\n\n          dispatch(updateTransaction({ id, type: TRANSACTION.SALE, amount }));\n\n          connector.sale(request);\n        }\n        break;\n      case TRANSACTION.CREDIT:\n        {\n          const request = new Clover.remotepay.ManualRefundRequest();\n          request.setAmount(amount);\n          request.setExternalId(id);\n          request.setCardEntryMethods(cardEntryMethods);\n\n          dispatch(updateTransaction({ id, type: TRANSACTION.CREDIT, amount }));\n\n          connector.manualRefund(request);\n        }\n        break;\n      default:\n        throw new Error(`${t('ERROR~Invalid transaction type')}: ${type}`);\n    }\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { TRANSACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setStatus } from '../status/actions';\nimport { setActiveTransaction } from '../transactions';\n\nexport default payment => async (dispatch, getState) => {\n  try {\n    dispatch({ type: 'voidPayment', payload: payment });\n\n    const { id, externalPaymentId, orderId, amount, tipAmount } = payment;\n    const connector = selectConnector(getState());\n\n    dispatch(clearActions());\n    dispatch(setStatus('Processing…'));\n    if (!id) throw new Error('No payment was specified');\n\n    const type = TRANSACTION.VOID;\n    dispatch(setActiveTransaction({ id: externalPaymentId, type, amount, tipAmount }));\n\n    const request = new Clover.remotepay.VoidPaymentRequest();\n    request.setPaymentId(id);\n    request.setOrderId(orderId);\n    request.setVoidReason(Clover.order.VoidReason.USER_CANCEL);\n    connector.voidPayment(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nexport default initialState => {\n  const middleware = applyMiddleware(thunk);\n\n  // eslint-disable-next-line no-underscore-dangle\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n  const enhancer = devTools ? devTools() : f => f;\n\n  return createStore(rootReducer, initialState, compose(middleware, enhancer));\n};\n","import { createSelector } from 'reselect';\n\nimport { ACTION } from '../../common/constants';\n\nexport const selectActions = state => state.actions;\n\nexport const selectTransactionAction = createSelector(selectActions, actions =>\n  actions.find(a => a.type === ACTION.TRANSACTION)\n);\n\nexport const selectNonTransactionActions = createSelector(selectActions, actions => {\n  const arr = actions.filter(a => a.type !== ACTION.TRANSACTION);\n  if (arr.length === 2) {\n    const [a, b] = arr;\n    if (a.payload?.description === 'No' && b.payload?.description === 'Yes') {\n      return [b, a];\n    }\n  }\n  return arr;\n});\n","import { createSelector } from 'reselect';\n\nexport const selectSignature = state => state.signature;\n\nexport const selectSignatureBounds = createSelector(selectSignature, ({ strokes }) => {\n  const bounds = strokes\n    .map(({ points }) => points)\n    .flat()\n    .reduce(\n      ({ x, X, y, Y }, point) => ({\n        x: Math.min(x, point.x),\n        X: Math.max(X, point.x),\n        y: Math.min(y, point.y),\n        Y: Math.max(Y, point.y),\n      }),\n      { x: Infinity, X: -Infinity, y: Infinity, Y: -Infinity }\n    );\n  return [bounds.x, bounds.y, bounds.X - bounds.x, bounds.Y - bounds.y].join(' ');\n});\n\nexport const selectSignatureLines = createSelector(selectSignature, ({ strokes }) =>\n  strokes.map(({ points }) => points.map(({ x, y }) => `${x},${y}`).join(' '))\n);\n","export const selectStatus = state => state.status;\n","import { createSelector } from 'reselect';\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !devices.length\n);\n","import React from 'react';\n\nexport default ({ id, type = 'text', label, value, disabled, onChange, ...other }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={id}>{label}:</label>\n      <input\n        id={id}\n        type={type}\n        className=\"form-control\"\n        value={value}\n        onChange={event => onChange(event.target.value)}\n        disabled={disabled}\n        {...other}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport default ({ id, label, checked, onChange, disabled, switch: isSwitch, mb0, ...other }) => {\n  return (\n    <div className={classNames('form-group', { 'mb-0': mb0 })}>\n      <div className={classNames('custom-control', { 'custom-switch': isSwitch, 'custom-checkbox': !isSwitch })}>\n        <input\n          id={id}\n          type=\"checkbox\"\n          className=\"custom-control-input\"\n          checked={checked}\n          onChange={() => onChange(!checked)}\n          disabled={disabled}\n          {...other}\n        />\n        <label className=\"custom-control-label font-weight-normal\" htmlFor={id}>\n          {label}\n        </label>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default ({ size = 28 }) => {\n  const { t } = useTranslation();\n  return (\n    <svg\n      className=\"Logo\"\n      id=\"clover-logo-svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 33.15 33.15\"\n      aria-labelledby=\"svg-logo-title\"\n      role=\"image\"\n    >\n      <title id=\"svg-logo-title\">{t('Clover')}</title>\n      <g id=\"clover-symbol-2\" data-name=\"clover-symbol\">\n        <path d=\"M191.45,85.64A7.5,7.5,0,1,0,184,93.09h7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,85.64a7.5,7.5,0,1,1,7.49,7.45h-7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,102.7a7.5,7.5,0,1,0,7.49-7.45h-7.49v7.45Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path\n          d=\"M191.46,102.7A7.5,7.5,0,1,1,184,95.25h7.49v7.45Zm-7.5,5.35a5.38,5.38,0,0,0,5.4-5.35V97.36H184a5.35,5.35,0,1,0,0,10.7h0Z\"\n          transform=\"translate(-176.46 -77.01)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n","import React, { useCallback, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { configure, selectConfiguration, selectConfigurationLoading } from '../../store';\nimport { selectVisible } from './selectors';\nimport { TextField } from '../Fields';\nimport { Logo } from '../SVG';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const configuration = useSelector(selectConfiguration);\n  const loading = useSelector(selectConfigurationLoading);\n  const visible = useSelector(selectVisible);\n\n  const [cloverDomain, setCloverDomain] = useState(configuration.cloverDomain);\n  const [merchantId, setMerchantId] = useState(configuration.merchantId);\n  const [accessToken, setAccessToken] = useState(configuration.accessToken);\n  const [friendlyId, setFriendlyId] = useState(configuration.friendlyId);\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const disabled = useMemo(() => loading || submitting, [loading, submitting]);\n\n  const submit = useCallback(\n    async event => {\n      try {\n        event.preventDefault();\n        setSubmitting(true);\n        await dispatch(configure({ cloverDomain, merchantId, accessToken, friendlyId }));\n      } finally {\n        setSubmitting(false);\n      }\n    },\n    [dispatch, cloverDomain, merchantId, accessToken, friendlyId]\n  );\n\n  const reset = useCallback(\n    event => {\n      event.preventDefault();\n      setCloverDomain(configuration.cloverDomain);\n      setMerchantId(configuration.merchantId);\n      setAccessToken(configuration.accessToken);\n      setFriendlyId(configuration.friendlyId);\n    },\n    [configuration, setCloverDomain, setMerchantId, setAccessToken, setFriendlyId]\n  );\n\n  if (!visible) return null;\n\n  return (\n    <form onSubmit={submit} onReset={reset}>\n      <Card className=\"Configuration\">\n        <CardHeader>\n          <Logo />\n          <h3>{t('Virtual Keypad')}</h3>\n        </CardHeader>\n        {loading && (\n          <CardBody>\n            <p>Loading...</p>\n          </CardBody>\n        )}\n        {!loading && (\n          <>\n            <CardBody>\n              <TextField\n                id=\"cloverDomain\"\n                type=\"url\"\n                label={t('Clover Domain')}\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                autoCapitalize=\"off\"\n                spellCheck=\"false\"\n                value={cloverDomain}\n                onChange={setCloverDomain}\n                disabled={disabled}\n              />\n              <TextField\n                id=\"merchantId\"\n                label={t('Merchant ID')}\n                pattern=\"^[a-zA-Z0-9]{13}$\"\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                autoCapitalize=\"off\"\n                spellCheck=\"false\"\n                value={merchantId}\n                onChange={setMerchantId}\n                disabled={disabled}\n              />\n              <TextField\n                id=\"accessToken\"\n                label={t('Access Token')}\n                pattern=\"^[a-fA-F0-9]{8}(-?[a-fA-F0-9]{4}){3}-?[a-fA-F0-9]{12}$\"\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                autoCapitalize=\"off\"\n                spellCheck=\"false\"\n                value={accessToken}\n                onChange={setAccessToken}\n                disabled={disabled}\n              />\n              <TextField\n                id=\"friendlyId\"\n                label={t('Friendly ID')}\n                value={friendlyId}\n                onChange={setFriendlyId}\n                disabled={disabled}\n              />\n            </CardBody>\n            <CardFooter>\n              <Button type=\"submit\" color=\"success\" disabled={disabled}>\n                {t('Submit')}\n              </Button>\n              <Button type=\"reset\" color=\"secondary\" className=\"ml-2\" disabled={disabled}>\n                {t('Reset')}\n              </Button>\n            </CardFooter>\n          </>\n        )}\n      </Card>\n    </form>\n  );\n};\n","import { createSelector } from 'reselect';\n\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !!devices.length\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nimport { APP } from '../../common/constants';\n\nexport default ({ device, active, disabled, onClick }) => {\n  const { t } = useTranslation();\n\n  const cloud = device.apps[APP.CLOUD_PAY_DISPLAY];\n  const cloudStatus = cloud ? t('Cloud Pay Display is installed') : t('Cloud Pay Display is NOT installed');\n\n  return (\n    <button\n      key={device.id}\n      type=\"button\"\n      className={classNames(\n        'list-group-item d-flex justify-content-between align-items-center list-group-item-action p-1',\n        {\n          disabled,\n          'list-group-item-primary': !disabled && active,\n        }\n      )}\n      onClick={onClick}\n    >\n      <div className=\"p-1\">\n        {device.name && <div className=\"font-weight-bold\">{device.name}</div>}\n        {device.productName} {device.serial}\n      </div>\n      <span\n        className={classNames('badge p-1', {\n          'badge-secondary': disabled,\n          'badge-success': !disabled && cloud,\n          'badge-warning': !disabled && !cloud,\n        })}\n        role=\"img\"\n        aria-label={cloudStatus}\n        title={cloudStatus}\n      >\n        ☁️\n      </span>\n    </button>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectDevices, selectDeviceId, connect, clearDevices } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\nimport Device from './Device';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const devices = useSelector(selectDevices);\n  const deviceId = useSelector(selectDeviceId);\n  const visible = useSelector(selectVisible);\n  const [disabled, setDisabled] = useState();\n\n  const select = useCallback(\n    id => async event => {\n      try {\n        event.preventDefault();\n        setDisabled(true);\n        await dispatch(connect(id));\n      } finally {\n        setDisabled(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const cancel = () => dispatch(clearDevices());\n\n  if (!visible) return null;\n\n  return (\n    <Card className=\"Devices\">\n      <CardHeader>\n        <Logo />\n        <h3>{t('Virtual Keypad')}</h3>\n        <button className=\"close text-light\" title={t('Cancel')} onClick={cancel} disabled={disabled}>\n          &times;\n        </button>\n      </CardHeader>\n      <CardBody>\n        <div className=\"form-group\">\n          <label>{t('Select Devices')}:</label>\n          <div className=\"list-group\">\n            {devices.map(device => (\n              <Device\n                key={device.id}\n                device={device}\n                disabled={disabled}\n                active={device.id === deviceId}\n                onClick={select(device.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n","import { ACTION } from '../../common/constants';\nimport {\n  acceptPayment,\n  acceptSignature,\n  disconnect,\n  identify,\n  invokeInputOption,\n  rejectPayment,\n  rejectSignature,\n  reset,\n  setTransactionMode,\n  showWelcome,\n  transaction,\n} from '../../store';\n\nexport const ACTION_CREATOR = {\n  [ACTION.ACCEPT_PAYMENT]: acceptPayment,\n  [ACTION.ACCEPT_SIGNATURE]: acceptSignature,\n  [ACTION.DISCONNECT]: disconnect,\n  [ACTION.IDENTIFY]: identify,\n  [ACTION.INVOKE_INPUT_OPTION]: invokeInputOption,\n  [ACTION.REJECT_PAYMENT]: rejectPayment,\n  [ACTION.REJECT_SIGNATURE]: rejectSignature,\n  [ACTION.RESET]: reset,\n  [ACTION.SHOW_WELCOME]: showWelcome,\n  [ACTION.TRANSACTION]: transaction,\n  [ACTION.TRANSACTION_MODE]: ({ payload }) => setTransactionMode(payload),\n};\n\nexport const MODE = {\n  TRANSACTION: 'TRANSACTION',\n  HISTORY: 'HISTORY',\n};\n","import { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'acceptPayment' });\n    dispatch(setStatus('Accepting payment…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.acceptPayment(action.payload.payment);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { clearSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'acceptSignature' });\n    dispatch(setStatus('Accepting signature…'));\n    dispatch(clearActions());\n    dispatch(clearSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.acceptSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const clearSignature = () => ({ type: CONST.SIGNATURE_CLEAR });\n\nexport const setSignature = signature => ({\n  type: CONST.SIGNATURE_SET,\n  payload: signature,\n});\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { selectFriendlyId } from '../configuration/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\nimport i18n from '../../i18n';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    const t = await i18n;\n    dispatch({ ...action, type: 'identify' });\n    dispatch(setStatus('Identifying…'));\n    dispatch(\n      setActions([\n        { type: ACTION.SHOW_WELCOME, payload: { description: 'OK' } },\n        { type: ACTION.DISCONNECT, payload: { description: 'Cancel' } },\n      ])\n    );\n\n    const state = getState();\n    const connector = selectConnector(state);\n    const friendlyId = selectFriendlyId(state);\n\n    connector.showMessage(`${friendlyId} ${t('connected')}`);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'invokeInputOption' });\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.InputOption();\n    request.setDescription(action.payload.description);\n    request.setKeyPress(action.payload.keyPress);\n    connector.invokeInputOption(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'rejectPayment' });\n    dispatch(setStatus('Rejecting payment…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.rejectPayment(action.payload.payment, action.payload.challenges[0]);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { clearSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'rejectSignature' });\n    dispatch(setStatus('Rejecting signature…'));\n    dispatch(clearActions());\n    dispatch(clearSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.rejectSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { createSelector } from 'reselect';\nimport { selectConnector } from '../../store';\n\nexport const selectVisible = createSelector(selectConnector, connector => !!connector);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectSignatureBounds, selectSignatureLines } from '../../store';\n\nexport default ({ width = 250, ...other }) => {\n  const bounds = useSelector(selectSignatureBounds);\n  const lines = useSelector(selectSignatureLines);\n\n  if (!lines.length) return null;\n\n  return (\n    <div className=\"Signature\">\n      <svg viewBox={bounds} width={width} {...other}>\n        {lines.map((points, i) => (\n          <polyline key={i} points={points} fill=\"none\" stroke=\"black\" />\n        ))}\n      </svg>\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport { currency } from '../../common';\nimport { selectStatus, selectBuffer, selectActiveTransactionType, selectActiveTransactionAmount } from '../../store';\nimport Signature from './Signature';\n\nexport default () => {\n  const { t } = useTranslation();\n  const status = useSelector(selectStatus);\n  const buffer = useSelector(selectBuffer);\n  const tranType = useSelector(selectActiveTransactionType);\n  const tranAmount = useSelector(selectActiveTransactionAmount);\n\n  const translatedStatus = useMemo(() => {\n    const partial = status.match(/^Partial authorization for (.+)\\nContinue with transaction\\?$/);\n    if (partial) {\n      const [, amount] = partial;\n      return (\n        <Trans i18nKey=\"STATUS~Partial authorization\" amount={amount}>\n          Partial authorization for {{ amount }}\n          Continue with transaction?\n        </Trans>\n      );\n    }\n    const cardEnding = status.match(/^Processing Card ending in (\\d+)…$/);\n    if (cardEnding) {\n      const [, last4] = cardEnding;\n      return (\n        <Trans i18nKey=\"STATUS~Processing card ending\" last4={last4}>\n          Processing Card ending in {{ last4 }}…\n        </Trans>\n      );\n    }\n    return t([`STATUS~${status}`, status]);\n  }, [status, t]);\n\n  return (\n    <div className=\"Screen alert alert-secondary\">\n      {!!tranAmount && (\n        <div className=\"Transaction d-flex justify-content-between bg-white rounded-top border-bottom border-secondary\">\n          <div className=\"font-italic\">{t([`TRANSACTION~${tranType}`, tranType])}</div>\n          <div className=\"font-weight-bold\">{currency(tranAmount)}</div>\n        </div>\n      )}\n      {!buffer && <div>{translatedStatus}</div>}\n      <Signature />\n      {buffer && <div className=\"text-muted\">{buffer}</div>}\n      {buffer && <h3 className=\"text-right\">{currency(buffer)}</h3>}\n    </div>\n  );\n};\n","import React, { forwardRef, useEffect, useState, useMemo, useCallback } from 'react';\nimport { Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nexport default forwardRef(\n  (\n    { action, height, color, keyCodes, disabled, onClick, moreActions, moreText, onMoreClick, children, ...other },\n    ref\n  ) => {\n    const { t } = useTranslation();\n    const [show, setShow] = useState(false);\n\n    const toggle = useCallback(() => setShow(cur => !cur), [setShow]);\n\n    useEffect(() => {\n      if (!disabled) {\n        const keydown = event => {\n          if (keyCodes.includes(event.code)) {\n            event.preventDefault();\n            onClick();\n            return false;\n          }\n          return true;\n        };\n        document.addEventListener('keydown', keydown);\n        return () => document.removeEventListener('keydown', keydown);\n      }\n      return undefined;\n    }, [disabled, keyCodes, onClick]);\n\n    const value = useMemo(() => {\n      const key = action?.payload?.description || action?.type;\n      return key ? t([`ACTION~${key}`, key]) : children;\n    }, [action, children, t]);\n\n    const title = useMemo(\n      () => [t('Shortcut keys'), keyCodes.map(k => t([`KEY_CODE~${k}`, k])).join(', ')].join(': '),\n      [keyCodes, t]\n    );\n\n    if (action && moreActions?.length) {\n      return (\n        <ButtonDropdown isOpen={show} toggle={toggle}>\n          <Button\n            color=\"dark\"\n            className=\"action rounded-left\"\n            onClick={onClick}\n            disabled={disabled}\n            title={title}\n            {...other}\n          >\n            {value || <span>&nbsp;</span>}\n          </Button>\n          <DropdownToggle caret color=\"dark\" className=\"action\" disabled={disabled} />\n          <DropdownMenu className=\"bg-dark\" right>\n            {moreActions.map((a, i) => (\n              <DropdownItem key={i} className=\"bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                {t([`ACTION~${a.payload?.description || a.type}`, a.payload?.description || a.type])}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </ButtonDropdown>\n      );\n    }\n\n    if (moreActions?.length) {\n      return (\n        <div className=\"btn-group-vertical d-flex flex-column\">\n          <ButtonDropdown isOpen={show} toggle={toggle}>\n            <DropdownToggle caret color=\"dark\" outline size=\"sm\" className=\"text-light\">\n              {moreText}\n            </DropdownToggle>\n            <DropdownMenu right className=\"bg-dark\">\n              {moreActions.map((a, i) => (\n                <DropdownItem key={i} className=\"bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                  {t([`ACTION~${a.payload?.description || a.type}`, a.payload?.description || a.type])}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </ButtonDropdown>\n          <Button\n            outline\n            color=\"dark\"\n            className={classNames('h-100', `text-${color || 'light'}`)}\n            onClick={onClick}\n            disabled={disabled}\n            title={title}\n            {...other}\n          >\n            {value || <span>&nbsp;</span>}\n          </Button>\n        </div>\n      );\n    }\n\n    return (\n      <Button\n        innerRef={ref}\n        style={{ height }}\n        outline={!action}\n        color=\"dark\"\n        className={classNames(`text-${color || 'light'}`, { action })}\n        disabled={disabled}\n        onClick={onClick}\n        title={title}\n        {...other}\n      >\n        {value}\n      </Button>\n    );\n  }\n);\n","import React, { useMemo, useCallback, useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  selectTransactionAction,\n  selectNonTransactionActions,\n  appendBuffer,\n  clearBuffer,\n  undoBuffer,\n  transaction,\n  selectTransactionMode,\n} from '../../store';\nimport Key from './Key';\nimport { ACTION_CREATOR } from './constants';\nimport { ACTION, TRANSACTION } from '../../common';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const actions = useSelector(selectNonTransactionActions);\n  const transactionAction = useSelector(selectTransactionAction);\n  const transactionMode = useSelector(selectTransactionMode);\n\n  const [actionClicked, setActionClicked] = useState(false);\n  const keysDisabled = useMemo(() => !transactionAction || actionClicked, [transactionAction, actionClicked]);\n\n  const onAction = useCallback(\n    async action => {\n      setActionClicked(true);\n      if (action.type === ACTION.INVOKE_INPUT_OPTION || action.type === ACTION.TRANSACTION_MODE) {\n        setTimeout(() => setActionClicked(false), 250);\n      }\n      await dispatch(ACTION_CREATOR[action.type](action));\n    },\n    [dispatch, setActionClicked]\n  );\n\n  const actionHandler = action => async () => onAction(action);\n\n  useEffect(() => {\n    if (actions.length) setActionClicked(false);\n  }, [setActionClicked, actions]);\n\n  const keyRef = useRef();\n  const [keyHeight, setKeyHeight] = useState();\n  useEffect(() => {\n    if (keyRef.current) {\n      setKeyHeight(keyRef.current.offsetWidth);\n    }\n  }, [keyRef, setKeyHeight]);\n\n  const [action1, action2, ...moreActions] = actions;\n\n  return (\n    <div className=\"Keys\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action1 || {}}\n            disabled={!action1 || actionClicked}\n            keyCodes={['F1', 'NumpadDivide']}\n            onClick={actionHandler(action1)}\n          />\n        </div>\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action2 || {}}\n            disabled={!action2 || actionClicked}\n            keyCodes={['F2', 'NumpadMultiply']}\n            onClick={actionHandler(action2)}\n            moreActions={moreActions}\n            onMoreClick={action => onAction(action)}\n          />\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            ref={keyRef}\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad7', 'Digit7']}\n            onClick={() => dispatch(appendBuffer('7'))}\n          >\n            {t('KEY~7')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad8', 'Digit8']} onClick={() => dispatch(appendBuffer('8'))}>\n            {t('KEY~8')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad9', 'Digit9']} onClick={() => dispatch(appendBuffer('9'))}>\n            {t('KEY~9')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"danger\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadSubtract', 'Escape']}\n            onClick={() => dispatch(clearBuffer())}\n          >\n            {t('KEY~X')}\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad4', 'Digit4']}\n            onClick={() => dispatch(appendBuffer('4'))}\n          >\n            {t('KEY~4')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad5', 'Digit5']} onClick={() => dispatch(appendBuffer('5'))}>\n            {t('KEY~5')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad6', 'Digit6']} onClick={() => dispatch(appendBuffer('6'))}>\n            {t('KEY~6')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"warning\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadAdd', 'Backspace', 'Delete']}\n            onClick={() => dispatch(undoBuffer())}\n          >\n            {t('KEY~<')}\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-9\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-4 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad1', 'Digit1']}\n                onClick={() => dispatch(appendBuffer('1'))}\n              >\n                {t('KEY~1')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad2', 'Digit2']} onClick={() => dispatch(appendBuffer('2'))}>\n                {t('KEY~2')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad3', 'Digit3']} onClick={() => dispatch(appendBuffer('3'))}>\n                {t('KEY~3')}\n              </Key>\n            </div>\n          </div>\n          <div className=\"row no-gutters\">\n            <div className=\"col-8 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad0', 'Digit0']}\n                onClick={() => dispatch(appendBuffer('0'))}\n              >\n                {t('KEY~0')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key\n                disabled={keysDisabled}\n                keyCodes={['NumpadDecimal', 'Period']}\n                onClick={() => dispatch(appendBuffer('00'))}\n              >\n                {t('KEY~00')}\n              </Key>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"success\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadEnter', 'Enter']}\n            onClick={() => dispatch(transaction())}\n            moreText={t([`TRANSACTION~${transactionMode}`, transactionMode])}\n            moreActions={[\n              {\n                type: ACTION.TRANSACTION_MODE,\n                payload: { description: 'TRANSACTION~SALE', mode: TRANSACTION.SALE },\n              },\n              {\n                type: ACTION.TRANSACTION_MODE,\n                payload: { description: 'TRANSACTION~CREDIT', mode: TRANSACTION.CREDIT },\n              },\n            ]}\n            onMoreClick={action => onAction(action)}\n          >\n            {t('KEY~O')}\n          </Key>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { disconnect, reset, showWelcome } from '../../store';\nimport { CheckboxField } from '../Fields';\nimport { MODE } from './constants';\n\nexport default ({ mode, setMode }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const toggle = useCallback(() => setShow(!show), [show, setShow]);\n  const onShowWelcome = useCallback(() => dispatch(showWelcome()), [dispatch]);\n  const onReset = useCallback(() => dispatch(reset()), [dispatch]);\n  const onDisconnect = useCallback(() => dispatch(disconnect()), [dispatch]);\n\n  return (\n    <ButtonDropdown isOpen={show} toggle={toggle}>\n      <DropdownToggle size=\"sm\" outline color=\"dark\" className=\"text-light\" onClick={toggle} title={t('Menu')}>\n        ☰\n      </DropdownToggle>\n      <DropdownMenu right>\n        {Object.values(MODE).map(m => (\n          <DropdownItem key={m} onClick={() => setMode(m)}>\n            <CheckboxField id={`mode-${m}`} label={t([`MODE~${m}`, m])} checked={m === mode} readOnly mb0 />\n          </DropdownItem>\n        ))}\n        <DropdownItem divider />\n        <DropdownItem onClick={onShowWelcome}>{t('Show Welcome')}</DropdownItem>\n        <DropdownItem onClick={onReset}>{t('Reset Device')}</DropdownItem>\n        <DropdownItem onClick={onDisconnect}>{t('Disconnect')}</DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  );\n};\n","export default ({ amount, tipAmount, payment }) => {\n  const start = (amount || 0) + (tipAmount || 0);\n  const final = (payment?.amount || 0) + (payment?.tipAmount || 0);\n  const partial = start > final;\n  const remaining = start - final;\n  return { start, final, partial, remaining };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Table } from 'reactstrap';\nimport { useToasts } from 'react-toast-notifications';\nimport { useTranslation } from 'react-i18next';\n\nimport { currency, card, TRANSACTION } from '../../common';\nimport { voidPayment, setError, setBuffer, transaction as doTransaction, hideTransaction } from '../../store';\nimport parseAmounts from './parseAmounts';\n\nexport default ({ transaction }) => {\n  const { type, payment } = transaction || {};\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { removeToast } = useToasts();\n\n  const amounts = parseAmounts(transaction);\n\n  const onRemaining = async () => {\n    try {\n      await dispatch(setBuffer(amounts.remaining));\n      await dispatch(doTransaction());\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  };\n\n  const onVoid = async () => {\n    try {\n      removeToast(transaction.id);\n      await dispatch(hideTransaction(transaction.id));\n      await dispatch(voidPayment(payment));\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  };\n\n  return (\n    <div className=\"Transaction\">\n      {transaction.type !== TRANSACTION.VOID && amounts.partial && (\n        <div className=\"alert alert-warning\">\n          <h6 className=\"alert-heading\">{t('Partial Payment')}</h6>\n          <div>\n            {t('Remaining')}: {currency(amounts.remaining)}\n          </div>\n        </div>\n      )}\n      <h5>\n        {t([`TRANSACTION~${type}`, type])} {t('Details')}\n      </h5>\n      <Table size=\"sm\" className=\"small mb-0\">\n        <tbody>\n          <tr>\n            <th>{t('Payment ID')}:</th>\n            <td>{payment.id}</td>\n          </tr>\n          {payment.externalPaymentId && (\n            <tr>\n              <th>{t('External ID')}:</th>\n              <td>{payment.externalPaymentId}</td>\n            </tr>\n          )}\n          {payment.externalReferenceId && (\n            <tr>\n              <th>{t('External Ref')}:</th>\n              <td>{payment.externalReferenceId}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Order ID')}:</th>\n            <td>{payment.order?.id || payment.orderRef?.id}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>{t('Total')}:</th>\n              <td>{currency(payment.amount + payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Amount')}:</th>\n            <td>{currency(payment.amount)}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>{t('Tip')}:</th>\n              <td>{currency(payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Card')}:</th>\n            <td>\n              <div>{t([`CARD~${payment.cardTransaction.cardType}`, payment.cardTransaction.cardType])}</div>\n              <div>{card(payment.cardTransaction)}</div>\n              {payment.cardTransaction.cardholderName && (\n                <div>\n                  {t([\n                    `CARDHOLDER_NAME~${payment.cardTransaction.cardholderName}`,\n                    payment.cardTransaction.cardholderName,\n                  ])}\n                </div>\n              )}\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n      {transaction.type === TRANSACTION.SALE && (\n        <div>\n          {amounts.partial && (\n            <Button color=\"primary\" size=\"sm\" className=\"mr-1\" onClick={onRemaining}>\n              {t('Process')} {currency(amounts.remaining)}\n            </Button>\n          )}\n          <Button color=\"danger\" size=\"sm\" onClick={onVoid}>\n            {t('Void')}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { hideTransaction } from '../../store';\nimport { TRANSACTION } from '../../common';\nimport parseAmounts from './parseAmounts';\nimport Transaction from './Transaction';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { addToast } = useToasts();\n\n  return transaction => {\n    const amounts = parseAmounts(transaction);\n\n    let appearance;\n    if (transaction.type === TRANSACTION.VOID) appearance = 'info';\n    else if (amounts.final >= amounts.start) appearance = 'success';\n    else if (amounts.final < amounts.start) appearance = 'warning';\n    else appearance = 'info';\n\n    addToast(<Transaction transaction={transaction} />, {\n      id: transaction.id,\n      appearance,\n      autoDismiss: false,\n      onDismiss: () => {\n        dispatch(hideTransaction(transaction.id));\n      },\n    });\n  };\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Table } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport { format, compareDesc } from 'date-fns';\n\nimport { selectPaymentTransactions } from '../../store';\nimport { currency } from '../../common';\nimport { useShowTransaction } from '../Transaction';\n\nconst parseAmount = ({ amount, tipAmount, payment }) =>\n  currency(payment ? (payment.amount || 0) + (payment.tipAmount || 0) : (amount || 0) + (tipAmount || 0));\n\nconst parseTimestamp = ({ timestamp }) => (timestamp ? format(timestamp, 'M/d h:mm a') : '??');\n\nexport default () => {\n  const { t } = useTranslation();\n  const transactions = useSelector(selectPaymentTransactions);\n  const showTransaction = useShowTransaction();\n\n  const sortedTransactions = useMemo(() => transactions.sort((a, b) => compareDesc(a.timestamp, b.timestamp)), [\n    transactions,\n  ]);\n\n  return (\n    <div className=\"History\">\n      <Table size=\"sm\" hover className=\"table-secondary\" striped>\n        <thead>\n          <tr>\n            <th>{t('Date')}</th>\n            <th>{t('Type')}</th>\n            <th className=\"text-right\">{t('Amount')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedTransactions.map(transaction => (\n            <tr key={transaction.id} role=\"button\" onClick={() => showTransaction(transaction)}>\n              <td>{parseTimestamp(transaction)}</td>\n              <td>{transaction.type}</td>\n              <td className=\"text-right\">{parseAmount(transaction)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { Logo } from '../SVG';\nimport { MODE } from './constants';\nimport { selectVisible } from './selectors';\nimport Screen from './Screen';\nimport Keys from './Keys';\nimport Menu from './Menu';\nimport History from './History';\nimport './styles.scss';\n\nexport default () => {\n  const { t } = useTranslation();\n  const visible = useSelector(selectVisible);\n\n  const [mode, setMode] = useState(MODE.TRANSACTION);\n\n  if (!visible) return null;\n\n  return (\n    <Card className=\"Keypad\">\n      <CardHeader>\n        <Logo />\n        <h3>{t('Virtual Keypad')}</h3>\n        <Menu mode={mode} setMode={setMode} />\n      </CardHeader>\n      <CardBody>\n        {mode === MODE.TRANSACTION && <Screen />}\n        {mode === MODE.TRANSACTION && <Keys />}\n        {mode === MODE.HISTORY && <History />}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Button } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nexport default ({ error }) => {\n  const { message, stack } = error;\n  const { t } = useTranslation();\n  const [expanded, setExpanded] = useState(false);\n\n  const expand = () => {\n    document.querySelector('.react-toast-notifications__container').classList.add('expanded');\n    setExpanded(true);\n  };\n\n  useEffect(() => {\n    return () => {\n      const remaining = document.querySelectorAll('.Error.expanded').length - (expanded ? 1 : 0);\n      if (!remaining) {\n        document.querySelector('.react-toast-notifications__container').classList.remove('expanded');\n      }\n    };\n  }, [expanded]);\n\n  return (\n    <div className={classNames('Error', { expanded })}>\n      <h5>{t([`ERROR~${message}`, message])}</h5>\n      {!!stack && !expanded && (\n        <Button color=\"link\" size=\"small\" onClick={expand}>\n          {t('Show details')}\n        </Button>\n      )}\n      {!!stack && expanded && (\n        <pre className=\"mb-0\">\n          <code>{stack}</code>\n        </pre>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Configuration from '../Configuration';\nimport Devices from '../Devices/Devices';\nimport Keypad from '../Keypad';\nimport { useError } from '../Error';\nimport { useTransactions } from '../Transaction';\nimport useMouse from './useMouse';\nimport usePreventDoubleTapZoom from './usePreventDoubleTapZoom';\nimport './styles.scss';\n\nexport default () => {\n  const mouse = useMouse();\n  useError(mouse);\n  usePreventDoubleTapZoom();\n  useTransactions();\n\n  return (\n    <div className={classNames('App container maxwidth')}>\n      <Configuration />\n      <Devices />\n      <Keypad />\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { selectError, clearError } from '../../store';\nimport Error from './Error';\n\nexport default autoDismiss => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    if (error.message) {\n      addToast(<Error error={error} />, {\n        id: 'error',\n        appearance: 'error',\n        autoDismiss,\n        onDismiss: () => {\n          dispatch(clearError());\n        },\n      });\n    }\n  }, [addToast, dispatch, error, autoDismiss]);\n};\n","import { useState, useEffect } from 'react';\n\nexport default () => {\n  const [mouse, setMouse] = useState(false);\n\n  useEffect(() => {\n    if (!mouse) {\n      const onHover = () => setMouse(true);\n      document.addEventListener('mouseover', onHover);\n      return () => document.removeEventListener('mouseover', onHover);\n    }\n    return undefined;\n  }, [mouse, setMouse]);\n\n  return mouse;\n};\n","import { useEffect } from 'react';\n\nexport default ({ ms = 500 } = {}) =>\n  useEffect(() => {\n    let expires = 0;\n    const handler = event => {\n      if (event.touches.length === 1) {\n        const now = Date.now();\n        if (event.touches.length === 1 && now > expires) {\n          event.preventDefault();\n          // Trigger a fake click for the tap we just prevented\n          event.target.click();\n        }\n        expires = now + ms;\n      }\n    };\n\n    document.body.addEventListener('touchstart', handler, { passive: false });\n\n    return () => document.body.removeEventListener('touchstart', handler, { passive: false });\n  }, [ms]);\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectVisiblePaymentTransactions } from '../../store';\nimport useShowTransaction from './useShowTransaction';\n\nexport default () => {\n  const transactions = useSelector(selectVisiblePaymentTransactions);\n  const showTransaction = useShowTransaction();\n\n  useEffect(() => {\n    transactions.forEach(showTransaction);\n  }, [transactions, showTransaction]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { ToastProvider } from 'react-toast-notifications';\n\nimport store from './store';\nimport App from './components/App';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <ToastProvider placement=\"bottom-center\">\n        <App />\n      </ToastProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}